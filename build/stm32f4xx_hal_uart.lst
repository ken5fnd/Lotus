ARM GAS  /tmp/cc4hqLkf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.weak	HAL_UART_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_MspInit:
  27              	.LFB135:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  /tmp/cc4hqLkf.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
ARM GAS  /tmp/cc4hqLkf.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
ARM GAS  /tmp/cc4hqLkf.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
ARM GAS  /tmp/cc4hqLkf.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc4hqLkf.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc4hqLkf.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
ARM GAS  /tmp/cc4hqLkf.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  /tmp/cc4hqLkf.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cc4hqLkf.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  /tmp/cc4hqLkf.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
ARM GAS  /tmp/cc4hqLkf.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 668 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
  35              		.loc 1 674 0
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE135:
  40 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	HAL_UART_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_UART_Init:
  50              	.LFB130:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
  51              		.loc 1 318 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
  56              		.loc 1 320 0
  57 0000 0028     		cmp	r0, #0
  58 0002 00F00481 		beq	.L12
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
  59              		.loc 1 318 0
  60 0006 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 32
  63              		.cfi_offset 3, -32
  64              		.cfi_offset 4, -28
  65              		.cfi_offset 5, -24
  66              		.cfi_offset 6, -20
  67              		.cfi_offset 7, -16
ARM GAS  /tmp/cc4hqLkf.s 			page 14


  68              		.cfi_offset 8, -12
  69              		.cfi_offset 9, -8
  70              		.cfi_offset 14, -4
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
  71              		.loc 1 339 0
  72 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  73 000e 0446     		mov	r4, r0
  74 0010 03F0FF02 		and	r2, r3, #255
  75 0014 002B     		cmp	r3, #0
  76 0016 00F0F580 		beq	.L19
  77              	.LVL2:
  78              	.L5:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79              		.loc 1 363 0
  80 001a 2368     		ldr	r3, [r4]
  81              	.LBB20:
  82              	.LBB21:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 15


 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/cc4hqLkf.s 			page 16


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
ARM GAS  /tmp/cc4hqLkf.s 			page 17


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/cc4hqLkf.s 			page 18


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 19


 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
ARM GAS  /tmp/cc4hqLkf.s 			page 20


1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
ARM GAS  /tmp/cc4hqLkf.s 			page 21


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 22


1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  /tmp/cc4hqLkf.s 			page 23


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
ARM GAS  /tmp/cc4hqLkf.s 			page 24


1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
ARM GAS  /tmp/cc4hqLkf.s 			page 25


1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
ARM GAS  /tmp/cc4hqLkf.s 			page 26


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc4hqLkf.s 			page 27


1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
ARM GAS  /tmp/cc4hqLkf.s 			page 28


1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 29


1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc4hqLkf.s 			page 30


1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /tmp/cc4hqLkf.s 			page 31


1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  /tmp/cc4hqLkf.s 			page 32


1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
ARM GAS  /tmp/cc4hqLkf.s 			page 33


1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
ARM GAS  /tmp/cc4hqLkf.s 			page 34


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
ARM GAS  /tmp/cc4hqLkf.s 			page 35


1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/cc4hqLkf.s 			page 36


1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc4hqLkf.s 			page 37


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc4hqLkf.s 			page 38


2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
ARM GAS  /tmp/cc4hqLkf.s 			page 39


2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
ARM GAS  /tmp/cc4hqLkf.s 			page 40


2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/cc4hqLkf.s 			page 41


2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/cc4hqLkf.s 			page 42


2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/cc4hqLkf.s 			page 43


2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc4hqLkf.s 			page 44


2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc4hqLkf.s 			page 45


2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
ARM GAS  /tmp/cc4hqLkf.s 			page 46


2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cc4hqLkf.s 			page 47


2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc4hqLkf.s 			page 48


2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
ARM GAS  /tmp/cc4hqLkf.s 			page 49


2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
ARM GAS  /tmp/cc4hqLkf.s 			page 50


2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc4hqLkf.s 			page 51


2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc4hqLkf.s 			page 52


2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 53


2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 54


2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
ARM GAS  /tmp/cc4hqLkf.s 			page 55


2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
ARM GAS  /tmp/cc4hqLkf.s 			page 56


3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
  83              		.loc 1 3062 0
  84 001c 2669     		ldr	r6, [r4, #16]
  85              	.LBE21:
  86              	.LBE20:
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  87              		.loc 1 360 0
  88 001e 2422     		movs	r2, #36
  89 0020 84F83920 		strb	r2, [r4, #57]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90              		.loc 1 363 0
  91 0024 D868     		ldr	r0, [r3, #12]
  92 0026 20F40050 		bic	r0, r0, #8192
  93              	.LBB26:
  94              	.LBB22:
  95              		.loc 1 3062 0
  96 002a D4E90225 		ldrd	r2, r5, [r4, #8]
  97              	.LBE22:
  98              	.LBE26:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  99              		.loc 1 363 0
 100 002e D860     		str	r0, [r3, #12]
 101              	.LVL3:
 102              	.LBB27:
 103              	.LBB23:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 104              		.loc 1 3053 0
 105 0030 1969     		ldr	r1, [r3, #16]
 106              		.loc 1 3062 0
 107 0032 E069     		ldr	r0, [r4, #28]
 108              	.LVL4:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 109              		.loc 1 3053 0
 110 0034 21F44051 		bic	r1, r1, #12288
 111 0038 2943     		orrs	r1, r1, r5
 112 003a 1961     		str	r1, [r3, #16]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 113              		.loc 1 3063 0
 114 003c D968     		ldr	r1, [r3, #12]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 115              		.loc 1 3062 0
 116 003e 6569     		ldr	r5, [r4, #20]
 117 0040 3243     		orrs	r2, r2, r6
 118              		.loc 1 3063 0
 119 0042 21F41641 		bic	r1, r1, #38400
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 120              		.loc 1 3062 0
ARM GAS  /tmp/cc4hqLkf.s 			page 57


 121 0046 2A43     		orrs	r2, r2, r5
 122              		.loc 1 3063 0
 123 0048 21F00C01 		bic	r1, r1, #12
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 124              		.loc 1 3062 0
 125 004c 0243     		orrs	r2, r2, r0
 126              		.loc 1 3063 0
 127 004e 0A43     		orrs	r2, r2, r1
 128 0050 DA60     		str	r2, [r3, #12]
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 129              		.loc 1 3069 0
 130 0052 5A69     		ldr	r2, [r3, #20]
 131 0054 A169     		ldr	r1, [r4, #24]
 132 0056 22F44072 		bic	r2, r2, #768
 133 005a 0A43     		orrs	r2, r2, r1
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 134              		.loc 1 3072 0
 135 005c B0F5004F 		cmp	r0, #32768
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 136              		.loc 1 3069 0
 137 0060 5A61     		str	r2, [r3, #20]
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6)
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 138              		.loc 1 3076 0
 139 0062 AA4A     		ldr	r2, .L21
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 140              		.loc 1 3072 0
 141 0064 71D0     		beq	.L20
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6)
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 142              		.loc 1 3095 0
ARM GAS  /tmp/cc4hqLkf.s 			page 58


 143 0066 9342     		cmp	r3, r2
 144 0068 00F0D380 		beq	.L10
 145 006c 02F58062 		add	r2, r2, #1024
 146 0070 9342     		cmp	r3, r2
 147 0072 00F0CE80 		beq	.L10
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 148              		.loc 1 3107 0
 149 0076 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 150              	.LVL5:
 151 007a A54F     		ldr	r7, .L21+4
 152 007c 6368     		ldr	r3, [r4, #4]
 153 007e 00EB8000 		add	r0, r0, r0, lsl #2
 154 0082 00EB8000 		add	r0, r0, r0, lsl #2
 155 0086 9B00     		lsls	r3, r3, #2
 156 0088 B0FBF3F3 		udiv	r3, r0, r3
 157 008c A7FB0323 		umull	r2, r3, r7, r3
 158 0090 5B09     		lsrs	r3, r3, #5
 159 0092 1D01     		lsls	r5, r3, #4
 160 0094 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 161              	.LVL6:
 162 0098 6668     		ldr	r6, [r4, #4]
 163 009a 00EB8000 		add	r0, r0, r0, lsl #2
 164 009e 00EB8000 		add	r0, r0, r0, lsl #2
 165 00a2 B600     		lsls	r6, r6, #2
 166 00a4 B0FBF6F6 		udiv	r6, r0, r6
 167 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 168              	.LVL7:
 169 00ac 6368     		ldr	r3, [r4, #4]
 170 00ae 00EB8000 		add	r0, r0, r0, lsl #2
 171 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 172 00b6 9B00     		lsls	r3, r3, #2
 173 00b8 B0FBF3F3 		udiv	r3, r0, r3
 174 00bc A7FB0323 		umull	r2, r3, r7, r3
 175 00c0 5B09     		lsrs	r3, r3, #5
 176 00c2 4FF06409 		mov	r9, #100
 177 00c6 09FB1363 		mls	r3, r9, r3, r6
 178 00ca 1B01     		lsls	r3, r3, #4
 179 00cc 3233     		adds	r3, r3, #50
 180 00ce A7FB0323 		umull	r2, r3, r7, r3
 181 00d2 5B09     		lsrs	r3, r3, #5
 182 00d4 03F0F006 		and	r6, r3, #240
 183 00d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 184              	.LVL8:
 185 00dc 6268     		ldr	r2, [r4, #4]
 186 00de 00EB8000 		add	r0, r0, r0, lsl #2
 187 00e2 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 59


 188 00e6 9300     		lsls	r3, r2, #2
 189 00e8 B0FBF3F8 		udiv	r8, r0, r3
 190 00ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 191              	.LVL9:
 192              	.L18:
 193 00f0 D4E90021 		ldrd	r2, r1, [r4]
 194 00f4 00EB8000 		add	r0, r0, r0, lsl #2
 195 00f8 8B00     		lsls	r3, r1, #2
 196 00fa 00EB8000 		add	r0, r0, r0, lsl #2
 197 00fe B0FBF3F3 		udiv	r3, r0, r3
 198 0102 A7FB0313 		umull	r1, r3, r7, r3
 199 0106 5B09     		lsrs	r3, r3, #5
 200 0108 09FB1383 		mls	r3, r9, r3, r8
 201 010c 1B01     		lsls	r3, r3, #4
 202 010e 3233     		adds	r3, r3, #50
 203 0110 A7FB0313 		umull	r1, r3, r7, r3
 204 0114 C3F34313 		ubfx	r3, r3, #5, #4
 205 0118 3343     		orrs	r3, r3, r6
 206 011a 2B44     		add	r3, r3, r5
 207 011c 9360     		str	r3, [r2, #8]
 208              	.L9:
 209              	.LVL10:
 210              	.LBE23:
 211              	.LBE27:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 212              		.loc 1 371 0
 213 011e 1369     		ldr	r3, [r2, #16]
 214 0120 23F49043 		bic	r3, r3, #18432
 215 0124 1361     		str	r3, [r2, #16]
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 216              		.loc 1 372 0
 217 0126 5369     		ldr	r3, [r2, #20]
 218 0128 23F02A03 		bic	r3, r3, #42
 219 012c 5361     		str	r3, [r2, #20]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220              		.loc 1 375 0
 221 012e D368     		ldr	r3, [r2, #12]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 222              		.loc 1 378 0
 223 0130 0025     		movs	r5, #0
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 224              		.loc 1 379 0
 225 0132 2021     		movs	r1, #32
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226              		.loc 1 375 0
 227 0134 43F40053 		orr	r3, r3, #8192
 228 0138 D360     		str	r3, [r2, #12]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 229              		.loc 1 382 0
 230 013a 2846     		mov	r0, r5
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 231              		.loc 1 378 0
 232 013c E563     		str	r5, [r4, #60]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 233              		.loc 1 379 0
 234 013e 84F83910 		strb	r1, [r4, #57]
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 60


 235              		.loc 1 380 0
 236 0142 84F83A10 		strb	r1, [r4, #58]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237              		.loc 1 383 0
 238 0146 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 239              	.LVL11:
 240              	.L20:
 241              	.LBB28:
 242              	.LBB24:
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 243              		.loc 1 3076 0
 244 014a 9342     		cmp	r3, r2
 245 014c 00F09F80 		beq	.L7
 246 0150 02F58062 		add	r2, r2, #1024
 247 0154 9342     		cmp	r3, r2
 248 0156 00F09A80 		beq	.L7
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 249              		.loc 1 3088 0
 250 015a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 251              	.LVL12:
 252 015e 6C4F     		ldr	r7, .L21+4
 253 0160 6368     		ldr	r3, [r4, #4]
 254 0162 00EB8000 		add	r0, r0, r0, lsl #2
 255 0166 00EB8000 		add	r0, r0, r0, lsl #2
 256 016a 5B00     		lsls	r3, r3, #1
 257 016c B0FBF3F3 		udiv	r3, r0, r3
 258 0170 A7FB0323 		umull	r2, r3, r7, r3
 259 0174 5B09     		lsrs	r3, r3, #5
 260 0176 1E01     		lsls	r6, r3, #4
 261 0178 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 262              	.LVL13:
 263 017c 6568     		ldr	r5, [r4, #4]
 264 017e 00EB8000 		add	r0, r0, r0, lsl #2
 265 0182 00EB8000 		add	r0, r0, r0, lsl #2
 266 0186 6D00     		lsls	r5, r5, #1
 267 0188 B0FBF5F5 		udiv	r5, r0, r5
 268 018c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 269              	.LVL14:
 270 0190 6368     		ldr	r3, [r4, #4]
 271 0192 00EB8000 		add	r0, r0, r0, lsl #2
 272 0196 00EB8000 		add	r0, r0, r0, lsl #2
 273 019a 5B00     		lsls	r3, r3, #1
 274 019c B0FBF3F3 		udiv	r3, r0, r3
 275 01a0 A7FB0323 		umull	r2, r3, r7, r3
 276 01a4 5B09     		lsrs	r3, r3, #5
 277 01a6 4FF06409 		mov	r9, #100
 278 01aa 09FB1353 		mls	r3, r9, r3, r5
 279 01ae DB00     		lsls	r3, r3, #3
 280 01b0 3233     		adds	r3, r3, #50
 281 01b2 A7FB0323 		umull	r2, r3, r7, r3
 282 01b6 1B09     		lsrs	r3, r3, #4
 283 01b8 03F4F875 		and	r5, r3, #496
 284 01bc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 285              	.LVL15:
 286 01c0 6268     		ldr	r2, [r4, #4]
 287 01c2 00EB8000 		add	r0, r0, r0, lsl #2
 288 01c6 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 61


 289 01ca 5300     		lsls	r3, r2, #1
 290 01cc B0FBF3F8 		udiv	r8, r0, r3
 291 01d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 292              	.LVL16:
 293              	.L17:
 294 01d4 D4E90021 		ldrd	r2, r1, [r4]
 295 01d8 00EB8000 		add	r0, r0, r0, lsl #2
 296 01dc 4B00     		lsls	r3, r1, #1
 297 01de 00EB8000 		add	r0, r0, r0, lsl #2
 298 01e2 B0FBF3F3 		udiv	r3, r0, r3
 299 01e6 A7FB0313 		umull	r1, r3, r7, r3
 300 01ea 5B09     		lsrs	r3, r3, #5
 301 01ec 09FB1383 		mls	r3, r9, r3, r8
 302 01f0 DB00     		lsls	r3, r3, #3
 303 01f2 3233     		adds	r3, r3, #50
 304 01f4 A7FB0313 		umull	r1, r3, r7, r3
 305 01f8 C3F34213 		ubfx	r3, r3, #5, #3
 306 01fc 3344     		add	r3, r3, r6
 307 01fe 2B44     		add	r3, r3, r5
 308 0200 9360     		str	r3, [r2, #8]
 309 0202 8CE7     		b	.L9
 310              	.LVL17:
 311              	.L19:
 312              	.LBE24:
 313              	.LBE28:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 314              		.loc 1 342 0
 315 0204 80F83820 		strb	r2, [r0, #56]
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 316              		.loc 1 356 0
 317 0208 FFF7FEFF 		bl	HAL_UART_MspInit
 318              	.LVL18:
 319 020c 05E7     		b	.L5
 320              	.LVL19:
 321              	.L12:
 322              	.LCFI1:
 323              		.cfi_def_cfa_offset 0
 324              		.cfi_restore 3
 325              		.cfi_restore 4
 326              		.cfi_restore 5
 327              		.cfi_restore 6
 328              		.cfi_restore 7
 329              		.cfi_restore 8
 330              		.cfi_restore 9
 331              		.cfi_restore 14
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 332              		.loc 1 322 0
 333 020e 0120     		movs	r0, #1
 334              	.LVL20:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 335              		.loc 1 383 0
 336 0210 7047     		bx	lr
 337              	.LVL21:
 338              	.L10:
 339              	.LCFI2:
 340              		.cfi_def_cfa_offset 32
 341              		.cfi_offset 3, -32
ARM GAS  /tmp/cc4hqLkf.s 			page 62


 342              		.cfi_offset 4, -28
 343              		.cfi_offset 5, -24
 344              		.cfi_offset 6, -20
 345              		.cfi_offset 7, -16
 346              		.cfi_offset 8, -12
 347              		.cfi_offset 9, -8
 348              		.cfi_offset 14, -4
 349              	.LBB29:
 350              	.LBB25:
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 351              		.loc 1 3097 0
 352 0212 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 353              	.LVL22:
 354 0216 3E4F     		ldr	r7, .L21+4
 355 0218 6368     		ldr	r3, [r4, #4]
 356 021a 00EB8000 		add	r0, r0, r0, lsl #2
 357 021e 00EB8000 		add	r0, r0, r0, lsl #2
 358 0222 9B00     		lsls	r3, r3, #2
 359 0224 B0FBF3F3 		udiv	r3, r0, r3
 360 0228 A7FB0323 		umull	r2, r3, r7, r3
 361 022c 5B09     		lsrs	r3, r3, #5
 362 022e 1D01     		lsls	r5, r3, #4
 363 0230 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 364              	.LVL23:
 365 0234 6668     		ldr	r6, [r4, #4]
 366 0236 00EB8000 		add	r0, r0, r0, lsl #2
 367 023a 00EB8000 		add	r0, r0, r0, lsl #2
 368 023e B600     		lsls	r6, r6, #2
 369 0240 B0FBF6F6 		udiv	r6, r0, r6
 370 0244 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 371              	.LVL24:
 372 0248 6368     		ldr	r3, [r4, #4]
 373 024a 00EB8000 		add	r0, r0, r0, lsl #2
 374 024e 00EB8000 		add	r0, r0, r0, lsl #2
 375 0252 9B00     		lsls	r3, r3, #2
 376 0254 B0FBF3F3 		udiv	r3, r0, r3
 377 0258 A7FB0323 		umull	r2, r3, r7, r3
 378 025c 4FF06409 		mov	r9, #100
 379 0260 5B09     		lsrs	r3, r3, #5
 380 0262 09FB1363 		mls	r3, r9, r3, r6
 381 0266 1B01     		lsls	r3, r3, #4
 382 0268 3233     		adds	r3, r3, #50
 383 026a A7FB0323 		umull	r2, r3, r7, r3
 384 026e 5B09     		lsrs	r3, r3, #5
 385 0270 03F0F006 		and	r6, r3, #240
 386 0274 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 387              	.LVL25:
 388 0278 6268     		ldr	r2, [r4, #4]
 389 027a 00EB8000 		add	r0, r0, r0, lsl #2
 390 027e 9300     		lsls	r3, r2, #2
 391 0280 00EB8000 		add	r0, r0, r0, lsl #2
 392 0284 B0FBF3F8 		udiv	r8, r0, r3
 393 0288 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 394              	.LVL26:
 395 028c 30E7     		b	.L18
 396              	.LVL27:
 397              	.L7:
ARM GAS  /tmp/cc4hqLkf.s 			page 63


3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 398              		.loc 1 3078 0
 399 028e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 400              	.LVL28:
 401 0292 1F4F     		ldr	r7, .L21+4
 402 0294 6368     		ldr	r3, [r4, #4]
 403 0296 00EB8000 		add	r0, r0, r0, lsl #2
 404 029a 00EB8000 		add	r0, r0, r0, lsl #2
 405 029e 5B00     		lsls	r3, r3, #1
 406 02a0 B0FBF3F3 		udiv	r3, r0, r3
 407 02a4 A7FB0323 		umull	r2, r3, r7, r3
 408 02a8 5B09     		lsrs	r3, r3, #5
 409 02aa 1E01     		lsls	r6, r3, #4
 410 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 411              	.LVL29:
 412 02b0 6568     		ldr	r5, [r4, #4]
 413 02b2 00EB8000 		add	r0, r0, r0, lsl #2
 414 02b6 00EB8000 		add	r0, r0, r0, lsl #2
 415 02ba 6D00     		lsls	r5, r5, #1
 416 02bc B0FBF5F5 		udiv	r5, r0, r5
 417 02c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 418              	.LVL30:
 419 02c4 6368     		ldr	r3, [r4, #4]
 420 02c6 00EB8000 		add	r0, r0, r0, lsl #2
 421 02ca 00EB8000 		add	r0, r0, r0, lsl #2
 422 02ce 5B00     		lsls	r3, r3, #1
 423 02d0 B0FBF3F3 		udiv	r3, r0, r3
 424 02d4 A7FB0323 		umull	r2, r3, r7, r3
 425 02d8 4FF06409 		mov	r9, #100
 426 02dc 5B09     		lsrs	r3, r3, #5
 427 02de 09FB1353 		mls	r3, r9, r3, r5
 428 02e2 DB00     		lsls	r3, r3, #3
 429 02e4 3233     		adds	r3, r3, #50
 430 02e6 A7FB0323 		umull	r2, r3, r7, r3
 431 02ea 1B09     		lsrs	r3, r3, #4
 432 02ec 03F4F875 		and	r5, r3, #496
 433 02f0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 434              	.LVL31:
 435 02f4 6268     		ldr	r2, [r4, #4]
 436 02f6 00EB8000 		add	r0, r0, r0, lsl #2
 437 02fa 5300     		lsls	r3, r2, #1
 438 02fc 00EB8000 		add	r0, r0, r0, lsl #2
 439 0300 B0FBF3F8 		udiv	r8, r0, r3
 440 0304 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 441              	.LVL32:
 442 0308 64E7     		b	.L17
 443              	.L22:
 444 030a 00BF     		.align	2
 445              	.L21:
 446 030c 00100140 		.word	1073811456
 447 0310 1F85EB51 		.word	1374389535
 448              	.LBE25:
 449              	.LBE29:
 450              		.cfi_endproc
 451              	.LFE130:
 453              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 454              		.align	1
ARM GAS  /tmp/cc4hqLkf.s 			page 64


 455              		.p2align 2,,3
 456              		.global	HAL_HalfDuplex_Init
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv4-sp-d16
 462              	HAL_HalfDuplex_Init:
 463              	.LFB131:
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 464              		.loc 1 393 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL33:
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 469              		.loc 1 395 0
 470 0000 0028     		cmp	r0, #0
 471 0002 00F00881 		beq	.L32
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 472              		.loc 1 393 0
 473 0006 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 474              	.LCFI3:
 475              		.cfi_def_cfa_offset 32
 476              		.cfi_offset 3, -32
 477              		.cfi_offset 4, -28
 478              		.cfi_offset 5, -24
 479              		.cfi_offset 6, -20
 480              		.cfi_offset 7, -16
 481              		.cfi_offset 8, -12
 482              		.cfi_offset 9, -8
 483              		.cfi_offset 14, -4
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 484              		.loc 1 405 0
 485 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 486 000e 0446     		mov	r4, r0
 487 0010 03F0FF02 		and	r2, r3, #255
 488 0014 002B     		cmp	r3, #0
 489 0016 00F0F980 		beq	.L39
 490              	.LVL34:
 491              	.L25:
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 492              		.loc 1 429 0
 493 001a 2368     		ldr	r3, [r4]
 494              	.LBB32:
 495              	.LBB33:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 496              		.loc 1 3062 0
 497 001c 2669     		ldr	r6, [r4, #16]
 498              	.LBE33:
 499              	.LBE32:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 500              		.loc 1 426 0
 501 001e 2422     		movs	r2, #36
 502 0020 84F83920 		strb	r2, [r4, #57]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 503              		.loc 1 429 0
 504 0024 D868     		ldr	r0, [r3, #12]
ARM GAS  /tmp/cc4hqLkf.s 			page 65


 505 0026 20F40050 		bic	r0, r0, #8192
 506              	.LBB38:
 507              	.LBB34:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 508              		.loc 1 3062 0
 509 002a D4E90225 		ldrd	r2, r5, [r4, #8]
 510              	.LBE34:
 511              	.LBE38:
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512              		.loc 1 429 0
 513 002e D860     		str	r0, [r3, #12]
 514              	.LVL35:
 515              	.LBB39:
 516              	.LBB35:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517              		.loc 1 3053 0
 518 0030 1969     		ldr	r1, [r3, #16]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 519              		.loc 1 3062 0
 520 0032 E069     		ldr	r0, [r4, #28]
 521              	.LVL36:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 522              		.loc 1 3053 0
 523 0034 21F44051 		bic	r1, r1, #12288
 524 0038 2943     		orrs	r1, r1, r5
 525 003a 1961     		str	r1, [r3, #16]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 526              		.loc 1 3063 0
 527 003c D968     		ldr	r1, [r3, #12]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 528              		.loc 1 3062 0
 529 003e 6569     		ldr	r5, [r4, #20]
 530 0040 3243     		orrs	r2, r2, r6
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 531              		.loc 1 3063 0
 532 0042 21F41641 		bic	r1, r1, #38400
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 533              		.loc 1 3062 0
 534 0046 2A43     		orrs	r2, r2, r5
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 535              		.loc 1 3063 0
 536 0048 21F00C01 		bic	r1, r1, #12
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 537              		.loc 1 3062 0
 538 004c 0243     		orrs	r2, r2, r0
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 539              		.loc 1 3063 0
 540 004e 0A43     		orrs	r2, r2, r1
 541 0050 DA60     		str	r2, [r3, #12]
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 542              		.loc 1 3069 0
 543 0052 5A69     		ldr	r2, [r3, #20]
 544 0054 A169     		ldr	r1, [r4, #24]
 545 0056 22F44072 		bic	r2, r2, #768
 546 005a 0A43     		orrs	r2, r2, r1
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 547              		.loc 1 3072 0
ARM GAS  /tmp/cc4hqLkf.s 			page 66


 548 005c B0F5004F 		cmp	r0, #32768
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 549              		.loc 1 3069 0
 550 0060 5A61     		str	r2, [r3, #20]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 551              		.loc 1 3076 0
 552 0062 AC4A     		ldr	r2, .L41
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553              		.loc 1 3072 0
 554 0064 75D0     		beq	.L40
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 555              		.loc 1 3095 0
 556 0066 9342     		cmp	r3, r2
 557 0068 00F0D780 		beq	.L30
 558 006c 02F58062 		add	r2, r2, #1024
 559 0070 9342     		cmp	r3, r2
 560 0072 00F0D280 		beq	.L30
 561              		.loc 1 3107 0
 562 0076 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 563              	.LVL37:
 564 007a A74F     		ldr	r7, .L41+4
 565 007c 6268     		ldr	r2, [r4, #4]
 566 007e 00EB8000 		add	r0, r0, r0, lsl #2
 567 0082 00EB8000 		add	r0, r0, r0, lsl #2
 568 0086 9200     		lsls	r2, r2, #2
 569 0088 B0FBF2F2 		udiv	r2, r0, r2
 570 008c A7FB0232 		umull	r3, r2, r7, r2
 571 0090 5209     		lsrs	r2, r2, #5
 572 0092 1501     		lsls	r5, r2, #4
 573 0094 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 574              	.LVL38:
 575 0098 6668     		ldr	r6, [r4, #4]
 576 009a 00EB8000 		add	r0, r0, r0, lsl #2
 577 009e 00EB8000 		add	r0, r0, r0, lsl #2
 578 00a2 B600     		lsls	r6, r6, #2
 579 00a4 B0FBF6F6 		udiv	r6, r0, r6
 580 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 581              	.LVL39:
 582 00ac 6268     		ldr	r2, [r4, #4]
 583 00ae 00EB8000 		add	r0, r0, r0, lsl #2
 584 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 585 00b6 9200     		lsls	r2, r2, #2
 586 00b8 B0FBF2F2 		udiv	r2, r0, r2
 587 00bc A7FB0232 		umull	r3, r2, r7, r2
 588 00c0 5209     		lsrs	r2, r2, #5
 589 00c2 4FF06409 		mov	r9, #100
 590 00c6 09FB1262 		mls	r2, r9, r2, r6
 591 00ca 1201     		lsls	r2, r2, #4
 592 00cc 3232     		adds	r2, r2, #50
 593 00ce A7FB0232 		umull	r3, r2, r7, r2
 594 00d2 5209     		lsrs	r2, r2, #5
 595 00d4 02F0F006 		and	r6, r2, #240
 596 00d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 597              	.LVL40:
 598 00dc 6368     		ldr	r3, [r4, #4]
 599 00de 00EB8000 		add	r0, r0, r0, lsl #2
 600 00e2 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 67


 601 00e6 9A00     		lsls	r2, r3, #2
 602 00e8 B0FBF2F8 		udiv	r8, r0, r2
 603 00ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 604              	.LVL41:
 605              	.L38:
 606 00f0 D4E90031 		ldrd	r3, r1, [r4]
 607 00f4 00EB8000 		add	r0, r0, r0, lsl #2
 608 00f8 8A00     		lsls	r2, r1, #2
 609 00fa 00EB8000 		add	r0, r0, r0, lsl #2
 610 00fe B0FBF2F2 		udiv	r2, r0, r2
 611 0102 A7FB0212 		umull	r1, r2, r7, r2
 612 0106 5209     		lsrs	r2, r2, #5
 613 0108 09FB1282 		mls	r2, r9, r2, r8
 614 010c 1201     		lsls	r2, r2, #4
 615 010e 3232     		adds	r2, r2, #50
 616 0110 A7FB0212 		umull	r1, r2, r7, r2
 617 0114 C2F34312 		ubfx	r2, r2, #5, #4
 618 0118 3243     		orrs	r2, r2, r6
 619 011a 2A44     		add	r2, r2, r5
 620 011c 9A60     		str	r2, [r3, #8]
 621              	.L29:
 622              	.LVL42:
 623              	.LBE35:
 624              	.LBE39:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 625              		.loc 1 437 0
 626 011e 1A69     		ldr	r2, [r3, #16]
 627 0120 22F49042 		bic	r2, r2, #18432
 628 0124 1A61     		str	r2, [r3, #16]
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 629              		.loc 1 438 0
 630 0126 5A69     		ldr	r2, [r3, #20]
 631 0128 22F02202 		bic	r2, r2, #34
 632 012c 5A61     		str	r2, [r3, #20]
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633              		.loc 1 441 0
 634 012e 5A69     		ldr	r2, [r3, #20]
 635 0130 42F00802 		orr	r2, r2, #8
 636 0134 5A61     		str	r2, [r3, #20]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 637              		.loc 1 444 0
 638 0136 DA68     		ldr	r2, [r3, #12]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 639              		.loc 1 447 0
 640 0138 0025     		movs	r5, #0
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 641              		.loc 1 448 0
 642 013a 2021     		movs	r1, #32
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 643              		.loc 1 444 0
 644 013c 42F40052 		orr	r2, r2, #8192
 645 0140 DA60     		str	r2, [r3, #12]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 646              		.loc 1 451 0
 647 0142 2846     		mov	r0, r5
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 648              		.loc 1 447 0
ARM GAS  /tmp/cc4hqLkf.s 			page 68


 649 0144 E563     		str	r5, [r4, #60]
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 650              		.loc 1 448 0
 651 0146 84F83910 		strb	r1, [r4, #57]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 652              		.loc 1 449 0
 653 014a 84F83A10 		strb	r1, [r4, #58]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 654              		.loc 1 452 0
 655 014e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 656              	.LVL43:
 657              	.L40:
 658              	.LBB40:
 659              	.LBB36:
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 660              		.loc 1 3076 0
 661 0152 9342     		cmp	r3, r2
 662 0154 00F09F80 		beq	.L27
 663 0158 02F58062 		add	r2, r2, #1024
 664 015c 9342     		cmp	r3, r2
 665 015e 00F09A80 		beq	.L27
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 666              		.loc 1 3088 0
 667 0162 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 668              	.LVL44:
 669 0166 6C4F     		ldr	r7, .L41+4
 670 0168 6268     		ldr	r2, [r4, #4]
 671 016a 00EB8000 		add	r0, r0, r0, lsl #2
 672 016e 00EB8000 		add	r0, r0, r0, lsl #2
 673 0172 5200     		lsls	r2, r2, #1
 674 0174 B0FBF2F2 		udiv	r2, r0, r2
 675 0178 A7FB0232 		umull	r3, r2, r7, r2
 676 017c 5209     		lsrs	r2, r2, #5
 677 017e 1601     		lsls	r6, r2, #4
 678 0180 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 679              	.LVL45:
 680 0184 6568     		ldr	r5, [r4, #4]
 681 0186 00EB8000 		add	r0, r0, r0, lsl #2
 682 018a 00EB8000 		add	r0, r0, r0, lsl #2
 683 018e 6D00     		lsls	r5, r5, #1
 684 0190 B0FBF5F5 		udiv	r5, r0, r5
 685 0194 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 686              	.LVL46:
 687 0198 6268     		ldr	r2, [r4, #4]
 688 019a 00EB8000 		add	r0, r0, r0, lsl #2
 689 019e 00EB8000 		add	r0, r0, r0, lsl #2
 690 01a2 5200     		lsls	r2, r2, #1
 691 01a4 B0FBF2F2 		udiv	r2, r0, r2
 692 01a8 A7FB0232 		umull	r3, r2, r7, r2
 693 01ac 5209     		lsrs	r2, r2, #5
 694 01ae 4FF06409 		mov	r9, #100
 695 01b2 09FB1252 		mls	r2, r9, r2, r5
 696 01b6 D200     		lsls	r2, r2, #3
 697 01b8 3232     		adds	r2, r2, #50
 698 01ba A7FB0232 		umull	r3, r2, r7, r2
 699 01be 1209     		lsrs	r2, r2, #4
 700 01c0 02F4F875 		and	r5, r2, #496
ARM GAS  /tmp/cc4hqLkf.s 			page 69


 701 01c4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 702              	.LVL47:
 703 01c8 6368     		ldr	r3, [r4, #4]
 704 01ca 00EB8000 		add	r0, r0, r0, lsl #2
 705 01ce 00EB8000 		add	r0, r0, r0, lsl #2
 706 01d2 5A00     		lsls	r2, r3, #1
 707 01d4 B0FBF2F8 		udiv	r8, r0, r2
 708 01d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 709              	.LVL48:
 710              	.L37:
 711 01dc D4E90031 		ldrd	r3, r1, [r4]
 712 01e0 00EB8000 		add	r0, r0, r0, lsl #2
 713 01e4 4A00     		lsls	r2, r1, #1
 714 01e6 00EB8000 		add	r0, r0, r0, lsl #2
 715 01ea B0FBF2F2 		udiv	r2, r0, r2
 716 01ee A7FB0212 		umull	r1, r2, r7, r2
 717 01f2 5209     		lsrs	r2, r2, #5
 718 01f4 09FB1282 		mls	r2, r9, r2, r8
 719 01f8 D200     		lsls	r2, r2, #3
 720 01fa 3232     		adds	r2, r2, #50
 721 01fc A7FB0212 		umull	r1, r2, r7, r2
 722 0200 C2F34212 		ubfx	r2, r2, #5, #3
 723 0204 3244     		add	r2, r2, r6
 724 0206 2A44     		add	r2, r2, r5
 725 0208 9A60     		str	r2, [r3, #8]
 726 020a 88E7     		b	.L29
 727              	.LVL49:
 728              	.L39:
 729              	.LBE36:
 730              	.LBE40:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 731              		.loc 1 408 0
 732 020c 80F83820 		strb	r2, [r0, #56]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 733              		.loc 1 422 0
 734 0210 FFF7FEFF 		bl	HAL_UART_MspInit
 735              	.LVL50:
 736 0214 01E7     		b	.L25
 737              	.LVL51:
 738              	.L32:
 739              	.LCFI4:
 740              		.cfi_def_cfa_offset 0
 741              		.cfi_restore 3
 742              		.cfi_restore 4
 743              		.cfi_restore 5
 744              		.cfi_restore 6
 745              		.cfi_restore 7
 746              		.cfi_restore 8
 747              		.cfi_restore 9
 748              		.cfi_restore 14
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 749              		.loc 1 397 0
 750 0216 0120     		movs	r0, #1
 751              	.LVL52:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 752              		.loc 1 452 0
 753 0218 7047     		bx	lr
ARM GAS  /tmp/cc4hqLkf.s 			page 70


 754              	.LVL53:
 755              	.L30:
 756              	.LCFI5:
 757              		.cfi_def_cfa_offset 32
 758              		.cfi_offset 3, -32
 759              		.cfi_offset 4, -28
 760              		.cfi_offset 5, -24
 761              		.cfi_offset 6, -20
 762              		.cfi_offset 7, -16
 763              		.cfi_offset 8, -12
 764              		.cfi_offset 9, -8
 765              		.cfi_offset 14, -4
 766              	.LBB41:
 767              	.LBB37:
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 768              		.loc 1 3097 0
 769 021a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 770              	.LVL54:
 771 021e 3E4F     		ldr	r7, .L41+4
 772 0220 6268     		ldr	r2, [r4, #4]
 773 0222 00EB8000 		add	r0, r0, r0, lsl #2
 774 0226 00EB8000 		add	r0, r0, r0, lsl #2
 775 022a 9200     		lsls	r2, r2, #2
 776 022c B0FBF2F2 		udiv	r2, r0, r2
 777 0230 A7FB0232 		umull	r3, r2, r7, r2
 778 0234 5209     		lsrs	r2, r2, #5
 779 0236 1501     		lsls	r5, r2, #4
 780 0238 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 781              	.LVL55:
 782 023c 6668     		ldr	r6, [r4, #4]
 783 023e 00EB8000 		add	r0, r0, r0, lsl #2
 784 0242 00EB8000 		add	r0, r0, r0, lsl #2
 785 0246 B600     		lsls	r6, r6, #2
 786 0248 B0FBF6F6 		udiv	r6, r0, r6
 787 024c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 788              	.LVL56:
 789 0250 6268     		ldr	r2, [r4, #4]
 790 0252 00EB8000 		add	r0, r0, r0, lsl #2
 791 0256 00EB8000 		add	r0, r0, r0, lsl #2
 792 025a 9200     		lsls	r2, r2, #2
 793 025c B0FBF2F2 		udiv	r2, r0, r2
 794 0260 A7FB0232 		umull	r3, r2, r7, r2
 795 0264 4FF06409 		mov	r9, #100
 796 0268 5209     		lsrs	r2, r2, #5
 797 026a 09FB1262 		mls	r2, r9, r2, r6
 798 026e 1201     		lsls	r2, r2, #4
 799 0270 3232     		adds	r2, r2, #50
 800 0272 A7FB0232 		umull	r3, r2, r7, r2
 801 0276 5209     		lsrs	r2, r2, #5
 802 0278 02F0F006 		and	r6, r2, #240
 803 027c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 804              	.LVL57:
 805 0280 6368     		ldr	r3, [r4, #4]
 806 0282 00EB8000 		add	r0, r0, r0, lsl #2
 807 0286 9A00     		lsls	r2, r3, #2
 808 0288 00EB8000 		add	r0, r0, r0, lsl #2
 809 028c B0FBF2F8 		udiv	r8, r0, r2
ARM GAS  /tmp/cc4hqLkf.s 			page 71


 810 0290 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 811              	.LVL58:
 812 0294 2CE7     		b	.L38
 813              	.LVL59:
 814              	.L27:
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 815              		.loc 1 3078 0
 816 0296 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 817              	.LVL60:
 818 029a 1F4F     		ldr	r7, .L41+4
 819 029c 6268     		ldr	r2, [r4, #4]
 820 029e 00EB8000 		add	r0, r0, r0, lsl #2
 821 02a2 00EB8000 		add	r0, r0, r0, lsl #2
 822 02a6 5200     		lsls	r2, r2, #1
 823 02a8 B0FBF2F2 		udiv	r2, r0, r2
 824 02ac A7FB0232 		umull	r3, r2, r7, r2
 825 02b0 5209     		lsrs	r2, r2, #5
 826 02b2 1601     		lsls	r6, r2, #4
 827 02b4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 828              	.LVL61:
 829 02b8 6568     		ldr	r5, [r4, #4]
 830 02ba 00EB8000 		add	r0, r0, r0, lsl #2
 831 02be 00EB8000 		add	r0, r0, r0, lsl #2
 832 02c2 6D00     		lsls	r5, r5, #1
 833 02c4 B0FBF5F5 		udiv	r5, r0, r5
 834 02c8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 835              	.LVL62:
 836 02cc 6268     		ldr	r2, [r4, #4]
 837 02ce 00EB8000 		add	r0, r0, r0, lsl #2
 838 02d2 00EB8000 		add	r0, r0, r0, lsl #2
 839 02d6 5200     		lsls	r2, r2, #1
 840 02d8 B0FBF2F2 		udiv	r2, r0, r2
 841 02dc A7FB0232 		umull	r3, r2, r7, r2
 842 02e0 4FF06409 		mov	r9, #100
 843 02e4 5209     		lsrs	r2, r2, #5
 844 02e6 09FB1252 		mls	r2, r9, r2, r5
 845 02ea D200     		lsls	r2, r2, #3
 846 02ec 3232     		adds	r2, r2, #50
 847 02ee A7FB0232 		umull	r3, r2, r7, r2
 848 02f2 1209     		lsrs	r2, r2, #4
 849 02f4 02F4F875 		and	r5, r2, #496
 850 02f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 851              	.LVL63:
 852 02fc 6368     		ldr	r3, [r4, #4]
 853 02fe 00EB8000 		add	r0, r0, r0, lsl #2
 854 0302 5A00     		lsls	r2, r3, #1
 855 0304 00EB8000 		add	r0, r0, r0, lsl #2
 856 0308 B0FBF2F8 		udiv	r8, r0, r2
 857 030c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 858              	.LVL64:
 859 0310 64E7     		b	.L37
 860              	.L42:
 861 0312 00BF     		.align	2
 862              	.L41:
 863 0314 00100140 		.word	1073811456
 864 0318 1F85EB51 		.word	1374389535
 865              	.LBE37:
ARM GAS  /tmp/cc4hqLkf.s 			page 72


 866              	.LBE41:
 867              		.cfi_endproc
 868              	.LFE131:
 870              		.section	.text.HAL_LIN_Init,"ax",%progbits
 871              		.align	1
 872              		.p2align 2,,3
 873              		.global	HAL_LIN_Init
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	HAL_LIN_Init:
 880              	.LFB132:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 881              		.loc 1 466 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL65:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 886              		.loc 1 468 0
 887 0000 0028     		cmp	r0, #0
 888 0002 00F01281 		beq	.L52
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 889              		.loc 1 481 0
 890 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 891              		.loc 1 466 0
 892 000a 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 893              	.LCFI6:
 894              		.cfi_def_cfa_offset 32
 895              		.cfi_offset 4, -32
 896              		.cfi_offset 5, -28
 897              		.cfi_offset 6, -24
 898              		.cfi_offset 7, -20
 899              		.cfi_offset 8, -16
 900              		.cfi_offset 9, -12
 901              		.cfi_offset 10, -8
 902              		.cfi_offset 14, -4
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 903              		.loc 1 481 0
 904 000e 03F0FF02 		and	r2, r3, #255
 905 0012 0446     		mov	r4, r0
 906 0014 0D46     		mov	r5, r1
 907 0016 002B     		cmp	r3, #0
 908 0018 00F00281 		beq	.L59
 909              	.LVL66:
 910              	.L45:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911              		.loc 1 505 0
 912 001c 2368     		ldr	r3, [r4]
 913              	.LBB44:
 914              	.LBB45:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 915              		.loc 1 3062 0
 916 001e 2669     		ldr	r6, [r4, #16]
 917              	.LBE45:
ARM GAS  /tmp/cc4hqLkf.s 			page 73


 918              	.LBE44:
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 919              		.loc 1 502 0
 920 0020 2422     		movs	r2, #36
 921 0022 84F83920 		strb	r2, [r4, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 922              		.loc 1 505 0
 923 0026 D868     		ldr	r0, [r3, #12]
 924 0028 20F40050 		bic	r0, r0, #8192
 925              	.LBB50:
 926              	.LBB46:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 927              		.loc 1 3062 0
 928 002c D4E90227 		ldrd	r2, r7, [r4, #8]
 929              	.LBE46:
 930              	.LBE50:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931              		.loc 1 505 0
 932 0030 D860     		str	r0, [r3, #12]
 933              	.LVL67:
 934              	.LBB51:
 935              	.LBB47:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 936              		.loc 1 3053 0
 937 0032 1969     		ldr	r1, [r3, #16]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 938              		.loc 1 3062 0
 939 0034 6069     		ldr	r0, [r4, #20]
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 940              		.loc 1 3053 0
 941 0036 21F44051 		bic	r1, r1, #12288
 942 003a 3943     		orrs	r1, r1, r7
 943 003c 1961     		str	r1, [r3, #16]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 944              		.loc 1 3063 0
 945 003e D968     		ldr	r1, [r3, #12]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 946              		.loc 1 3062 0
 947 0040 3243     		orrs	r2, r2, r6
 948 0042 E669     		ldr	r6, [r4, #28]
 949              	.LVL68:
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 950              		.loc 1 3063 0
 951 0044 21F41641 		bic	r1, r1, #38400
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 952              		.loc 1 3062 0
 953 0048 0243     		orrs	r2, r2, r0
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 954              		.loc 1 3063 0
 955 004a 21F00C01 		bic	r1, r1, #12
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 956              		.loc 1 3062 0
 957 004e 3243     		orrs	r2, r2, r6
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 958              		.loc 1 3063 0
 959 0050 0A43     		orrs	r2, r2, r1
 960 0052 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc4hqLkf.s 			page 74


3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 961              		.loc 1 3069 0
 962 0054 5A69     		ldr	r2, [r3, #20]
 963 0056 A169     		ldr	r1, [r4, #24]
 964 0058 22F44072 		bic	r2, r2, #768
 965 005c 0A43     		orrs	r2, r2, r1
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 966              		.loc 1 3072 0
 967 005e B6F5004F 		cmp	r6, #32768
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968              		.loc 1 3069 0
 969 0062 5A61     		str	r2, [r3, #20]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 970              		.loc 1 3076 0
 971 0064 B14A     		ldr	r2, .L61
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 972              		.loc 1 3072 0
 973 0066 7DD0     		beq	.L60
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 974              		.loc 1 3095 0
 975 0068 9342     		cmp	r3, r2
 976 006a 00F0E080 		beq	.L50
 977 006e 02F58062 		add	r2, r2, #1024
 978 0072 9342     		cmp	r3, r2
 979 0074 00F0DB80 		beq	.L50
 980              		.loc 1 3107 0
 981 0078 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 982              	.LVL69:
 983 007c DFF8B082 		ldr	r8, .L61+4
 984 0080 6268     		ldr	r2, [r4, #4]
 985 0082 00EB8000 		add	r0, r0, r0, lsl #2
 986 0086 00EB8000 		add	r0, r0, r0, lsl #2
 987 008a 9200     		lsls	r2, r2, #2
 988 008c B0FBF2F2 		udiv	r2, r0, r2
 989 0090 A8FB0232 		umull	r3, r2, r8, r2
 990 0094 5209     		lsrs	r2, r2, #5
 991 0096 1601     		lsls	r6, r2, #4
 992 0098 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 993              	.LVL70:
 994 009c 6268     		ldr	r2, [r4, #4]
 995 009e 00EB8000 		add	r0, r0, r0, lsl #2
 996 00a2 9200     		lsls	r2, r2, #2
 997 00a4 00EB8000 		add	r0, r0, r0, lsl #2
 998 00a8 B0FBF2F7 		udiv	r7, r0, r2
 999 00ac FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1000              	.LVL71:
 1001 00b0 6368     		ldr	r3, [r4, #4]
 1002 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 1003 00b6 9A00     		lsls	r2, r3, #2
 1004 00b8 00EB8000 		add	r0, r0, r0, lsl #2
 1005 00bc B0FBF2F2 		udiv	r2, r0, r2
 1006 00c0 A8FB0232 		umull	r3, r2, r8, r2
 1007 00c4 5209     		lsrs	r2, r2, #5
 1008 00c6 4FF0640A 		mov	r10, #100
 1009 00ca 0AFB1272 		mls	r2, r10, r2, r7
 1010 00ce 1201     		lsls	r2, r2, #4
 1011 00d0 3232     		adds	r2, r2, #50
ARM GAS  /tmp/cc4hqLkf.s 			page 75


 1012 00d2 A8FB0232 		umull	r3, r2, r8, r2
 1013 00d6 5209     		lsrs	r2, r2, #5
 1014 00d8 02F0F007 		and	r7, r2, #240
 1015 00dc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1016              	.LVL72:
 1017 00e0 6368     		ldr	r3, [r4, #4]
 1018 00e2 00EB8000 		add	r0, r0, r0, lsl #2
 1019 00e6 00EB8000 		add	r0, r0, r0, lsl #2
 1020 00ea 9A00     		lsls	r2, r3, #2
 1021 00ec B0FBF2F9 		udiv	r9, r0, r2
 1022 00f0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1023              	.LVL73:
 1024              	.L58:
 1025 00f4 D4E90031 		ldrd	r3, r1, [r4]
 1026 00f8 00EB8000 		add	r0, r0, r0, lsl #2
 1027 00fc 8A00     		lsls	r2, r1, #2
 1028 00fe 00EB8000 		add	r0, r0, r0, lsl #2
 1029 0102 B0FBF2F2 		udiv	r2, r0, r2
 1030 0106 A8FB0212 		umull	r1, r2, r8, r2
 1031 010a 5209     		lsrs	r2, r2, #5
 1032 010c 0AFB1292 		mls	r2, r10, r2, r9
 1033 0110 1201     		lsls	r2, r2, #4
 1034 0112 3232     		adds	r2, r2, #50
 1035 0114 A8FB0212 		umull	r1, r2, r8, r2
 1036 0118 C2F34312 		ubfx	r2, r2, #5, #4
 1037 011c 3A43     		orrs	r2, r2, r7
 1038 011e 3244     		add	r2, r2, r6
 1039 0120 9A60     		str	r2, [r3, #8]
 1040              	.L49:
 1041              	.LVL74:
 1042              	.LBE47:
 1043              	.LBE51:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 1044              		.loc 1 513 0
 1045 0122 1A69     		ldr	r2, [r3, #16]
 1046 0124 22F40062 		bic	r2, r2, #2048
 1047 0128 1A61     		str	r2, [r3, #16]
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1048              		.loc 1 514 0
 1049 012a 5A69     		ldr	r2, [r3, #20]
 1050 012c 22F02A02 		bic	r2, r2, #42
 1051 0130 5A61     		str	r2, [r3, #20]
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1052              		.loc 1 517 0
 1053 0132 1A69     		ldr	r2, [r3, #16]
 1054 0134 42F48042 		orr	r2, r2, #16384
 1055 0138 1A61     		str	r2, [r3, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 1056              		.loc 1 520 0
 1057 013a 1A69     		ldr	r2, [r3, #16]
 1058 013c 22F02002 		bic	r2, r2, #32
 1059 0140 1A61     		str	r2, [r3, #16]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1060              		.loc 1 521 0
 1061 0142 1969     		ldr	r1, [r3, #16]
 1062 0144 0D43     		orrs	r5, r5, r1
 1063              	.LVL75:
ARM GAS  /tmp/cc4hqLkf.s 			page 76


 1064 0146 1D61     		str	r5, [r3, #16]
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1065              		.loc 1 524 0
 1066 0148 DA68     		ldr	r2, [r3, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1067              		.loc 1 527 0
 1068 014a 0025     		movs	r5, #0
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1069              		.loc 1 528 0
 1070 014c 2021     		movs	r1, #32
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1071              		.loc 1 524 0
 1072 014e 42F40052 		orr	r2, r2, #8192
 1073 0152 DA60     		str	r2, [r3, #12]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1074              		.loc 1 531 0
 1075 0154 2846     		mov	r0, r5
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1076              		.loc 1 527 0
 1077 0156 E563     		str	r5, [r4, #60]
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1078              		.loc 1 528 0
 1079 0158 84F83910 		strb	r1, [r4, #57]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1080              		.loc 1 529 0
 1081 015c 84F83A10 		strb	r1, [r4, #58]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1082              		.loc 1 532 0
 1083 0160 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1084              	.LVL76:
 1085              	.L60:
 1086              	.LBB52:
 1087              	.LBB48:
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1088              		.loc 1 3076 0
 1089 0164 9342     		cmp	r3, r2
 1090 0166 00F0A180 		beq	.L47
 1091 016a 02F58062 		add	r2, r2, #1024
 1092 016e 9342     		cmp	r3, r2
 1093 0170 00F09C80 		beq	.L47
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1094              		.loc 1 3088 0
 1095 0174 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1096              	.LVL77:
 1097 0178 DFF8B481 		ldr	r8, .L61+4
 1098 017c 6268     		ldr	r2, [r4, #4]
 1099 017e 00EB8000 		add	r0, r0, r0, lsl #2
 1100 0182 00EB8000 		add	r0, r0, r0, lsl #2
 1101 0186 5200     		lsls	r2, r2, #1
 1102 0188 B0FBF2F2 		udiv	r2, r0, r2
 1103 018c A8FB0232 		umull	r3, r2, r8, r2
 1104 0190 5209     		lsrs	r2, r2, #5
 1105 0192 1701     		lsls	r7, r2, #4
 1106 0194 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1107              	.LVL78:
 1108 0198 6268     		ldr	r2, [r4, #4]
 1109 019a 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 77


 1110 019e 5200     		lsls	r2, r2, #1
 1111 01a0 00EB8000 		add	r0, r0, r0, lsl #2
 1112 01a4 B0FBF2F6 		udiv	r6, r0, r2
 1113 01a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1114              	.LVL79:
 1115 01ac 6368     		ldr	r3, [r4, #4]
 1116 01ae 00EB8000 		add	r0, r0, r0, lsl #2
 1117 01b2 5A00     		lsls	r2, r3, #1
 1118 01b4 00EB8000 		add	r0, r0, r0, lsl #2
 1119 01b8 B0FBF2F2 		udiv	r2, r0, r2
 1120 01bc A8FB0232 		umull	r3, r2, r8, r2
 1121 01c0 5209     		lsrs	r2, r2, #5
 1122 01c2 4FF0640A 		mov	r10, #100
 1123 01c6 0AFB1262 		mls	r2, r10, r2, r6
 1124 01ca D200     		lsls	r2, r2, #3
 1125 01cc 3232     		adds	r2, r2, #50
 1126 01ce A8FB0232 		umull	r3, r2, r8, r2
 1127 01d2 1209     		lsrs	r2, r2, #4
 1128 01d4 02F4F876 		and	r6, r2, #496
 1129 01d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1130              	.LVL80:
 1131 01dc 6368     		ldr	r3, [r4, #4]
 1132 01de 00EB8000 		add	r0, r0, r0, lsl #2
 1133 01e2 00EB8000 		add	r0, r0, r0, lsl #2
 1134 01e6 5A00     		lsls	r2, r3, #1
 1135 01e8 B0FBF2F9 		udiv	r9, r0, r2
 1136 01ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1137              	.LVL81:
 1138              	.L57:
 1139 01f0 D4E90031 		ldrd	r3, r1, [r4]
 1140 01f4 00EB8000 		add	r0, r0, r0, lsl #2
 1141 01f8 4A00     		lsls	r2, r1, #1
 1142 01fa 00EB8000 		add	r0, r0, r0, lsl #2
 1143 01fe B0FBF2F2 		udiv	r2, r0, r2
 1144 0202 A8FB0212 		umull	r1, r2, r8, r2
 1145 0206 5209     		lsrs	r2, r2, #5
 1146 0208 0AFB1292 		mls	r2, r10, r2, r9
 1147 020c D200     		lsls	r2, r2, #3
 1148 020e 3232     		adds	r2, r2, #50
 1149 0210 A8FB0212 		umull	r1, r2, r8, r2
 1150 0214 C2F34212 		ubfx	r2, r2, #5, #3
 1151 0218 3A44     		add	r2, r2, r7
 1152 021a 3244     		add	r2, r2, r6
 1153 021c 9A60     		str	r2, [r3, #8]
 1154 021e 80E7     		b	.L49
 1155              	.LVL82:
 1156              	.L59:
 1157              	.LBE48:
 1158              	.LBE52:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1159              		.loc 1 484 0
 1160 0220 80F83820 		strb	r2, [r0, #56]
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1161              		.loc 1 498 0
 1162 0224 FFF7FEFF 		bl	HAL_UART_MspInit
 1163              	.LVL83:
 1164 0228 F8E6     		b	.L45
ARM GAS  /tmp/cc4hqLkf.s 			page 78


 1165              	.LVL84:
 1166              	.L52:
 1167              	.LCFI7:
 1168              		.cfi_def_cfa_offset 0
 1169              		.cfi_restore 4
 1170              		.cfi_restore 5
 1171              		.cfi_restore 6
 1172              		.cfi_restore 7
 1173              		.cfi_restore 8
 1174              		.cfi_restore 9
 1175              		.cfi_restore 10
 1176              		.cfi_restore 14
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1177              		.loc 1 470 0
 1178 022a 0120     		movs	r0, #1
 1179              	.LVL85:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1180              		.loc 1 532 0
 1181 022c 7047     		bx	lr
 1182              	.LVL86:
 1183              	.L50:
 1184              	.LCFI8:
 1185              		.cfi_def_cfa_offset 32
 1186              		.cfi_offset 4, -32
 1187              		.cfi_offset 5, -28
 1188              		.cfi_offset 6, -24
 1189              		.cfi_offset 7, -20
 1190              		.cfi_offset 8, -16
 1191              		.cfi_offset 9, -12
 1192              		.cfi_offset 10, -8
 1193              		.cfi_offset 14, -4
 1194              	.LBB53:
 1195              	.LBB49:
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1196              		.loc 1 3097 0
 1197 022e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1198              	.LVL87:
 1199 0232 DFF8FC80 		ldr	r8, .L61+4
 1200 0236 6268     		ldr	r2, [r4, #4]
 1201 0238 00EB8000 		add	r0, r0, r0, lsl #2
 1202 023c 00EB8000 		add	r0, r0, r0, lsl #2
 1203 0240 9200     		lsls	r2, r2, #2
 1204 0242 B0FBF2F2 		udiv	r2, r0, r2
 1205 0246 A8FB0232 		umull	r3, r2, r8, r2
 1206 024a 5209     		lsrs	r2, r2, #5
 1207 024c 1601     		lsls	r6, r2, #4
 1208 024e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1209              	.LVL88:
 1210 0252 6268     		ldr	r2, [r4, #4]
 1211 0254 00EB8000 		add	r0, r0, r0, lsl #2
 1212 0258 9200     		lsls	r2, r2, #2
 1213 025a 00EB8000 		add	r0, r0, r0, lsl #2
 1214 025e B0FBF2F7 		udiv	r7, r0, r2
 1215 0262 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1216              	.LVL89:
 1217 0266 6368     		ldr	r3, [r4, #4]
 1218 0268 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 79


 1219 026c 9A00     		lsls	r2, r3, #2
 1220 026e 00EB8000 		add	r0, r0, r0, lsl #2
 1221 0272 B0FBF2F2 		udiv	r2, r0, r2
 1222 0276 A8FB0232 		umull	r3, r2, r8, r2
 1223 027a 4FF0640A 		mov	r10, #100
 1224 027e 5209     		lsrs	r2, r2, #5
 1225 0280 0AFB1272 		mls	r2, r10, r2, r7
 1226 0284 1201     		lsls	r2, r2, #4
 1227 0286 3232     		adds	r2, r2, #50
 1228 0288 A8FB0232 		umull	r3, r2, r8, r2
 1229 028c 5209     		lsrs	r2, r2, #5
 1230 028e 02F0F007 		and	r7, r2, #240
 1231 0292 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1232              	.LVL90:
 1233 0296 6368     		ldr	r3, [r4, #4]
 1234 0298 00EB8000 		add	r0, r0, r0, lsl #2
 1235 029c 9A00     		lsls	r2, r3, #2
 1236 029e 00EB8000 		add	r0, r0, r0, lsl #2
 1237 02a2 B0FBF2F9 		udiv	r9, r0, r2
 1238 02a6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1239              	.LVL91:
 1240 02aa 23E7     		b	.L58
 1241              	.LVL92:
 1242              	.L47:
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1243              		.loc 1 3078 0
 1244 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1245              	.LVL93:
 1246 02b0 DFF87C80 		ldr	r8, .L61+4
 1247 02b4 6268     		ldr	r2, [r4, #4]
 1248 02b6 00EB8000 		add	r0, r0, r0, lsl #2
 1249 02ba 00EB8000 		add	r0, r0, r0, lsl #2
 1250 02be 5200     		lsls	r2, r2, #1
 1251 02c0 B0FBF2F2 		udiv	r2, r0, r2
 1252 02c4 A8FB0232 		umull	r3, r2, r8, r2
 1253 02c8 5209     		lsrs	r2, r2, #5
 1254 02ca 1701     		lsls	r7, r2, #4
 1255 02cc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1256              	.LVL94:
 1257 02d0 6268     		ldr	r2, [r4, #4]
 1258 02d2 00EB8000 		add	r0, r0, r0, lsl #2
 1259 02d6 5200     		lsls	r2, r2, #1
 1260 02d8 00EB8000 		add	r0, r0, r0, lsl #2
 1261 02dc B0FBF2F6 		udiv	r6, r0, r2
 1262 02e0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1263              	.LVL95:
 1264 02e4 6368     		ldr	r3, [r4, #4]
 1265 02e6 00EB8000 		add	r0, r0, r0, lsl #2
 1266 02ea 5A00     		lsls	r2, r3, #1
 1267 02ec 00EB8000 		add	r0, r0, r0, lsl #2
 1268 02f0 B0FBF2F2 		udiv	r2, r0, r2
 1269 02f4 A8FB0232 		umull	r3, r2, r8, r2
 1270 02f8 4FF0640A 		mov	r10, #100
 1271 02fc 5209     		lsrs	r2, r2, #5
 1272 02fe 0AFB1262 		mls	r2, r10, r2, r6
 1273 0302 D200     		lsls	r2, r2, #3
 1274 0304 3232     		adds	r2, r2, #50
ARM GAS  /tmp/cc4hqLkf.s 			page 80


 1275 0306 A8FB0232 		umull	r3, r2, r8, r2
 1276 030a 1209     		lsrs	r2, r2, #4
 1277 030c 02F4F876 		and	r6, r2, #496
 1278 0310 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1279              	.LVL96:
 1280 0314 6368     		ldr	r3, [r4, #4]
 1281 0316 00EB8000 		add	r0, r0, r0, lsl #2
 1282 031a 5A00     		lsls	r2, r3, #1
 1283 031c 00EB8000 		add	r0, r0, r0, lsl #2
 1284 0320 B0FBF2F9 		udiv	r9, r0, r2
 1285 0324 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1286              	.LVL97:
 1287 0328 62E7     		b	.L57
 1288              	.L62:
 1289 032a 00BF     		.align	2
 1290              	.L61:
 1291 032c 00100140 		.word	1073811456
 1292 0330 1F85EB51 		.word	1374389535
 1293              	.LBE49:
 1294              	.LBE53:
 1295              		.cfi_endproc
 1296              	.LFE132:
 1298              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 1299              		.align	1
 1300              		.p2align 2,,3
 1301              		.global	HAL_MultiProcessor_Init
 1302              		.syntax unified
 1303              		.thumb
 1304              		.thumb_func
 1305              		.fpu fpv4-sp-d16
 1307              	HAL_MultiProcessor_Init:
 1308              	.LFB133:
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1309              		.loc 1 547 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              	.LVL98:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1314              		.loc 1 549 0
 1315 0000 0028     		cmp	r0, #0
 1316 0002 00F01A81 		beq	.L72
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1317              		.loc 1 547 0
 1318 0006 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1319              	.LCFI9:
 1320              		.cfi_def_cfa_offset 40
 1321              		.cfi_offset 3, -40
 1322              		.cfi_offset 4, -36
 1323              		.cfi_offset 5, -32
 1324              		.cfi_offset 6, -28
 1325              		.cfi_offset 7, -24
 1326              		.cfi_offset 8, -20
 1327              		.cfi_offset 9, -16
 1328              		.cfi_offset 10, -12
 1329              		.cfi_offset 11, -8
 1330              		.cfi_offset 14, -4
ARM GAS  /tmp/cc4hqLkf.s 			page 81


 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1331              		.loc 1 563 0
 1332 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1333 000e 1646     		mov	r6, r2
 1334 0010 0446     		mov	r4, r0
 1335 0012 0D46     		mov	r5, r1
 1336 0014 03F0FF02 		and	r2, r3, #255
 1337              	.LVL99:
 1338 0018 002B     		cmp	r3, #0
 1339 001a 00F00981 		beq	.L79
 1340              	.LVL100:
 1341              	.L65:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1342              		.loc 1 587 0
 1343 001e 2368     		ldr	r3, [r4]
 1344              	.LBB56:
 1345              	.LBB57:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 1346              		.loc 1 3062 0
 1347 0020 2769     		ldr	r7, [r4, #16]
 1348              	.LBE57:
 1349              	.LBE56:
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1350              		.loc 1 584 0
 1351 0022 2422     		movs	r2, #36
 1352 0024 84F83920 		strb	r2, [r4, #57]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1353              		.loc 1 587 0
 1354 0028 D968     		ldr	r1, [r3, #12]
 1355 002a 21F40051 		bic	r1, r1, #8192
 1356              	.LBB62:
 1357              	.LBB58:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 1358              		.loc 1 3062 0
 1359 002e D4E9020C 		ldrd	r0, ip, [r4, #8]
 1360              	.LBE58:
 1361              	.LBE62:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1362              		.loc 1 587 0
 1363 0032 D960     		str	r1, [r3, #12]
 1364              	.LVL101:
 1365              	.LBB63:
 1366              	.LBB59:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1367              		.loc 1 3053 0
 1368 0034 1A69     		ldr	r2, [r3, #16]
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 1369              		.loc 1 3062 0
 1370 0036 6169     		ldr	r1, [r4, #20]
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1371              		.loc 1 3053 0
 1372 0038 22F44052 		bic	r2, r2, #12288
 1373 003c 42EA0C02 		orr	r2, r2, ip
 1374 0040 1A61     		str	r2, [r3, #16]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 1375              		.loc 1 3063 0
 1376 0042 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc4hqLkf.s 			page 82


3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 1377              		.loc 1 3062 0
 1378 0044 3843     		orrs	r0, r0, r7
 1379 0046 E769     		ldr	r7, [r4, #28]
 1380              	.LVL102:
 1381 0048 0843     		orrs	r0, r0, r1
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 1382              		.loc 1 3063 0
 1383 004a 22F41642 		bic	r2, r2, #38400
 1384 004e 22F00C02 		bic	r2, r2, #12
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 1385              		.loc 1 3062 0
 1386 0052 3843     		orrs	r0, r0, r7
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
 1387              		.loc 1 3063 0
 1388 0054 1043     		orrs	r0, r0, r2
 1389 0056 D860     		str	r0, [r3, #12]
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1390              		.loc 1 3069 0
 1391 0058 5A69     		ldr	r2, [r3, #20]
 1392 005a A169     		ldr	r1, [r4, #24]
 1393 005c 22F44072 		bic	r2, r2, #768
 1394 0060 0A43     		orrs	r2, r2, r1
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1395              		.loc 1 3072 0
 1396 0062 B7F5004F 		cmp	r7, #32768
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1397              		.loc 1 3069 0
 1398 0066 5A61     		str	r2, [r3, #20]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1399              		.loc 1 3076 0
 1400 0068 B44A     		ldr	r2, .L81
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1401              		.loc 1 3072 0
 1402 006a 00F08280 		beq	.L80
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1403              		.loc 1 3095 0
 1404 006e 9342     		cmp	r3, r2
 1405 0070 00F0E580 		beq	.L70
 1406 0074 02F58062 		add	r2, r2, #1024
 1407 0078 9342     		cmp	r3, r2
 1408 007a 00F0E080 		beq	.L70
 1409              		.loc 1 3107 0
 1410 007e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1411              	.LVL103:
 1412 0082 DFF8BC92 		ldr	r9, .L81+4
 1413 0086 6268     		ldr	r2, [r4, #4]
 1414 0088 00EB8000 		add	r0, r0, r0, lsl #2
 1415 008c 00EB8000 		add	r0, r0, r0, lsl #2
 1416 0090 9200     		lsls	r2, r2, #2
 1417 0092 B0FBF2F2 		udiv	r2, r0, r2
 1418 0096 A9FB0232 		umull	r3, r2, r9, r2
 1419 009a 5209     		lsrs	r2, r2, #5
 1420 009c 1701     		lsls	r7, r2, #4
 1421 009e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1422              	.LVL104:
 1423 00a2 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cc4hqLkf.s 			page 83


 1424 00a4 00EB8000 		add	r0, r0, r0, lsl #2
 1425 00a8 9A00     		lsls	r2, r3, #2
 1426 00aa 00EB8000 		add	r0, r0, r0, lsl #2
 1427 00ae B0FBF2F8 		udiv	r8, r0, r2
 1428 00b2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1429              	.LVL105:
 1430 00b6 6368     		ldr	r3, [r4, #4]
 1431 00b8 00EB8000 		add	r0, r0, r0, lsl #2
 1432 00bc 9A00     		lsls	r2, r3, #2
 1433 00be 00EB8000 		add	r0, r0, r0, lsl #2
 1434 00c2 B0FBF2F2 		udiv	r2, r0, r2
 1435 00c6 A9FB0232 		umull	r3, r2, r9, r2
 1436 00ca 5209     		lsrs	r2, r2, #5
 1437 00cc 4FF0640A 		mov	r10, #100
 1438 00d0 0AFB1282 		mls	r2, r10, r2, r8
 1439 00d4 1201     		lsls	r2, r2, #4
 1440 00d6 3232     		adds	r2, r2, #50
 1441 00d8 A9FB0232 		umull	r3, r2, r9, r2
 1442 00dc 5209     		lsrs	r2, r2, #5
 1443 00de 02F0F008 		and	r8, r2, #240
 1444 00e2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1445              	.LVL106:
 1446 00e6 6368     		ldr	r3, [r4, #4]
 1447 00e8 00EB8000 		add	r0, r0, r0, lsl #2
 1448 00ec 00EB8000 		add	r0, r0, r0, lsl #2
 1449 00f0 9A00     		lsls	r2, r3, #2
 1450 00f2 B0FBF2FB 		udiv	fp, r0, r2
 1451 00f6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1452              	.LVL107:
 1453              	.L78:
 1454 00fa D4E90031 		ldrd	r3, r1, [r4]
 1455 00fe 00EB8000 		add	r0, r0, r0, lsl #2
 1456 0102 8A00     		lsls	r2, r1, #2
 1457 0104 00EB8000 		add	r0, r0, r0, lsl #2
 1458 0108 B0FBF2F2 		udiv	r2, r0, r2
 1459 010c A9FB0212 		umull	r1, r2, r9, r2
 1460 0110 5209     		lsrs	r2, r2, #5
 1461 0112 0AFB12B2 		mls	r2, r10, r2, fp
 1462 0116 1201     		lsls	r2, r2, #4
 1463 0118 3232     		adds	r2, r2, #50
 1464 011a A9FB0212 		umull	r1, r2, r9, r2
 1465 011e C2F34312 		ubfx	r2, r2, #5, #4
 1466 0122 42EA0802 		orr	r2, r2, r8
 1467 0126 3A44     		add	r2, r2, r7
 1468 0128 9A60     		str	r2, [r3, #8]
 1469              	.L69:
 1470              	.LVL108:
 1471              	.LBE59:
 1472              	.LBE63:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 1473              		.loc 1 595 0
 1474 012a 1A69     		ldr	r2, [r3, #16]
 1475 012c 22F49042 		bic	r2, r2, #18432
 1476 0130 1A61     		str	r2, [r3, #16]
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1477              		.loc 1 596 0
 1478 0132 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/cc4hqLkf.s 			page 84


 1479 0134 22F02A02 		bic	r2, r2, #42
 1480 0138 5A61     		str	r2, [r3, #20]
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 1481              		.loc 1 599 0
 1482 013a 1A69     		ldr	r2, [r3, #16]
 1483 013c 22F00F02 		bic	r2, r2, #15
 1484 0140 1A61     		str	r2, [r3, #16]
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1485              		.loc 1 600 0
 1486 0142 1969     		ldr	r1, [r3, #16]
 1487 0144 0D43     		orrs	r5, r5, r1
 1488 0146 1D61     		str	r5, [r3, #16]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 1489              		.loc 1 603 0
 1490 0148 DA68     		ldr	r2, [r3, #12]
 1491 014a 22F40062 		bic	r2, r2, #2048
 1492 014e DA60     		str	r2, [r3, #12]
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1493              		.loc 1 604 0
 1494 0150 DA68     		ldr	r2, [r3, #12]
 1495 0152 1643     		orrs	r6, r6, r2
 1496              	.LVL109:
 1497 0154 DE60     		str	r6, [r3, #12]
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1498              		.loc 1 607 0
 1499 0156 DA68     		ldr	r2, [r3, #12]
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1500              		.loc 1 610 0
 1501 0158 0025     		movs	r5, #0
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1502              		.loc 1 611 0
 1503 015a 2021     		movs	r1, #32
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1504              		.loc 1 607 0
 1505 015c 42F40052 		orr	r2, r2, #8192
 1506 0160 DA60     		str	r2, [r3, #12]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1507              		.loc 1 614 0
 1508 0162 2846     		mov	r0, r5
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1509              		.loc 1 610 0
 1510 0164 E563     		str	r5, [r4, #60]
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1511              		.loc 1 611 0
 1512 0166 84F83910 		strb	r1, [r4, #57]
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1513              		.loc 1 612 0
 1514 016a 84F83A10 		strb	r1, [r4, #58]
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1515              		.loc 1 615 0
 1516 016e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1517              	.LVL110:
 1518              	.L80:
 1519              	.LBB64:
 1520              	.LBB60:
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1521              		.loc 1 3076 0
ARM GAS  /tmp/cc4hqLkf.s 			page 85


 1522 0172 9342     		cmp	r3, r2
 1523 0174 00F0A280 		beq	.L67
 1524 0178 02F58062 		add	r2, r2, #1024
 1525 017c 9342     		cmp	r3, r2
 1526 017e 00F09D80 		beq	.L67
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1527              		.loc 1 3088 0
 1528 0182 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1529              	.LVL111:
 1530 0186 DFF8B891 		ldr	r9, .L81+4
 1531 018a 6268     		ldr	r2, [r4, #4]
 1532 018c 00EB8000 		add	r0, r0, r0, lsl #2
 1533 0190 00EB8000 		add	r0, r0, r0, lsl #2
 1534 0194 5200     		lsls	r2, r2, #1
 1535 0196 B0FBF2F2 		udiv	r2, r0, r2
 1536 019a A9FB0232 		umull	r3, r2, r9, r2
 1537 019e 5209     		lsrs	r2, r2, #5
 1538 01a0 4FEA0218 		lsl	r8, r2, #4
 1539 01a4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1540              	.LVL112:
 1541 01a8 6368     		ldr	r3, [r4, #4]
 1542 01aa 00EB8000 		add	r0, r0, r0, lsl #2
 1543 01ae 5A00     		lsls	r2, r3, #1
 1544 01b0 00EB8000 		add	r0, r0, r0, lsl #2
 1545 01b4 B0FBF2F7 		udiv	r7, r0, r2
 1546 01b8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1547              	.LVL113:
 1548 01bc 6368     		ldr	r3, [r4, #4]
 1549 01be 00EB8000 		add	r0, r0, r0, lsl #2
 1550 01c2 5A00     		lsls	r2, r3, #1
 1551 01c4 00EB8000 		add	r0, r0, r0, lsl #2
 1552 01c8 B0FBF2F2 		udiv	r2, r0, r2
 1553 01cc A9FB0232 		umull	r3, r2, r9, r2
 1554 01d0 5209     		lsrs	r2, r2, #5
 1555 01d2 4FF0640A 		mov	r10, #100
 1556 01d6 0AFB1272 		mls	r2, r10, r2, r7
 1557 01da D200     		lsls	r2, r2, #3
 1558 01dc 3232     		adds	r2, r2, #50
 1559 01de A9FB0232 		umull	r3, r2, r9, r2
 1560 01e2 1209     		lsrs	r2, r2, #4
 1561 01e4 02F4F877 		and	r7, r2, #496
 1562 01e8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1563              	.LVL114:
 1564 01ec 6368     		ldr	r3, [r4, #4]
 1565 01ee 00EB8000 		add	r0, r0, r0, lsl #2
 1566 01f2 00EB8000 		add	r0, r0, r0, lsl #2
 1567 01f6 5A00     		lsls	r2, r3, #1
 1568 01f8 B0FBF2FB 		udiv	fp, r0, r2
 1569 01fc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1570              	.LVL115:
 1571              	.L77:
 1572 0200 D4E90031 		ldrd	r3, r1, [r4]
 1573 0204 00EB8000 		add	r0, r0, r0, lsl #2
 1574 0208 4A00     		lsls	r2, r1, #1
 1575 020a 00EB8000 		add	r0, r0, r0, lsl #2
 1576 020e B0FBF2F2 		udiv	r2, r0, r2
 1577 0212 A9FB0212 		umull	r1, r2, r9, r2
ARM GAS  /tmp/cc4hqLkf.s 			page 86


 1578 0216 5209     		lsrs	r2, r2, #5
 1579 0218 0AFB12B2 		mls	r2, r10, r2, fp
 1580 021c D200     		lsls	r2, r2, #3
 1581 021e 3232     		adds	r2, r2, #50
 1582 0220 A9FB0212 		umull	r1, r2, r9, r2
 1583 0224 C2F34212 		ubfx	r2, r2, #5, #3
 1584 0228 4244     		add	r2, r2, r8
 1585 022a 3A44     		add	r2, r2, r7
 1586 022c 9A60     		str	r2, [r3, #8]
 1587 022e 7CE7     		b	.L69
 1588              	.LVL116:
 1589              	.L79:
 1590              	.LBE60:
 1591              	.LBE64:
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1592              		.loc 1 566 0
 1593 0230 80F83820 		strb	r2, [r0, #56]
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1594              		.loc 1 580 0
 1595 0234 FFF7FEFF 		bl	HAL_UART_MspInit
 1596              	.LVL117:
 1597 0238 F1E6     		b	.L65
 1598              	.LVL118:
 1599              	.L72:
 1600              	.LCFI10:
 1601              		.cfi_def_cfa_offset 0
 1602              		.cfi_restore 3
 1603              		.cfi_restore 4
 1604              		.cfi_restore 5
 1605              		.cfi_restore 6
 1606              		.cfi_restore 7
 1607              		.cfi_restore 8
 1608              		.cfi_restore 9
 1609              		.cfi_restore 10
 1610              		.cfi_restore 11
 1611              		.cfi_restore 14
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1612              		.loc 1 551 0
 1613 023a 0120     		movs	r0, #1
 1614              	.LVL119:
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1615              		.loc 1 615 0
 1616 023c 7047     		bx	lr
 1617              	.LVL120:
 1618              	.L70:
 1619              	.LCFI11:
 1620              		.cfi_def_cfa_offset 40
 1621              		.cfi_offset 3, -40
 1622              		.cfi_offset 4, -36
 1623              		.cfi_offset 5, -32
 1624              		.cfi_offset 6, -28
 1625              		.cfi_offset 7, -24
 1626              		.cfi_offset 8, -20
 1627              		.cfi_offset 9, -16
 1628              		.cfi_offset 10, -12
 1629              		.cfi_offset 11, -8
 1630              		.cfi_offset 14, -4
ARM GAS  /tmp/cc4hqLkf.s 			page 87


 1631              	.LBB65:
 1632              	.LBB61:
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1633              		.loc 1 3097 0
 1634 023e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1635              	.LVL121:
 1636 0242 DFF8FC90 		ldr	r9, .L81+4
 1637 0246 6268     		ldr	r2, [r4, #4]
 1638 0248 00EB8000 		add	r0, r0, r0, lsl #2
 1639 024c 00EB8000 		add	r0, r0, r0, lsl #2
 1640 0250 9200     		lsls	r2, r2, #2
 1641 0252 B0FBF2F2 		udiv	r2, r0, r2
 1642 0256 A9FB0232 		umull	r3, r2, r9, r2
 1643 025a 5209     		lsrs	r2, r2, #5
 1644 025c 1701     		lsls	r7, r2, #4
 1645 025e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1646              	.LVL122:
 1647 0262 6368     		ldr	r3, [r4, #4]
 1648 0264 00EB8000 		add	r0, r0, r0, lsl #2
 1649 0268 9A00     		lsls	r2, r3, #2
 1650 026a 00EB8000 		add	r0, r0, r0, lsl #2
 1651 026e B0FBF2F8 		udiv	r8, r0, r2
 1652 0272 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1653              	.LVL123:
 1654 0276 6368     		ldr	r3, [r4, #4]
 1655 0278 00EB8000 		add	r0, r0, r0, lsl #2
 1656 027c 9A00     		lsls	r2, r3, #2
 1657 027e 00EB8000 		add	r0, r0, r0, lsl #2
 1658 0282 B0FBF2F2 		udiv	r2, r0, r2
 1659 0286 A9FB0232 		umull	r3, r2, r9, r2
 1660 028a 4FF0640A 		mov	r10, #100
 1661 028e 5209     		lsrs	r2, r2, #5
 1662 0290 0AFB1282 		mls	r2, r10, r2, r8
 1663 0294 1201     		lsls	r2, r2, #4
 1664 0296 3232     		adds	r2, r2, #50
 1665 0298 A9FB0232 		umull	r3, r2, r9, r2
 1666 029c 5209     		lsrs	r2, r2, #5
 1667 029e 02F0F008 		and	r8, r2, #240
 1668 02a2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1669              	.LVL124:
 1670 02a6 6368     		ldr	r3, [r4, #4]
 1671 02a8 00EB8000 		add	r0, r0, r0, lsl #2
 1672 02ac 9A00     		lsls	r2, r3, #2
 1673 02ae 00EB8000 		add	r0, r0, r0, lsl #2
 1674 02b2 B0FBF2FB 		udiv	fp, r0, r2
 1675 02b6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1676              	.LVL125:
 1677 02ba 1EE7     		b	.L78
 1678              	.LVL126:
 1679              	.L67:
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1680              		.loc 1 3078 0
 1681 02bc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1682              	.LVL127:
 1683 02c0 DFF87C90 		ldr	r9, .L81+4
 1684 02c4 6268     		ldr	r2, [r4, #4]
 1685 02c6 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/cc4hqLkf.s 			page 88


 1686 02ca 00EB8000 		add	r0, r0, r0, lsl #2
 1687 02ce 5200     		lsls	r2, r2, #1
 1688 02d0 B0FBF2F2 		udiv	r2, r0, r2
 1689 02d4 A9FB0232 		umull	r3, r2, r9, r2
 1690 02d8 5209     		lsrs	r2, r2, #5
 1691 02da 4FEA0218 		lsl	r8, r2, #4
 1692 02de FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1693              	.LVL128:
 1694 02e2 6368     		ldr	r3, [r4, #4]
 1695 02e4 00EB8000 		add	r0, r0, r0, lsl #2
 1696 02e8 5A00     		lsls	r2, r3, #1
 1697 02ea 00EB8000 		add	r0, r0, r0, lsl #2
 1698 02ee B0FBF2F7 		udiv	r7, r0, r2
 1699 02f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1700              	.LVL129:
 1701 02f6 6368     		ldr	r3, [r4, #4]
 1702 02f8 00EB8000 		add	r0, r0, r0, lsl #2
 1703 02fc 5A00     		lsls	r2, r3, #1
 1704 02fe 00EB8000 		add	r0, r0, r0, lsl #2
 1705 0302 B0FBF2F2 		udiv	r2, r0, r2
 1706 0306 A9FB0232 		umull	r3, r2, r9, r2
 1707 030a 4FF0640A 		mov	r10, #100
 1708 030e 5209     		lsrs	r2, r2, #5
 1709 0310 0AFB1272 		mls	r2, r10, r2, r7
 1710 0314 D200     		lsls	r2, r2, #3
 1711 0316 3232     		adds	r2, r2, #50
 1712 0318 A9FB0232 		umull	r3, r2, r9, r2
 1713 031c 1209     		lsrs	r2, r2, #4
 1714 031e 02F4F877 		and	r7, r2, #496
 1715 0322 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1716              	.LVL130:
 1717 0326 6368     		ldr	r3, [r4, #4]
 1718 0328 00EB8000 		add	r0, r0, r0, lsl #2
 1719 032c 5A00     		lsls	r2, r3, #1
 1720 032e 00EB8000 		add	r0, r0, r0, lsl #2
 1721 0332 B0FBF2FB 		udiv	fp, r0, r2
 1722 0336 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 1723              	.LVL131:
 1724 033a 61E7     		b	.L77
 1725              	.L82:
 1726              		.align	2
 1727              	.L81:
 1728 033c 00100140 		.word	1073811456
 1729 0340 1F85EB51 		.word	1374389535
 1730              	.LBE61:
 1731              	.LBE65:
 1732              		.cfi_endproc
 1733              	.LFE133:
 1735              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1736              		.align	1
 1737              		.p2align 2,,3
 1738              		.weak	HAL_UART_MspDeInit
 1739              		.syntax unified
 1740              		.thumb
 1741              		.thumb_func
 1742              		.fpu fpv4-sp-d16
 1744              	HAL_UART_MspDeInit:
ARM GAS  /tmp/cc4hqLkf.s 			page 89


 1745              	.LFB188:
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              		@ link register save eliminated.
 1750 0000 7047     		bx	lr
 1751              		.cfi_endproc
 1752              	.LFE188:
 1754 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1755              		.align	1
 1756              		.p2align 2,,3
 1757              		.global	HAL_UART_DeInit
 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1761              		.fpu fpv4-sp-d16
 1763              	HAL_UART_DeInit:
 1764              	.LFB134:
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1765              		.loc 1 624 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 0, uses_anonymous_args = 0
 1769              	.LVL132:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1770              		.loc 1 626 0
 1771 0000 A8B1     		cbz	r0, .L86
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1772              		.loc 1 637 0
 1773 0002 0268     		ldr	r2, [r0]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1774              		.loc 1 634 0
 1775 0004 2423     		movs	r3, #36
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1776              		.loc 1 624 0
 1777 0006 10B5     		push	{r4, lr}
 1778              	.LCFI12:
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 4, -8
 1781              		.cfi_offset 14, -4
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1782              		.loc 1 634 0
 1783 0008 80F83930 		strb	r3, [r0, #57]
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1784              		.loc 1 637 0
 1785 000c D368     		ldr	r3, [r2, #12]
 1786 000e 23F40053 		bic	r3, r3, #8192
 1787 0012 0446     		mov	r4, r0
 1788 0014 D360     		str	r3, [r2, #12]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1789              		.loc 1 648 0
 1790 0016 FFF7FEFF 		bl	HAL_UART_MspDeInit
 1791              	.LVL133:
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1792              		.loc 1 651 0
 1793 001a 0023     		movs	r3, #0
 1794 001c E363     		str	r3, [r4, #60]
ARM GAS  /tmp/cc4hqLkf.s 			page 90


 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1795              		.loc 1 656 0
 1796 001e 84F83830 		strb	r3, [r4, #56]
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1797              		.loc 1 652 0
 1798 0022 84F83930 		strb	r3, [r4, #57]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1799              		.loc 1 658 0
 1800 0026 1846     		mov	r0, r3
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1801              		.loc 1 653 0
 1802 0028 84F83A30 		strb	r3, [r4, #58]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1803              		.loc 1 659 0
 1804 002c 10BD     		pop	{r4, pc}
 1805              	.LVL134:
 1806              	.L86:
 1807              	.LCFI13:
 1808              		.cfi_def_cfa_offset 0
 1809              		.cfi_restore 4
 1810              		.cfi_restore 14
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1811              		.loc 1 628 0
 1812 002e 0120     		movs	r0, #1
 1813              	.LVL135:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1814              		.loc 1 659 0
 1815 0030 7047     		bx	lr
 1816              		.cfi_endproc
 1817              	.LFE134:
 1819 0032 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1820              		.align	1
 1821              		.p2align 2,,3
 1822              		.global	HAL_UART_Transmit
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1826              		.fpu fpv4-sp-d16
 1828              	HAL_UART_Transmit:
 1829              	.LFB137:
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 1830              		.loc 1 1020 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 8
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              	.LVL136:
 1835 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1836              	.LCFI14:
 1837              		.cfi_def_cfa_offset 20
 1838              		.cfi_offset 4, -20
 1839              		.cfi_offset 5, -16
 1840              		.cfi_offset 6, -12
 1841              		.cfi_offset 7, -8
 1842              		.cfi_offset 14, -4
 1843 0002 0E46     		mov	r6, r1
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1844              		.loc 1 1025 0
ARM GAS  /tmp/cc4hqLkf.s 			page 91


 1845 0004 90F83910 		ldrb	r1, [r0, #57]	@ zero_extendqisi2
 1846              	.LVL137:
 1847 0008 2029     		cmp	r1, #32
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 1848              		.loc 1 1020 0
 1849 000a 83B0     		sub	sp, sp, #12
 1850              	.LCFI15:
 1851              		.cfi_def_cfa_offset 32
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1852              		.loc 1 1025 0
 1853 000c 2DD1     		bne	.L121
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1854              		.loc 1 1027 0
 1855 000e 002E     		cmp	r6, #0
 1856 0010 2ED0     		beq	.L120
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1857              		.loc 1 1027 0 is_stmt 0 discriminator 1
 1858 0012 0192     		str	r2, [sp, #4]
 1859 0014 62B3     		cbz	r2, .L120
 1860 0016 1F46     		mov	r7, r3
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1861              		.loc 1 1033 0 is_stmt 1
 1862 0018 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1863              	.LVL138:
 1864 001c 012B     		cmp	r3, #1
 1865 001e 0446     		mov	r4, r0
 1866 0020 23D0     		beq	.L121
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1867              		.loc 1 1035 0 discriminator 2
 1868 0022 0023     		movs	r3, #0
 1869 0024 C363     		str	r3, [r0, #60]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1870              		.loc 1 1033 0 discriminator 2
 1871 0026 0121     		movs	r1, #1
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1872              		.loc 1 1036 0 discriminator 2
 1873 0028 2123     		movs	r3, #33
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1874              		.loc 1 1033 0 discriminator 2
 1875 002a 80F83810 		strb	r1, [r0, #56]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1876              		.loc 1 1036 0 discriminator 2
 1877 002e 80F83930 		strb	r3, [r0, #57]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1878              		.loc 1 1039 0 discriminator 2
 1879 0032 FFF7FEFF 		bl	HAL_GetTick
 1880              	.LVL139:
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1881              		.loc 1 1041 0 discriminator 2
 1882 0036 019A     		ldr	r2, [sp, #4]
 1883 0038 A284     		strh	r2, [r4, #36]	@ movhi
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 1884              		.loc 1 1042 0 discriminator 2
 1885 003a E284     		strh	r2, [r4, #38]	@ movhi
 1886 003c 2268     		ldr	r2, [r4]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1887              		.loc 1 1039 0 discriminator 2
ARM GAS  /tmp/cc4hqLkf.s 			page 92


 1888 003e 0546     		mov	r5, r0
 1889              	.LVL140:
 1890              	.L93:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1891              		.loc 1 1043 0
 1892 0040 E38C     		ldrh	r3, [r4, #38]
 1893 0042 9BB2     		uxth	r3, r3
 1894 0044 002B     		cmp	r3, #0
 1895 0046 39D0     		beq	.L111
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1896              		.loc 1 1045 0
 1897 0048 E08C     		ldrh	r0, [r4, #38]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1898              		.loc 1 1046 0
 1899 004a A168     		ldr	r1, [r4, #8]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1900              		.loc 1 1045 0
 1901 004c 0138     		subs	r0, r0, #1
 1902 004e 80B2     		uxth	r0, r0
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1903              		.loc 1 1046 0
 1904 0050 B1F5805F 		cmp	r1, #4096
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1905              		.loc 1 1045 0
 1906 0054 E084     		strh	r0, [r4, #38]	@ movhi
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1907              		.loc 1 1046 0
 1908 0056 19D0     		beq	.L94
 1909              	.L95:
 1910 0058 781C     		adds	r0, r7, #1
 1911 005a 3BD1     		bne	.L106
 1912              	.L107:
 1913              	.LBB78:
 1914              	.LBB79:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1915              		.loc 1 2670 0
 1916 005c 1068     		ldr	r0, [r2]
 1917 005e 0106     		lsls	r1, r0, #24
 1918 0060 FCD5     		bpl	.L107
 1919              	.L108:
 1920              	.LVL141:
 1921              	.LBE79:
 1922              	.LBE78:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 1923              		.loc 1 1069 0
 1924 0062 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1925 0064 5360     		str	r3, [r2, #4]
 1926              	.LVL142:
 1927              	.L140:
 1928 0066 0136     		adds	r6, r6, #1
 1929 0068 EAE7     		b	.L93
 1930              	.LVL143:
 1931              	.L121:
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1932              		.loc 1 1088 0
 1933 006a 0220     		movs	r0, #2
 1934              	.LVL144:
ARM GAS  /tmp/cc4hqLkf.s 			page 93


 1935              	.L92:
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1936              		.loc 1 1090 0
 1937 006c 03B0     		add	sp, sp, #12
 1938              	.LCFI16:
 1939              		.cfi_remember_state
 1940              		.cfi_def_cfa_offset 20
 1941              		@ sp needed
 1942 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 1943              	.LVL145:
 1944              	.L120:
 1945              	.LCFI17:
 1946              		.cfi_restore_state
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1947              		.loc 1 1029 0
 1948 0070 0120     		movs	r0, #1
 1949              	.LVL146:
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1950              		.loc 1 1090 0
 1951 0072 03B0     		add	sp, sp, #12
 1952              	.LCFI18:
 1953              		.cfi_remember_state
 1954              		.cfi_def_cfa_offset 20
 1955              		@ sp needed
 1956 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 1957              	.LVL147:
 1958              	.L98:
 1959              	.LCFI19:
 1960              		.cfi_restore_state
 1961              	.LBB81:
 1962              	.LBB82:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1963              		.loc 1 2670 0
 1964 0076 1368     		ldr	r3, [r2]
 1965 0078 1B06     		lsls	r3, r3, #24
 1966 007a 0CD4     		bmi	.L100
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1967              		.loc 1 2675 0
 1968 007c 002F     		cmp	r7, #0
 1969 007e 33D0     		beq	.L112
 1970 0080 FFF7FEFF 		bl	HAL_GetTick
 1971              	.LVL148:
 1972 0084 401B     		subs	r0, r0, r5
 1973 0086 8742     		cmp	r7, r0
 1974 0088 2268     		ldr	r2, [r4]
 1975 008a 2DD3     		bcc	.L112
 1976              	.L94:
 1977 008c 781C     		adds	r0, r7, #1
 1978 008e F2D1     		bne	.L98
 1979              	.L99:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1980              		.loc 1 2670 0
 1981 0090 1068     		ldr	r0, [r2]
 1982 0092 0106     		lsls	r1, r0, #24
 1983 0094 FCD5     		bpl	.L99
 1984              	.L100:
 1985              	.LVL149:
ARM GAS  /tmp/cc4hqLkf.s 			page 94


 1986              	.LBE82:
 1987              	.LBE81:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1988              		.loc 1 1053 0
 1989 0096 3388     		ldrh	r3, [r6]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1990              		.loc 1 1054 0
 1991 0098 2169     		ldr	r1, [r4, #16]
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1992              		.loc 1 1053 0
 1993 009a C3F30803 		ubfx	r3, r3, #0, #9
 1994 009e 5360     		str	r3, [r2, #4]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1995              		.loc 1 1054 0
 1996 00a0 0029     		cmp	r1, #0
 1997 00a2 E0D1     		bne	.L140
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1998              		.loc 1 1056 0
 1999 00a4 0236     		adds	r6, r6, #2
 2000              	.LVL150:
 2001 00a6 CBE7     		b	.L93
 2002              	.LVL151:
 2003              	.L114:
 2004              	.LBB83:
 2005              	.LBB84:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2006              		.loc 1 2670 0
 2007 00a8 1368     		ldr	r3, [r2]
 2008 00aa 5B06     		lsls	r3, r3, #25
 2009 00ac 0BD4     		bmi	.L116
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2010              		.loc 1 2675 0
 2011 00ae DFB1     		cbz	r7, .L112
 2012 00b0 FFF7FEFF 		bl	HAL_GetTick
 2013              	.LVL152:
 2014 00b4 401B     		subs	r0, r0, r5
 2015 00b6 8742     		cmp	r7, r0
 2016 00b8 2268     		ldr	r2, [r4]
 2017 00ba 15D3     		bcc	.L112
 2018              	.L111:
 2019 00bc 781C     		adds	r0, r7, #1
 2020 00be F3D1     		bne	.L114
 2021              	.L115:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2022              		.loc 1 2670 0
 2023 00c0 1368     		ldr	r3, [r2]
 2024 00c2 5906     		lsls	r1, r3, #25
 2025 00c4 FCD5     		bpl	.L115
 2026              	.L116:
 2027              	.LBE84:
 2028              	.LBE83:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2029              		.loc 1 1079 0
 2030 00c6 2023     		movs	r3, #32
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2031              		.loc 1 1082 0
 2032 00c8 0020     		movs	r0, #0
ARM GAS  /tmp/cc4hqLkf.s 			page 95


1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2033              		.loc 1 1079 0
 2034 00ca 84F83930 		strb	r3, [r4, #57]
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2035              		.loc 1 1082 0
 2036 00ce 84F83800 		strb	r0, [r4, #56]
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2037              		.loc 1 1084 0
 2038 00d2 CBE7     		b	.L92
 2039              	.L106:
 2040              	.LBB91:
 2041              	.LBB80:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2042              		.loc 1 2670 0
 2043 00d4 1368     		ldr	r3, [r2]
 2044 00d6 1B06     		lsls	r3, r3, #24
 2045 00d8 C3D4     		bmi	.L108
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2046              		.loc 1 2675 0
 2047 00da 2FB1     		cbz	r7, .L112
 2048 00dc FFF7FEFF 		bl	HAL_GetTick
 2049              	.LVL153:
 2050 00e0 401B     		subs	r0, r0, r5
 2051 00e2 8742     		cmp	r7, r0
 2052 00e4 2268     		ldr	r2, [r4]
 2053 00e6 B7D2     		bcs	.L95
 2054              	.L112:
 2055              	.LVL154:
 2056              	.LBE80:
 2057              	.LBE91:
 2058              	.LBB92:
 2059              	.LBB89:
 2060              	.LBB85:
 2061              	.LBB86:
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2062              		.loc 1 2678 0
 2063 00e8 D368     		ldr	r3, [r2, #12]
 2064 00ea 23F4D073 		bic	r3, r3, #416
 2065 00ee D360     		str	r3, [r2, #12]
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2066              		.loc 1 2679 0
 2067 00f0 5369     		ldr	r3, [r2, #20]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2068              		.loc 1 2681 0
 2069 00f2 2021     		movs	r1, #32
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2070              		.loc 1 2679 0
 2071 00f4 23F00103 		bic	r3, r3, #1
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2072              		.loc 1 2685 0
 2073 00f8 0025     		movs	r5, #0
 2074              	.LVL155:
 2075              	.LBE86:
 2076              	.LBE85:
 2077              	.LBE89:
 2078              	.LBE92:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc4hqLkf.s 			page 96


 2079              		.loc 1 1075 0
 2080 00fa 0320     		movs	r0, #3
 2081              	.LBB93:
 2082              	.LBB90:
 2083              	.LBB88:
 2084              	.LBB87:
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2085              		.loc 1 2679 0
 2086 00fc 5361     		str	r3, [r2, #20]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2087              		.loc 1 2681 0
 2088 00fe 84F83910 		strb	r1, [r4, #57]
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2089              		.loc 1 2685 0
 2090 0102 84F83850 		strb	r5, [r4, #56]
 2091              	.LVL156:
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2092              		.loc 1 2682 0
 2093 0106 84F83A10 		strb	r1, [r4, #58]
 2094              	.LBE87:
 2095              	.LBE88:
 2096              	.LBE90:
 2097              	.LBE93:
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2098              		.loc 1 1090 0
 2099 010a 03B0     		add	sp, sp, #12
 2100              	.LCFI20:
 2101              		.cfi_def_cfa_offset 20
 2102              		@ sp needed
 2103 010c F0BD     		pop	{r4, r5, r6, r7, pc}
 2104              		.cfi_endproc
 2105              	.LFE137:
 2107 010e 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 2108              		.align	1
 2109              		.p2align 2,,3
 2110              		.global	HAL_UART_Receive
 2111              		.syntax unified
 2112              		.thumb
 2113              		.thumb_func
 2114              		.fpu fpv4-sp-d16
 2116              	HAL_UART_Receive:
 2117              	.LFB138:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 2118              		.loc 1 1102 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 8
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
 2122              	.LVL157:
 2123 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2124              	.LCFI21:
 2125              		.cfi_def_cfa_offset 20
 2126              		.cfi_offset 4, -20
 2127              		.cfi_offset 5, -16
 2128              		.cfi_offset 6, -12
 2129              		.cfi_offset 7, -8
 2130              		.cfi_offset 14, -4
 2131 0002 0E46     		mov	r6, r1
ARM GAS  /tmp/cc4hqLkf.s 			page 97


1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2132              		.loc 1 1107 0
 2133 0004 90F83A10 		ldrb	r1, [r0, #58]	@ zero_extendqisi2
 2134              	.LVL158:
 2135 0008 2029     		cmp	r1, #32
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
 2136              		.loc 1 1102 0
 2137 000a 83B0     		sub	sp, sp, #12
 2138              	.LCFI22:
 2139              		.cfi_def_cfa_offset 32
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2140              		.loc 1 1107 0
 2141 000c 32D1     		bne	.L163
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2142              		.loc 1 1109 0
 2143 000e 002E     		cmp	r6, #0
 2144 0010 33D0     		beq	.L162
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2145              		.loc 1 1109 0 is_stmt 0 discriminator 1
 2146 0012 0192     		str	r2, [sp, #4]
 2147 0014 002A     		cmp	r2, #0
 2148 0016 30D0     		beq	.L162
 2149 0018 1F46     		mov	r7, r3
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2150              		.loc 1 1115 0 is_stmt 1
 2151 001a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2152              	.LVL159:
 2153 001e 012B     		cmp	r3, #1
 2154 0020 0446     		mov	r4, r0
 2155 0022 27D0     		beq	.L163
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2156              		.loc 1 1117 0 discriminator 2
 2157 0024 0023     		movs	r3, #0
 2158 0026 C363     		str	r3, [r0, #60]
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2159              		.loc 1 1115 0 discriminator 2
 2160 0028 0121     		movs	r1, #1
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2161              		.loc 1 1118 0 discriminator 2
 2162 002a 2223     		movs	r3, #34
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2163              		.loc 1 1115 0 discriminator 2
 2164 002c 80F83810 		strb	r1, [r0, #56]
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2165              		.loc 1 1118 0 discriminator 2
 2166 0030 80F83A30 		strb	r3, [r0, #58]
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2167              		.loc 1 1121 0 discriminator 2
 2168 0034 FFF7FEFF 		bl	HAL_GetTick
 2169              	.LVL160:
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2170              		.loc 1 1123 0 discriminator 2
 2171 0038 019A     		ldr	r2, [sp, #4]
 2172 003a A285     		strh	r2, [r4, #44]	@ movhi
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2173              		.loc 1 1121 0 discriminator 2
 2174 003c 0546     		mov	r5, r0
ARM GAS  /tmp/cc4hqLkf.s 			page 98


 2175              	.LVL161:
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2176              		.loc 1 1124 0 discriminator 2
 2177 003e E285     		strh	r2, [r4, #46]	@ movhi
 2178              	.LVL162:
 2179              	.L143:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2180              		.loc 1 1127 0
 2181 0040 E08D     		ldrh	r0, [r4, #46]
 2182 0042 80B2     		uxth	r0, r0
 2183 0044 0028     		cmp	r0, #0
 2184 0046 59D0     		beq	.L179
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 2185              		.loc 1 1129 0
 2186 0048 E28D     		ldrh	r2, [r4, #46]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2187              		.loc 1 1130 0
 2188 004a A368     		ldr	r3, [r4, #8]
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 2189              		.loc 1 1129 0
 2190 004c 013A     		subs	r2, r2, #1
 2191 004e 92B2     		uxth	r2, r2
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2192              		.loc 1 1130 0
 2193 0050 B3F5805F 		cmp	r3, #4096
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 2194              		.loc 1 1129 0
 2195 0054 E285     		strh	r2, [r4, #46]	@ movhi
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2196              		.loc 1 1130 0
 2197 0056 1DD0     		beq	.L144
 2198              	.L145:
 2199 0058 791C     		adds	r1, r7, #1
 2200              	.LBB102:
 2201              	.LBB103:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2202              		.loc 1 2670 0
 2203 005a 2068     		ldr	r0, [r4]
 2204 005c 28D1     		bne	.L154
 2205              	.L155:
 2206 005e 0268     		ldr	r2, [r0]
 2207 0060 9206     		lsls	r2, r2, #26
 2208 0062 FCD5     		bpl	.L155
 2209              	.L156:
 2210              	.LBE103:
 2211              	.LBE102:
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2212              		.loc 1 1155 0
 2213 0064 2369     		ldr	r3, [r4, #16]
 2214 0066 721C     		adds	r2, r6, #1
 2215 0068 002B     		cmp	r3, #0
 2216 006a 3DD1     		bne	.L158
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2217              		.loc 1 1157 0
 2218 006c 4368     		ldr	r3, [r0, #4]
 2219              	.LVL163:
 2220 006e 3370     		strb	r3, [r6]
ARM GAS  /tmp/cc4hqLkf.s 			page 99


 2221 0070 1646     		mov	r6, r2
 2222 0072 E5E7     		b	.L143
 2223              	.LVL164:
 2224              	.L163:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2225              		.loc 1 1177 0
 2226 0074 0220     		movs	r0, #2
 2227              	.LVL165:
 2228              	.L142:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2229              		.loc 1 1179 0
 2230 0076 03B0     		add	sp, sp, #12
 2231              	.LCFI23:
 2232              		.cfi_remember_state
 2233              		.cfi_def_cfa_offset 20
 2234              		@ sp needed
 2235 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 2236              	.LVL166:
 2237              	.L162:
 2238              	.LCFI24:
 2239              		.cfi_restore_state
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2240              		.loc 1 1111 0
 2241 007a 0120     		movs	r0, #1
 2242              	.LVL167:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2243              		.loc 1 1179 0
 2244 007c 03B0     		add	sp, sp, #12
 2245              	.LCFI25:
 2246              		.cfi_remember_state
 2247              		.cfi_def_cfa_offset 20
 2248              		@ sp needed
 2249 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 2250              	.LVL168:
 2251              	.L147:
 2252              	.LCFI26:
 2253              		.cfi_restore_state
 2254              	.LBB110:
 2255              	.LBB111:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2256              		.loc 1 2670 0
 2257 0080 1A68     		ldr	r2, [r3]
 2258 0082 9006     		lsls	r0, r2, #26
 2259 0084 0CD4     		bmi	.L149
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2260              		.loc 1 2675 0
 2261 0086 002F     		cmp	r7, #0
 2262 0088 3FD0     		beq	.L146
 2263 008a FFF7FEFF 		bl	HAL_GetTick
 2264              	.LVL169:
 2265 008e 401B     		subs	r0, r0, r5
 2266 0090 8742     		cmp	r7, r0
 2267 0092 39D3     		bcc	.L180
 2268              	.L144:
 2269 0094 791C     		adds	r1, r7, #1
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2270              		.loc 1 2670 0
ARM GAS  /tmp/cc4hqLkf.s 			page 100


 2271 0096 2368     		ldr	r3, [r4]
 2272 0098 F2D1     		bne	.L147
 2273              	.L148:
 2274 009a 1A68     		ldr	r2, [r3]
 2275 009c 9206     		lsls	r2, r2, #26
 2276 009e FCD5     		bpl	.L148
 2277              	.L149:
 2278              	.LVL170:
 2279              	.LBE111:
 2280              	.LBE110:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2281              		.loc 1 1137 0
 2282 00a0 2269     		ldr	r2, [r4, #16]
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 2283              		.loc 1 1139 0
 2284 00a2 5B68     		ldr	r3, [r3, #4]
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2285              		.loc 1 1137 0
 2286 00a4 32BB     		cbnz	r2, .L151
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 2287              		.loc 1 1139 0
 2288 00a6 C3F30803 		ubfx	r3, r3, #0, #9
 2289 00aa 26F8023B 		strh	r3, [r6], #2	@ movhi
 2290              	.LVL171:
 2291 00ae C7E7     		b	.L143
 2292              	.LVL172:
 2293              	.L154:
 2294              	.LBB118:
 2295              	.LBB108:
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2296              		.loc 1 2670 0
 2297 00b0 0368     		ldr	r3, [r0]
 2298 00b2 9B06     		lsls	r3, r3, #26
 2299 00b4 D6D4     		bmi	.L156
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2300              		.loc 1 2675 0
 2301 00b6 2FB1     		cbz	r7, .L153
 2302 00b8 FFF7FEFF 		bl	HAL_GetTick
 2303              	.LVL173:
 2304 00bc 401B     		subs	r0, r0, r5
 2305 00be 8742     		cmp	r7, r0
 2306 00c0 CAD2     		bcs	.L145
 2307 00c2 2068     		ldr	r0, [r4]
 2308              	.L153:
 2309              	.LVL174:
 2310              	.LBB104:
 2311              	.LBB105:
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2312              		.loc 1 2678 0
 2313 00c4 C368     		ldr	r3, [r0, #12]
 2314 00c6 23F4D073 		bic	r3, r3, #416
 2315 00ca C360     		str	r3, [r0, #12]
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2316              		.loc 1 2679 0
 2317 00cc 4369     		ldr	r3, [r0, #20]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2318              		.loc 1 2681 0
ARM GAS  /tmp/cc4hqLkf.s 			page 101


 2319 00ce 2022     		movs	r2, #32
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2320              		.loc 1 2679 0
 2321 00d0 23F00103 		bic	r3, r3, #1
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2322              		.loc 1 2685 0
 2323 00d4 0021     		movs	r1, #0
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2324              		.loc 1 2679 0
 2325 00d6 4361     		str	r3, [r0, #20]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2326              		.loc 1 2681 0
 2327 00d8 84F83920 		strb	r2, [r4, #57]
 2328              	.LBE105:
 2329              	.LBE104:
 2330              	.LBE108:
 2331              	.LBE118:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2332              		.loc 1 1153 0
 2333 00dc 0320     		movs	r0, #3
 2334              	.LBB119:
 2335              	.LBB109:
 2336              	.LBB107:
 2337              	.LBB106:
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2338              		.loc 1 2685 0
 2339 00de 84F83810 		strb	r1, [r4, #56]
 2340              	.LVL175:
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2341              		.loc 1 2682 0
 2342 00e2 84F83A20 		strb	r2, [r4, #58]
 2343 00e6 C6E7     		b	.L142
 2344              	.L158:
 2345              	.LBE106:
 2346              	.LBE107:
 2347              	.LBE109:
 2348              	.LBE119:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2349              		.loc 1 1161 0
 2350 00e8 4368     		ldr	r3, [r0, #4]
 2351              	.LVL176:
 2352 00ea 03F07F03 		and	r3, r3, #127
 2353 00ee 3370     		strb	r3, [r6]
 2354 00f0 1646     		mov	r6, r2
 2355              	.LVL177:
 2356 00f2 A5E7     		b	.L143
 2357              	.LVL178:
 2358              	.L151:
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 2359              		.loc 1 1144 0
 2360 00f4 DBB2     		uxtb	r3, r3
 2361 00f6 26F8013B 		strh	r3, [r6], #1	@ movhi
 2362              	.LVL179:
 2363 00fa A1E7     		b	.L143
 2364              	.LVL180:
 2365              	.L179:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 102


 2366              		.loc 1 1168 0
 2367 00fc 2023     		movs	r3, #32
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2368              		.loc 1 1171 0
 2369 00fe 84F83800 		strb	r0, [r4, #56]
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2370              		.loc 1 1168 0
 2371 0102 84F83A30 		strb	r3, [r4, #58]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2372              		.loc 1 1173 0
 2373 0106 B6E7     		b	.L142
 2374              	.L180:
 2375 0108 2368     		ldr	r3, [r4]
 2376              	.L146:
 2377              	.LVL181:
 2378              	.LBB120:
 2379              	.LBB116:
 2380              	.LBB112:
 2381              	.LBB113:
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2382              		.loc 1 2678 0
 2383 010a DA68     		ldr	r2, [r3, #12]
 2384 010c 22F4D072 		bic	r2, r2, #416
 2385 0110 DA60     		str	r2, [r3, #12]
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2386              		.loc 1 2679 0
 2387 0112 5A69     		ldr	r2, [r3, #20]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2388              		.loc 1 2681 0
 2389 0114 2021     		movs	r1, #32
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2390              		.loc 1 2679 0
 2391 0116 22F00102 		bic	r2, r2, #1
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2392              		.loc 1 2685 0
 2393 011a 0025     		movs	r5, #0
 2394              	.LVL182:
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2395              		.loc 1 2679 0
 2396 011c 5A61     		str	r2, [r3, #20]
 2397              	.LBE113:
 2398              	.LBE112:
 2399              	.LBE116:
 2400              	.LBE120:
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2401              		.loc 1 1134 0
 2402 011e 0320     		movs	r0, #3
 2403              	.LBB121:
 2404              	.LBB117:
 2405              	.LBB115:
 2406              	.LBB114:
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2407              		.loc 1 2681 0
 2408 0120 84F83910 		strb	r1, [r4, #57]
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2409              		.loc 1 2685 0
 2410 0124 84F83850 		strb	r5, [r4, #56]
ARM GAS  /tmp/cc4hqLkf.s 			page 103


 2411              	.LVL183:
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2412              		.loc 1 2682 0
 2413 0128 84F83A10 		strb	r1, [r4, #58]
 2414 012c A3E7     		b	.L142
 2415              	.LBE114:
 2416              	.LBE115:
 2417              	.LBE117:
 2418              	.LBE121:
 2419              		.cfi_endproc
 2420              	.LFE138:
 2422 012e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 2423              		.align	1
 2424              		.p2align 2,,3
 2425              		.global	HAL_UART_Transmit_IT
 2426              		.syntax unified
 2427              		.thumb
 2428              		.thumb_func
 2429              		.fpu fpv4-sp-d16
 2431              	HAL_UART_Transmit_IT:
 2432              	.LFB139:
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 2433              		.loc 1 1190 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 0
 2436              		@ frame_needed = 0, uses_anonymous_args = 0
 2437              		@ link register save eliminated.
 2438              	.LVL184:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2439              		.loc 1 1192 0
 2440 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2441 0004 202B     		cmp	r3, #32
 2442 0006 18D1     		bne	.L186
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2443              		.loc 1 1194 0
 2444 0008 C9B1     		cbz	r1, .L185
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2445              		.loc 1 1194 0 is_stmt 0 discriminator 1
 2446 000a C2B1     		cbz	r2, .L185
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2447              		.loc 1 1200 0 is_stmt 1
 2448 000c 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2449 0010 012B     		cmp	r3, #1
 2450 0012 12D0     		beq	.L186
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 2451              		.loc 1 1190 0 discriminator 2
 2452 0014 30B4     		push	{r4, r5}
 2453              	.LCFI27:
 2454              		.cfi_def_cfa_offset 8
 2455              		.cfi_offset 4, -8
 2456              		.cfi_offset 5, -4
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2457              		.loc 1 1206 0 discriminator 2
 2458 0016 0023     		movs	r3, #0
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2459              		.loc 1 1213 0 discriminator 2
 2460 0018 0568     		ldr	r5, [r0]
ARM GAS  /tmp/cc4hqLkf.s 			page 104


1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2461              		.loc 1 1204 0 discriminator 2
 2462 001a C284     		strh	r2, [r0, #38]	@ movhi
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2463              		.loc 1 1207 0 discriminator 2
 2464 001c 2124     		movs	r4, #33
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2465              		.loc 1 1206 0 discriminator 2
 2466 001e C363     		str	r3, [r0, #60]
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2467              		.loc 1 1207 0 discriminator 2
 2468 0020 80F83940 		strb	r4, [r0, #57]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2469              		.loc 1 1213 0 discriminator 2
 2470 0024 EC68     		ldr	r4, [r5, #12]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 2471              		.loc 1 1202 0 discriminator 2
 2472 0026 0162     		str	r1, [r0, #32]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2473              		.loc 1 1213 0 discriminator 2
 2474 0028 44F08004 		orr	r4, r4, #128
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 2475              		.loc 1 1203 0 discriminator 2
 2476 002c 8284     		strh	r2, [r0, #36]	@ movhi
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2477              		.loc 1 1210 0 discriminator 2
 2478 002e 80F83830 		strb	r3, [r0, #56]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2479              		.loc 1 1215 0 discriminator 2
 2480 0032 1846     		mov	r0, r3
 2481              	.LVL185:
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2482              		.loc 1 1213 0 discriminator 2
 2483 0034 EC60     		str	r4, [r5, #12]
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2484              		.loc 1 1221 0 discriminator 2
 2485 0036 30BC     		pop	{r4, r5}
 2486              	.LCFI28:
 2487              		.cfi_restore 5
 2488              		.cfi_restore 4
 2489              		.cfi_def_cfa_offset 0
 2490 0038 7047     		bx	lr
 2491              	.LVL186:
 2492              	.L186:
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2493              		.loc 1 1219 0
 2494 003a 0220     		movs	r0, #2
 2495              	.LVL187:
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2496              		.loc 1 1221 0
 2497 003c 7047     		bx	lr
 2498              	.LVL188:
 2499              	.L185:
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2500              		.loc 1 1196 0
 2501 003e 0120     		movs	r0, #1
 2502              	.LVL189:
ARM GAS  /tmp/cc4hqLkf.s 			page 105


 2503 0040 7047     		bx	lr
 2504              		.cfi_endproc
 2505              	.LFE139:
 2507 0042 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 2508              		.align	1
 2509              		.p2align 2,,3
 2510              		.global	HAL_UART_Receive_IT
 2511              		.syntax unified
 2512              		.thumb
 2513              		.thumb_func
 2514              		.fpu fpv4-sp-d16
 2516              	HAL_UART_Receive_IT:
 2517              	.LFB140:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 2518              		.loc 1 1232 0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
 2522              		@ link register save eliminated.
 2523              	.LVL190:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2524              		.loc 1 1234 0
 2525 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2526 0004 202B     		cmp	r3, #32
 2527 0006 20D1     		bne	.L196
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2528              		.loc 1 1236 0
 2529 0008 09B3     		cbz	r1, .L195
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2530              		.loc 1 1236 0 is_stmt 0 discriminator 1
 2531 000a 02B3     		cbz	r2, .L195
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2532              		.loc 1 1242 0 is_stmt 1
 2533 000c 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2534 0010 012B     		cmp	r3, #1
 2535 0012 1AD0     		beq	.L196
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 2536              		.loc 1 1232 0 discriminator 2
 2537 0014 30B4     		push	{r4, r5}
 2538              	.LCFI29:
 2539              		.cfi_def_cfa_offset 8
 2540              		.cfi_offset 4, -8
 2541              		.cfi_offset 5, -4
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2542              		.loc 1 1248 0 discriminator 2
 2543 0016 0023     		movs	r3, #0
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2544              		.loc 1 1255 0 discriminator 2
 2545 0018 0468     		ldr	r4, [r0]
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2546              		.loc 1 1246 0 discriminator 2
 2547 001a C285     		strh	r2, [r0, #46]	@ movhi
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2548              		.loc 1 1249 0 discriminator 2
 2549 001c 2225     		movs	r5, #34
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2550              		.loc 1 1248 0 discriminator 2
ARM GAS  /tmp/cc4hqLkf.s 			page 106


 2551 001e C363     		str	r3, [r0, #60]
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2552              		.loc 1 1249 0 discriminator 2
 2553 0020 80F83A50 		strb	r5, [r0, #58]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2554              		.loc 1 1255 0 discriminator 2
 2555 0024 E568     		ldr	r5, [r4, #12]
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2556              		.loc 1 1245 0 discriminator 2
 2557 0026 8285     		strh	r2, [r0, #44]	@ movhi
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2558              		.loc 1 1255 0 discriminator 2
 2559 0028 45F48075 		orr	r5, r5, #256
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2560              		.loc 1 1244 0 discriminator 2
 2561 002c 8162     		str	r1, [r0, #40]
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2562              		.loc 1 1252 0 discriminator 2
 2563 002e 80F83830 		strb	r3, [r0, #56]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2564              		.loc 1 1255 0 discriminator 2
 2565 0032 E560     		str	r5, [r4, #12]
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2566              		.loc 1 1258 0 discriminator 2
 2567 0034 6269     		ldr	r2, [r4, #20]
 2568              	.LVL191:
 2569 0036 42F00102 		orr	r2, r2, #1
 2570 003a 6261     		str	r2, [r4, #20]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2571              		.loc 1 1261 0 discriminator 2
 2572 003c E268     		ldr	r2, [r4, #12]
 2573 003e 42F02002 		orr	r2, r2, #32
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2574              		.loc 1 1263 0 discriminator 2
 2575 0042 1846     		mov	r0, r3
 2576              	.LVL192:
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2577              		.loc 1 1261 0 discriminator 2
 2578 0044 E260     		str	r2, [r4, #12]
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2579              		.loc 1 1269 0 discriminator 2
 2580 0046 30BC     		pop	{r4, r5}
 2581              	.LCFI30:
 2582              		.cfi_restore 5
 2583              		.cfi_restore 4
 2584              		.cfi_def_cfa_offset 0
 2585 0048 7047     		bx	lr
 2586              	.LVL193:
 2587              	.L196:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2588              		.loc 1 1267 0
 2589 004a 0220     		movs	r0, #2
 2590              	.LVL194:
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2591              		.loc 1 1269 0
 2592 004c 7047     		bx	lr
 2593              	.LVL195:
ARM GAS  /tmp/cc4hqLkf.s 			page 107


 2594              	.L195:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2595              		.loc 1 1238 0
 2596 004e 0120     		movs	r0, #1
 2597              	.LVL196:
 2598 0050 7047     		bx	lr
 2599              		.cfi_endproc
 2600              	.LFE140:
 2602 0052 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 2603              		.align	1
 2604              		.p2align 2,,3
 2605              		.global	HAL_UART_Transmit_DMA
 2606              		.syntax unified
 2607              		.thumb
 2608              		.thumb_func
 2609              		.fpu fpv4-sp-d16
 2611              	HAL_UART_Transmit_DMA:
 2612              	.LFB141:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2613              		.loc 1 1280 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 0
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              	.LVL197:
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2618              		.loc 1 1284 0
 2619 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2620 0004 202B     		cmp	r3, #32
 2621 0006 2DD1     		bne	.L203
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2622              		.loc 1 1280 0
 2623 0008 70B5     		push	{r4, r5, r6, lr}
 2624              	.LCFI31:
 2625              		.cfi_def_cfa_offset 16
 2626              		.cfi_offset 4, -16
 2627              		.cfi_offset 5, -12
 2628              		.cfi_offset 6, -8
 2629              		.cfi_offset 14, -4
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2630              		.loc 1 1286 0
 2631 000a 49B3     		cbz	r1, .L205
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2632              		.loc 1 1286 0 is_stmt 0 discriminator 1
 2633 000c 42B3     		cbz	r2, .L205
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2634              		.loc 1 1292 0 is_stmt 1
 2635 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2636 0012 012B     		cmp	r3, #1
 2637 0014 28D0     		beq	.L206
 2638 0016 0446     		mov	r4, r0
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2639              		.loc 1 1292 0 is_stmt 0 discriminator 2
 2640 0018 0126     		movs	r6, #1
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2641              		.loc 1 1302 0 is_stmt 1 discriminator 2
 2642 001a 006B     		ldr	r0, [r0, #48]
 2643              	.LVL198:
ARM GAS  /tmp/cc4hqLkf.s 			page 108


1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2644              		.loc 1 1292 0 discriminator 2
 2645 001c 84F83860 		strb	r6, [r4, #56]
 2646 0020 1346     		mov	r3, r2
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2647              		.loc 1 1298 0 discriminator 2
 2648 0022 0025     		movs	r5, #0
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2649              		.loc 1 1299 0 discriminator 2
 2650 0024 2126     		movs	r6, #33
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2651              		.loc 1 1296 0 discriminator 2
 2652 0026 E384     		strh	r3, [r4, #38]	@ movhi
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2653              		.loc 1 1298 0 discriminator 2
 2654 0028 E563     		str	r5, [r4, #60]
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2655              		.loc 1 1299 0 discriminator 2
 2656 002a 84F83960 		strb	r6, [r4, #57]
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2657              		.loc 1 1302 0 discriminator 2
 2658 002e 0F4E     		ldr	r6, .L211
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2659              		.loc 1 1315 0 discriminator 2
 2660 0030 2268     		ldr	r2, [r4]
 2661              	.LVL199:
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 2662              		.loc 1 1295 0 discriminator 2
 2663 0032 A384     		strh	r3, [r4, #36]	@ movhi
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 2664              		.loc 1 1294 0 discriminator 2
 2665 0034 2162     		str	r1, [r4, #32]
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2666              		.loc 1 1302 0 discriminator 2
 2667 0036 C663     		str	r6, [r0, #60]
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2668              		.loc 1 1305 0 discriminator 2
 2669 0038 0D4E     		ldr	r6, .L211+4
 2670 003a 0664     		str	r6, [r0, #64]
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2671              		.loc 1 1308 0 discriminator 2
 2672 003c 0D4E     		ldr	r6, .L211+8
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2673              		.loc 1 1311 0 discriminator 2
 2674 003e 0565     		str	r5, [r0, #80]
 2675              	.LVL200:
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2676              		.loc 1 1308 0 discriminator 2
 2677 0040 C664     		str	r6, [r0, #76]
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2678              		.loc 1 1315 0 discriminator 2
 2679 0042 0432     		adds	r2, r2, #4
 2680 0044 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2681              	.LVL201:
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2682              		.loc 1 1318 0 discriminator 2
 2683 0048 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc4hqLkf.s 			page 109


 2684 004a 6FF04002 		mvn	r2, #64
 2685 004e 1A60     		str	r2, [r3]
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2686              		.loc 1 1325 0 discriminator 2
 2687 0050 5A69     		ldr	r2, [r3, #20]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2688              		.loc 1 1321 0 discriminator 2
 2689 0052 84F83850 		strb	r5, [r4, #56]
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2690              		.loc 1 1325 0 discriminator 2
 2691 0056 42F08002 		orr	r2, r2, #128
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2692              		.loc 1 1327 0 discriminator 2
 2693 005a 2846     		mov	r0, r5
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2694              		.loc 1 1325 0 discriminator 2
 2695 005c 5A61     		str	r2, [r3, #20]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2696              		.loc 1 1333 0 discriminator 2
 2697 005e 70BD     		pop	{r4, r5, r6, pc}
 2698              	.LVL202:
 2699              	.L205:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2700              		.loc 1 1288 0
 2701 0060 0120     		movs	r0, #1
 2702              	.LVL203:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2703              		.loc 1 1333 0
 2704 0062 70BD     		pop	{r4, r5, r6, pc}
 2705              	.LVL204:
 2706              	.L203:
 2707              	.LCFI32:
 2708              		.cfi_def_cfa_offset 0
 2709              		.cfi_restore 4
 2710              		.cfi_restore 5
 2711              		.cfi_restore 6
 2712              		.cfi_restore 14
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2713              		.loc 1 1331 0
 2714 0064 0220     		movs	r0, #2
 2715              	.LVL205:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2716              		.loc 1 1333 0
 2717 0066 7047     		bx	lr
 2718              	.LVL206:
 2719              	.L206:
 2720              	.LCFI33:
 2721              		.cfi_def_cfa_offset 16
 2722              		.cfi_offset 4, -16
 2723              		.cfi_offset 5, -12
 2724              		.cfi_offset 6, -8
 2725              		.cfi_offset 14, -4
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2726              		.loc 1 1331 0
 2727 0068 0220     		movs	r0, #2
 2728              	.LVL207:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 110


 2729              		.loc 1 1333 0
 2730 006a 70BD     		pop	{r4, r5, r6, pc}
 2731              	.L212:
 2732              		.align	2
 2733              	.L211:
 2734 006c 00000000 		.word	UART_DMATransmitCplt
 2735 0070 00000000 		.word	UART_DMATxHalfCplt
 2736 0074 00000000 		.word	UART_DMAError
 2737              		.cfi_endproc
 2738              	.LFE141:
 2740              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2741              		.align	1
 2742              		.p2align 2,,3
 2743              		.global	HAL_UART_Receive_DMA
 2744              		.syntax unified
 2745              		.thumb
 2746              		.thumb_func
 2747              		.fpu fpv4-sp-d16
 2749              	HAL_UART_Receive_DMA:
 2750              	.LFB142:
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2751              		.loc 1 1345 0
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 8
 2754              		@ frame_needed = 0, uses_anonymous_args = 0
 2755              	.LVL208:
 2756 0000 70B5     		push	{r4, r5, r6, lr}
 2757              	.LCFI34:
 2758              		.cfi_def_cfa_offset 16
 2759              		.cfi_offset 4, -16
 2760              		.cfi_offset 5, -12
 2761              		.cfi_offset 6, -8
 2762              		.cfi_offset 14, -4
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2763              		.loc 1 1349 0
 2764 0002 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 2765 0006 202C     		cmp	r4, #32
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2766              		.loc 1 1345 0
 2767 0008 82B0     		sub	sp, sp, #8
 2768              	.LCFI35:
 2769              		.cfi_def_cfa_offset 24
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2770              		.loc 1 1349 0
 2771 000a 38D1     		bne	.L218
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2772              		.loc 1 1351 0
 2773 000c 0029     		cmp	r1, #0
 2774 000e 39D0     		beq	.L217
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2775              		.loc 1 1351 0 is_stmt 0 discriminator 1
 2776 0010 002A     		cmp	r2, #0
 2777 0012 37D0     		beq	.L217
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2778              		.loc 1 1357 0 is_stmt 1
 2779 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2780 0018 012B     		cmp	r3, #1
ARM GAS  /tmp/cc4hqLkf.s 			page 111


 2781 001a 30D0     		beq	.L218
 2782 001c 0446     		mov	r4, r0
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2783              		.loc 1 1357 0 is_stmt 0 discriminator 2
 2784 001e 0126     		movs	r6, #1
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2785              		.loc 1 1366 0 is_stmt 1 discriminator 2
 2786 0020 406B     		ldr	r0, [r0, #52]
 2787              	.LVL209:
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2788              		.loc 1 1357 0 discriminator 2
 2789 0022 84F83860 		strb	r6, [r4, #56]
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2790              		.loc 1 1362 0 discriminator 2
 2791 0026 0025     		movs	r5, #0
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2792              		.loc 1 1363 0 discriminator 2
 2793 0028 2226     		movs	r6, #34
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2794              		.loc 1 1362 0 discriminator 2
 2795 002a E563     		str	r5, [r4, #60]
 2796 002c 1346     		mov	r3, r2
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2797              		.loc 1 1363 0 discriminator 2
 2798 002e 84F83A60 		strb	r6, [r4, #58]
 2799 0032 0A46     		mov	r2, r1
 2800              	.LVL210:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2801              		.loc 1 1366 0 discriminator 2
 2802 0034 154E     		ldr	r6, .L220
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2803              		.loc 1 1379 0 discriminator 2
 2804 0036 2168     		ldr	r1, [r4]
 2805              	.LVL211:
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2806              		.loc 1 1359 0 discriminator 2
 2807 0038 A262     		str	r2, [r4, #40]
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2808              		.loc 1 1360 0 discriminator 2
 2809 003a A385     		strh	r3, [r4, #44]	@ movhi
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2810              		.loc 1 1366 0 discriminator 2
 2811 003c C663     		str	r6, [r0, #60]
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2812              		.loc 1 1369 0 discriminator 2
 2813 003e 144E     		ldr	r6, .L220+4
 2814 0040 0664     		str	r6, [r0, #64]
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2815              		.loc 1 1372 0 discriminator 2
 2816 0042 144E     		ldr	r6, .L220+8
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2817              		.loc 1 1375 0 discriminator 2
 2818 0044 0565     		str	r5, [r0, #80]
 2819              	.LVL212:
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2820              		.loc 1 1372 0 discriminator 2
 2821 0046 C664     		str	r6, [r0, #76]
ARM GAS  /tmp/cc4hqLkf.s 			page 112


1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2822              		.loc 1 1379 0 discriminator 2
 2823 0048 0431     		adds	r1, r1, #4
 2824 004a FFF7FEFF 		bl	HAL_DMA_Start_IT
 2825              	.LVL213:
 2826              	.LBB122:
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2827              		.loc 1 1382 0 discriminator 2
 2828 004e 2368     		ldr	r3, [r4]
 2829 0050 0195     		str	r5, [sp, #4]
 2830 0052 1A68     		ldr	r2, [r3]
 2831 0054 0192     		str	r2, [sp, #4]
 2832 0056 5A68     		ldr	r2, [r3, #4]
 2833 0058 0192     		str	r2, [sp, #4]
 2834 005a 019A     		ldr	r2, [sp, #4]
 2835              	.LBE122:
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2836              		.loc 1 1388 0 discriminator 2
 2837 005c DA68     		ldr	r2, [r3, #12]
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2838              		.loc 1 1385 0 discriminator 2
 2839 005e 84F83850 		strb	r5, [r4, #56]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2840              		.loc 1 1388 0 discriminator 2
 2841 0062 42F48072 		orr	r2, r2, #256
 2842 0066 DA60     		str	r2, [r3, #12]
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2843              		.loc 1 1391 0 discriminator 2
 2844 0068 5A69     		ldr	r2, [r3, #20]
 2845 006a 42F00102 		orr	r2, r2, #1
 2846 006e 5A61     		str	r2, [r3, #20]
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2847              		.loc 1 1395 0 discriminator 2
 2848 0070 5A69     		ldr	r2, [r3, #20]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2849              		.loc 1 1397 0 discriminator 2
 2850 0072 2846     		mov	r0, r5
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2851              		.loc 1 1395 0 discriminator 2
 2852 0074 42F04002 		orr	r2, r2, #64
 2853 0078 5A61     		str	r2, [r3, #20]
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2854              		.loc 1 1403 0 discriminator 2
 2855 007a 02B0     		add	sp, sp, #8
 2856              	.LCFI36:
 2857              		.cfi_remember_state
 2858              		.cfi_def_cfa_offset 16
 2859              		@ sp needed
 2860 007c 70BD     		pop	{r4, r5, r6, pc}
 2861              	.LVL214:
 2862              	.L218:
 2863              	.LCFI37:
 2864              		.cfi_restore_state
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2865              		.loc 1 1401 0
 2866 007e 0220     		movs	r0, #2
 2867              	.LVL215:
ARM GAS  /tmp/cc4hqLkf.s 			page 113


1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2868              		.loc 1 1403 0
 2869 0080 02B0     		add	sp, sp, #8
 2870              	.LCFI38:
 2871              		.cfi_remember_state
 2872              		.cfi_def_cfa_offset 16
 2873              		@ sp needed
 2874 0082 70BD     		pop	{r4, r5, r6, pc}
 2875              	.LVL216:
 2876              	.L217:
 2877              	.LCFI39:
 2878              		.cfi_restore_state
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2879              		.loc 1 1353 0
 2880 0084 0120     		movs	r0, #1
 2881              	.LVL217:
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2882              		.loc 1 1403 0
 2883 0086 02B0     		add	sp, sp, #8
 2884              	.LCFI40:
 2885              		.cfi_def_cfa_offset 16
 2886              		@ sp needed
 2887 0088 70BD     		pop	{r4, r5, r6, pc}
 2888              	.L221:
 2889 008a 00BF     		.align	2
 2890              	.L220:
 2891 008c 00000000 		.word	UART_DMAReceiveCplt
 2892 0090 00000000 		.word	UART_DMARxHalfCplt
 2893 0094 00000000 		.word	UART_DMAError
 2894              		.cfi_endproc
 2895              	.LFE142:
 2897              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2898              		.align	1
 2899              		.p2align 2,,3
 2900              		.global	HAL_UART_DMAPause
 2901              		.syntax unified
 2902              		.thumb
 2903              		.thumb_func
 2904              		.fpu fpv4-sp-d16
 2906              	HAL_UART_DMAPause:
 2907              	.LFB143:
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2908              		.loc 1 1412 0
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 0
 2911              		@ frame_needed = 0, uses_anonymous_args = 0
 2912              		@ link register save eliminated.
 2913              	.LVL218:
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2914              		.loc 1 1416 0
 2915 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2916 0004 012B     		cmp	r3, #1
 2917 0006 2FD0     		beq	.L226
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2918              		.loc 1 1418 0 discriminator 2
 2919 0008 0368     		ldr	r3, [r0]
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
ARM GAS  /tmp/cc4hqLkf.s 			page 114


 2920              		.loc 1 1412 0 discriminator 2
 2921 000a 10B4     		push	{r4}
 2922              	.LCFI41:
 2923              		.cfi_def_cfa_offset 4
 2924              		.cfi_offset 4, -4
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2925              		.loc 1 1418 0 discriminator 2
 2926 000c 5C69     		ldr	r4, [r3, #20]
 2927              	.LVL219:
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2928              		.loc 1 1419 0 discriminator 2
 2929 000e 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2930              		.loc 1 1416 0 discriminator 2
 2931 0012 0121     		movs	r1, #1
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2932              		.loc 1 1419 0 discriminator 2
 2933 0014 212A     		cmp	r2, #33
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2934              		.loc 1 1416 0 discriminator 2
 2935 0016 80F83810 		strb	r1, [r0, #56]
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2936              		.loc 1 1419 0 discriminator 2
 2937 001a 0BD0     		beq	.L237
 2938              	.L224:
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2939              		.loc 1 1425 0
 2940 001c 5969     		ldr	r1, [r3, #20]
 2941              	.LVL220:
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2942              		.loc 1 1426 0
 2943 001e 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 2944 0022 222A     		cmp	r2, #34
 2945 0024 11D0     		beq	.L238
 2946              	.LVL221:
 2947              	.L225:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2948              		.loc 1 1437 0
 2949 0026 0023     		movs	r3, #0
 2950 0028 80F83830 		strb	r3, [r0, #56]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2951              		.loc 1 1440 0
 2952 002c 5DF8044B 		ldr	r4, [sp], #4
 2953              	.LCFI42:
 2954              		.cfi_remember_state
 2955              		.cfi_restore 4
 2956              		.cfi_def_cfa_offset 0
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2957              		.loc 1 1439 0
 2958 0030 1846     		mov	r0, r3
 2959              	.LVL222:
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2960              		.loc 1 1440 0
 2961 0032 7047     		bx	lr
 2962              	.LVL223:
 2963              	.L237:
 2964              	.LCFI43:
ARM GAS  /tmp/cc4hqLkf.s 			page 115


 2965              		.cfi_restore_state
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2966              		.loc 1 1419 0 discriminator 1
 2967 0034 2106     		lsls	r1, r4, #24
 2968 0036 F1D5     		bpl	.L224
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2969              		.loc 1 1422 0
 2970 0038 5A69     		ldr	r2, [r3, #20]
 2971 003a 22F08002 		bic	r2, r2, #128
 2972 003e 5A61     		str	r2, [r3, #20]
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2973              		.loc 1 1425 0
 2974 0040 5969     		ldr	r1, [r3, #20]
 2975              	.LVL224:
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2976              		.loc 1 1426 0
 2977 0042 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 2978 0046 222A     		cmp	r2, #34
 2979 0048 EDD1     		bne	.L225
 2980              	.LVL225:
 2981              	.L238:
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2982              		.loc 1 1426 0 is_stmt 0 discriminator 1
 2983 004a 4A06     		lsls	r2, r1, #25
 2984 004c EBD5     		bpl	.L225
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2985              		.loc 1 1429 0 is_stmt 1
 2986 004e DA68     		ldr	r2, [r3, #12]
 2987 0050 22F48072 		bic	r2, r2, #256
 2988 0054 DA60     		str	r2, [r3, #12]
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2989              		.loc 1 1430 0
 2990 0056 5A69     		ldr	r2, [r3, #20]
 2991 0058 22F00102 		bic	r2, r2, #1
 2992 005c 5A61     		str	r2, [r3, #20]
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2993              		.loc 1 1433 0
 2994 005e 5A69     		ldr	r2, [r3, #20]
 2995 0060 22F04002 		bic	r2, r2, #64
 2996 0064 5A61     		str	r2, [r3, #20]
 2997 0066 DEE7     		b	.L225
 2998              	.LVL226:
 2999              	.L226:
 3000              	.LCFI44:
 3001              		.cfi_def_cfa_offset 0
 3002              		.cfi_restore 4
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3003              		.loc 1 1416 0
 3004 0068 0220     		movs	r0, #2
 3005              	.LVL227:
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3006              		.loc 1 1440 0
 3007 006a 7047     		bx	lr
 3008              		.cfi_endproc
 3009              	.LFE143:
 3011              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 3012              		.align	1
ARM GAS  /tmp/cc4hqLkf.s 			page 116


 3013              		.p2align 2,,3
 3014              		.global	HAL_UART_DMAResume
 3015              		.syntax unified
 3016              		.thumb
 3017              		.thumb_func
 3018              		.fpu fpv4-sp-d16
 3020              	HAL_UART_DMAResume:
 3021              	.LFB144:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 3022              		.loc 1 1449 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 8
 3025              		@ frame_needed = 0, uses_anonymous_args = 0
 3026              		@ link register save eliminated.
 3027              	.LVL228:
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3028              		.loc 1 1451 0
 3029 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3030 0004 012B     		cmp	r3, #1
 3031 0006 2FD0     		beq	.L243
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3032              		.loc 1 1453 0 discriminator 2
 3033 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3034              		.loc 1 1451 0 discriminator 2
 3035 000c 0122     		movs	r2, #1
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3036              		.loc 1 1453 0 discriminator 2
 3037 000e 212B     		cmp	r3, #33
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3038              		.loc 1 1451 0 discriminator 2
 3039 0010 80F83820 		strb	r2, [r0, #56]
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3040              		.loc 1 1453 0 discriminator 2
 3041 0014 04D1     		bne	.L241
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3042              		.loc 1 1456 0
 3043 0016 0268     		ldr	r2, [r0]
 3044 0018 5369     		ldr	r3, [r2, #20]
 3045 001a 43F08003 		orr	r3, r3, #128
 3046 001e 5361     		str	r3, [r2, #20]
 3047              	.L241:
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3048              		.loc 1 1459 0
 3049 0020 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 3050 0024 222B     		cmp	r3, #34
 3051 0026 04D0     		beq	.L249
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3052              		.loc 1 1473 0
 3053 0028 0023     		movs	r3, #0
 3054 002a 80F83830 		strb	r3, [r0, #56]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3055              		.loc 1 1475 0
 3056 002e 1846     		mov	r0, r3
 3057              	.LVL229:
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3058              		.loc 1 1476 0
ARM GAS  /tmp/cc4hqLkf.s 			page 117


 3059 0030 7047     		bx	lr
 3060              	.LVL230:
 3061              	.L249:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 3062              		.loc 1 1449 0
 3063 0032 82B0     		sub	sp, sp, #8
 3064              	.LCFI45:
 3065              		.cfi_def_cfa_offset 8
 3066              	.LBB123:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3067              		.loc 1 1462 0
 3068 0034 0368     		ldr	r3, [r0]
 3069 0036 0022     		movs	r2, #0
 3070 0038 0192     		str	r2, [sp, #4]
 3071 003a 1A68     		ldr	r2, [r3]
 3072 003c 0192     		str	r2, [sp, #4]
 3073 003e 5A68     		ldr	r2, [r3, #4]
 3074 0040 0192     		str	r2, [sp, #4]
 3075 0042 019A     		ldr	r2, [sp, #4]
 3076              	.LBE123:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3077              		.loc 1 1465 0
 3078 0044 DA68     		ldr	r2, [r3, #12]
 3079 0046 42F48072 		orr	r2, r2, #256
 3080 004a DA60     		str	r2, [r3, #12]
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3081              		.loc 1 1466 0
 3082 004c 5A69     		ldr	r2, [r3, #20]
 3083 004e 42F00102 		orr	r2, r2, #1
 3084 0052 5A61     		str	r2, [r3, #20]
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3085              		.loc 1 1469 0
 3086 0054 5A69     		ldr	r2, [r3, #20]
 3087 0056 42F04002 		orr	r2, r2, #64
 3088 005a 5A61     		str	r2, [r3, #20]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3089              		.loc 1 1473 0
 3090 005c 0023     		movs	r3, #0
 3091 005e 80F83830 		strb	r3, [r0, #56]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3092              		.loc 1 1475 0
 3093 0062 1846     		mov	r0, r3
 3094              	.LVL231:
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3095              		.loc 1 1476 0
 3096 0064 02B0     		add	sp, sp, #8
 3097              	.LCFI46:
 3098              		.cfi_def_cfa_offset 0
 3099              		@ sp needed
 3100 0066 7047     		bx	lr
 3101              	.LVL232:
 3102              	.L243:
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3103              		.loc 1 1451 0
 3104 0068 0220     		movs	r0, #2
 3105              	.LVL233:
 3106 006a 7047     		bx	lr
ARM GAS  /tmp/cc4hqLkf.s 			page 118


 3107              		.cfi_endproc
 3108              	.LFE144:
 3110              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 3111              		.align	1
 3112              		.p2align 2,,3
 3113              		.global	HAL_UART_DMAStop
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3117              		.fpu fpv4-sp-d16
 3119              	HAL_UART_DMAStop:
 3120              	.LFB145:
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3121              		.loc 1 1485 0
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 0
 3124              		@ frame_needed = 0, uses_anonymous_args = 0
 3125              	.LVL234:
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3126              		.loc 1 1494 0
 3127 0000 0368     		ldr	r3, [r0]
 3128 0002 5969     		ldr	r1, [r3, #20]
 3129              	.LVL235:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3130              		.loc 1 1495 0
 3131 0004 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 3132 0008 212A     		cmp	r2, #33
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3133              		.loc 1 1485 0
 3134 000a 10B5     		push	{r4, lr}
 3135              	.LCFI47:
 3136              		.cfi_def_cfa_offset 8
 3137              		.cfi_offset 4, -8
 3138              		.cfi_offset 14, -4
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3139              		.loc 1 1485 0
 3140 000c 0446     		mov	r4, r0
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3141              		.loc 1 1495 0
 3142 000e 1ED0     		beq	.L268
 3143              	.LVL236:
 3144              	.L251:
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3145              		.loc 1 1508 0
 3146 0010 5969     		ldr	r1, [r3, #20]
 3147              	.LVL237:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3148              		.loc 1 1509 0
 3149 0012 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 3150 0016 222A     		cmp	r2, #34
 3151 0018 01D0     		beq	.L269
 3152              	.L253:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3153              		.loc 1 1522 0
 3154 001a 0020     		movs	r0, #0
 3155 001c 10BD     		pop	{r4, pc}
 3156              	.LVL238:
ARM GAS  /tmp/cc4hqLkf.s 			page 119


 3157              	.L269:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3158              		.loc 1 1509 0 discriminator 1
 3159 001e 4A06     		lsls	r2, r1, #25
 3160 0020 FBD5     		bpl	.L253
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3161              		.loc 1 1511 0
 3162 0022 5A69     		ldr	r2, [r3, #20]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3163              		.loc 1 1514 0
 3164 0024 606B     		ldr	r0, [r4, #52]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3165              		.loc 1 1511 0
 3166 0026 22F04002 		bic	r2, r2, #64
 3167 002a 5A61     		str	r2, [r3, #20]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3168              		.loc 1 1514 0
 3169 002c 10B1     		cbz	r0, .L254
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3170              		.loc 1 1516 0
 3171 002e FFF7FEFF 		bl	HAL_DMA_Abort
 3172              	.LVL239:
 3173 0032 2368     		ldr	r3, [r4]
 3174              	.L254:
 3175              	.LVL240:
 3176              	.LBB124:
 3177              	.LBB125:
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3178              		.loc 1 2716 0
 3179 0034 DA68     		ldr	r2, [r3, #12]
 3180 0036 22F49072 		bic	r2, r2, #288
 3181 003a DA60     		str	r2, [r3, #12]
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3182              		.loc 1 2717 0
 3183 003c 5A69     		ldr	r2, [r3, #20]
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3184              		.loc 1 2720 0
 3185 003e 2021     		movs	r1, #32
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3186              		.loc 1 2717 0
 3187 0040 22F00102 		bic	r2, r2, #1
 3188 0044 5A61     		str	r2, [r3, #20]
 3189              	.LBE125:
 3190              	.LBE124:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3191              		.loc 1 1522 0
 3192 0046 0020     		movs	r0, #0
 3193              	.LBB127:
 3194              	.LBB126:
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3195              		.loc 1 2720 0
 3196 0048 84F83A10 		strb	r1, [r4, #58]
 3197              	.LBE126:
 3198              	.LBE127:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3199              		.loc 1 1522 0
 3200 004c 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc4hqLkf.s 			page 120


 3201              	.LVL241:
 3202              	.L268:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3203              		.loc 1 1495 0 discriminator 1
 3204 004e 0906     		lsls	r1, r1, #24
 3205              	.LVL242:
 3206 0050 DED5     		bpl	.L251
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3207              		.loc 1 1497 0
 3208 0052 5A69     		ldr	r2, [r3, #20]
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3209              		.loc 1 1500 0
 3210 0054 006B     		ldr	r0, [r0, #48]
 3211              	.LVL243:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3212              		.loc 1 1497 0
 3213 0056 22F08002 		bic	r2, r2, #128
 3214 005a 5A61     		str	r2, [r3, #20]
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3215              		.loc 1 1500 0
 3216 005c 10B1     		cbz	r0, .L252
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3217              		.loc 1 1502 0
 3218 005e FFF7FEFF 		bl	HAL_DMA_Abort
 3219              	.LVL244:
 3220 0062 2368     		ldr	r3, [r4]
 3221              	.L252:
 3222              	.LVL245:
 3223              	.LBB128:
 3224              	.LBB129:
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3225              		.loc 1 2702 0
 3226 0064 DA68     		ldr	r2, [r3, #12]
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3227              		.loc 1 2705 0
 3228 0066 2021     		movs	r1, #32
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3229              		.loc 1 2702 0
 3230 0068 22F0C002 		bic	r2, r2, #192
 3231 006c DA60     		str	r2, [r3, #12]
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3232              		.loc 1 2705 0
 3233 006e 84F83910 		strb	r1, [r4, #57]
 3234 0072 CDE7     		b	.L251
 3235              	.LBE129:
 3236              	.LBE128:
 3237              		.cfi_endproc
 3238              	.LFE145:
 3240              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3241              		.align	1
 3242              		.p2align 2,,3
 3243              		.global	HAL_UART_Abort
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3247              		.fpu fpv4-sp-d16
 3249              	HAL_UART_Abort:
ARM GAS  /tmp/cc4hqLkf.s 			page 121


 3250              	.LFB146:
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3251              		.loc 1 1537 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              	.LVL246:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3256              		.loc 1 1539 0
 3257 0000 0368     		ldr	r3, [r0]
 3258 0002 DA68     		ldr	r2, [r3, #12]
 3259 0004 22F4F072 		bic	r2, r2, #480
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3260              		.loc 1 1537 0
 3261 0008 10B5     		push	{r4, lr}
 3262              	.LCFI48:
 3263              		.cfi_def_cfa_offset 8
 3264              		.cfi_offset 4, -8
 3265              		.cfi_offset 14, -4
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3266              		.loc 1 1539 0
 3267 000a DA60     		str	r2, [r3, #12]
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3268              		.loc 1 1540 0
 3269 000c 5A69     		ldr	r2, [r3, #20]
 3270 000e 22F00102 		bic	r2, r2, #1
 3271 0012 5A61     		str	r2, [r3, #20]
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3272              		.loc 1 1543 0
 3273 0014 5A69     		ldr	r2, [r3, #20]
 3274 0016 1106     		lsls	r1, r2, #24
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3275              		.loc 1 1537 0
 3276 0018 0446     		mov	r4, r0
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3277              		.loc 1 1543 0
 3278 001a 0BD5     		bpl	.L271
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3279              		.loc 1 1545 0
 3280 001c 5A69     		ldr	r2, [r3, #20]
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3281              		.loc 1 1548 0
 3282 001e 006B     		ldr	r0, [r0, #48]
 3283              	.LVL247:
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3284              		.loc 1 1545 0
 3285 0020 22F08002 		bic	r2, r2, #128
 3286 0024 5A61     		str	r2, [r3, #20]
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3287              		.loc 1 1548 0
 3288 0026 28B1     		cbz	r0, .L271
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3289              		.loc 1 1552 0
 3290 0028 0023     		movs	r3, #0
 3291 002a 0365     		str	r3, [r0, #80]
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3292              		.loc 1 1554 0
ARM GAS  /tmp/cc4hqLkf.s 			page 122


 3293 002c FFF7FEFF 		bl	HAL_DMA_Abort
 3294              	.LVL248:
 3295 0030 C8B9     		cbnz	r0, .L272
 3296              	.L292:
 3297 0032 2368     		ldr	r3, [r4]
 3298              	.L271:
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3299              		.loc 1 1568 0
 3300 0034 5A69     		ldr	r2, [r3, #20]
 3301 0036 5206     		lsls	r2, r2, #25
 3302 0038 0AD5     		bpl	.L275
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3303              		.loc 1 1570 0
 3304 003a 5A69     		ldr	r2, [r3, #20]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3305              		.loc 1 1573 0
 3306 003c 606B     		ldr	r0, [r4, #52]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3307              		.loc 1 1570 0
 3308 003e 22F04002 		bic	r2, r2, #64
 3309 0042 5A61     		str	r2, [r3, #20]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3310              		.loc 1 1573 0
 3311 0044 20B1     		cbz	r0, .L275
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3312              		.loc 1 1577 0
 3313 0046 0023     		movs	r3, #0
 3314 0048 0365     		str	r3, [r0, #80]
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3315              		.loc 1 1579 0
 3316 004a FFF7FEFF 		bl	HAL_DMA_Abort
 3317              	.LVL249:
 3318 004e 98B9     		cbnz	r0, .L294
 3319              	.L275:
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3320              		.loc 1 1593 0
 3321 0050 0023     		movs	r3, #0
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3322              		.loc 1 1600 0
 3323 0052 2022     		movs	r2, #32
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3324              		.loc 1 1593 0
 3325 0054 E384     		strh	r3, [r4, #38]	@ movhi
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3326              		.loc 1 1603 0
 3327 0056 1846     		mov	r0, r3
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3328              		.loc 1 1594 0
 3329 0058 E385     		strh	r3, [r4, #46]	@ movhi
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3330              		.loc 1 1597 0
 3331 005a E363     		str	r3, [r4, #60]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3332              		.loc 1 1600 0
 3333 005c 84F83A20 		strb	r2, [r4, #58]
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3334              		.loc 1 1601 0
ARM GAS  /tmp/cc4hqLkf.s 			page 123


 3335 0060 84F83920 		strb	r2, [r4, #57]
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3336              		.loc 1 1604 0
 3337 0064 10BD     		pop	{r4, pc}
 3338              	.LVL250:
 3339              	.L272:
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3340              		.loc 1 1556 0
 3341 0066 206B     		ldr	r0, [r4, #48]
 3342 0068 FFF7FEFF 		bl	HAL_DMA_GetError
 3343              	.LVL251:
 3344 006c 2028     		cmp	r0, #32
 3345 006e E0D1     		bne	.L292
 3346              	.L293:
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3347              		.loc 1 1584 0
 3348 0070 1023     		movs	r3, #16
 3349 0072 E363     		str	r3, [r4, #60]
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3350              		.loc 1 1586 0
 3351 0074 0320     		movs	r0, #3
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3352              		.loc 1 1604 0
 3353 0076 10BD     		pop	{r4, pc}
 3354              	.LVL252:
 3355              	.L294:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3356              		.loc 1 1581 0
 3357 0078 606B     		ldr	r0, [r4, #52]
 3358 007a FFF7FEFF 		bl	HAL_DMA_GetError
 3359              	.LVL253:
 3360 007e 2028     		cmp	r0, #32
 3361 0080 E6D1     		bne	.L275
 3362 0082 F5E7     		b	.L293
 3363              		.cfi_endproc
 3364              	.LFE146:
 3366              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3367              		.align	1
 3368              		.p2align 2,,3
 3369              		.global	HAL_UART_AbortTransmit
 3370              		.syntax unified
 3371              		.thumb
 3372              		.thumb_func
 3373              		.fpu fpv4-sp-d16
 3375              	HAL_UART_AbortTransmit:
 3376              	.LFB147:
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3377              		.loc 1 1619 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              	.LVL254:
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3382              		.loc 1 1621 0
 3383 0000 0368     		ldr	r3, [r0]
 3384 0002 DA68     		ldr	r2, [r3, #12]
 3385 0004 22F0C002 		bic	r2, r2, #192
ARM GAS  /tmp/cc4hqLkf.s 			page 124


1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3386              		.loc 1 1619 0
 3387 0008 10B5     		push	{r4, lr}
 3388              	.LCFI49:
 3389              		.cfi_def_cfa_offset 8
 3390              		.cfi_offset 4, -8
 3391              		.cfi_offset 14, -4
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3392              		.loc 1 1621 0
 3393 000a DA60     		str	r2, [r3, #12]
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3394              		.loc 1 1624 0
 3395 000c 5A69     		ldr	r2, [r3, #20]
 3396 000e 1206     		lsls	r2, r2, #24
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3397              		.loc 1 1619 0
 3398 0010 0446     		mov	r4, r0
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3399              		.loc 1 1624 0
 3400 0012 0AD5     		bpl	.L296
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3401              		.loc 1 1626 0
 3402 0014 5A69     		ldr	r2, [r3, #20]
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3403              		.loc 1 1629 0
 3404 0016 006B     		ldr	r0, [r0, #48]
 3405              	.LVL255:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3406              		.loc 1 1626 0
 3407 0018 22F08002 		bic	r2, r2, #128
 3408 001c 5A61     		str	r2, [r3, #20]
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3409              		.loc 1 1629 0
 3410 001e 20B1     		cbz	r0, .L296
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3411              		.loc 1 1633 0
 3412 0020 0023     		movs	r3, #0
 3413 0022 0365     		str	r3, [r0, #80]
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3414              		.loc 1 1635 0
 3415 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 3416              	.LVL256:
 3417 0028 28B9     		cbnz	r0, .L308
 3418              	.L296:
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3419              		.loc 1 1649 0
 3420 002a 0020     		movs	r0, #0
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3421              		.loc 1 1652 0
 3422 002c 2023     		movs	r3, #32
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3423              		.loc 1 1649 0
 3424 002e E084     		strh	r0, [r4, #38]	@ movhi
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3425              		.loc 1 1652 0
 3426 0030 84F83930 		strb	r3, [r4, #57]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 125


 3427              		.loc 1 1655 0
 3428 0034 10BD     		pop	{r4, pc}
 3429              	.LVL257:
 3430              	.L308:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3431              		.loc 1 1637 0
 3432 0036 206B     		ldr	r0, [r4, #48]
 3433 0038 FFF7FEFF 		bl	HAL_DMA_GetError
 3434              	.LVL258:
 3435 003c 2028     		cmp	r0, #32
 3436 003e F4D1     		bne	.L296
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3437              		.loc 1 1640 0
 3438 0040 1023     		movs	r3, #16
 3439 0042 E363     		str	r3, [r4, #60]
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3440              		.loc 1 1642 0
 3441 0044 0320     		movs	r0, #3
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3442              		.loc 1 1655 0
 3443 0046 10BD     		pop	{r4, pc}
 3444              		.cfi_endproc
 3445              	.LFE147:
 3447              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3448              		.align	1
 3449              		.p2align 2,,3
 3450              		.global	HAL_UART_AbortReceive
 3451              		.syntax unified
 3452              		.thumb
 3453              		.thumb_func
 3454              		.fpu fpv4-sp-d16
 3456              	HAL_UART_AbortReceive:
 3457              	.LFB148:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3458              		.loc 1 1670 0
 3459              		.cfi_startproc
 3460              		@ args = 0, pretend = 0, frame = 0
 3461              		@ frame_needed = 0, uses_anonymous_args = 0
 3462              	.LVL259:
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3463              		.loc 1 1672 0
 3464 0000 0368     		ldr	r3, [r0]
 3465 0002 DA68     		ldr	r2, [r3, #12]
 3466 0004 22F49072 		bic	r2, r2, #288
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3467              		.loc 1 1670 0
 3468 0008 10B5     		push	{r4, lr}
 3469              	.LCFI50:
 3470              		.cfi_def_cfa_offset 8
 3471              		.cfi_offset 4, -8
 3472              		.cfi_offset 14, -4
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3473              		.loc 1 1672 0
 3474 000a DA60     		str	r2, [r3, #12]
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3475              		.loc 1 1673 0
 3476 000c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/cc4hqLkf.s 			page 126


 3477 000e 22F00102 		bic	r2, r2, #1
 3478 0012 5A61     		str	r2, [r3, #20]
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3479              		.loc 1 1676 0
 3480 0014 5A69     		ldr	r2, [r3, #20]
 3481 0016 5206     		lsls	r2, r2, #25
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3482              		.loc 1 1670 0
 3483 0018 0446     		mov	r4, r0
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3484              		.loc 1 1676 0
 3485 001a 0AD5     		bpl	.L310
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3486              		.loc 1 1678 0
 3487 001c 5A69     		ldr	r2, [r3, #20]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3488              		.loc 1 1681 0
 3489 001e 406B     		ldr	r0, [r0, #52]
 3490              	.LVL260:
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3491              		.loc 1 1678 0
 3492 0020 22F04002 		bic	r2, r2, #64
 3493 0024 5A61     		str	r2, [r3, #20]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3494              		.loc 1 1681 0
 3495 0026 20B1     		cbz	r0, .L310
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3496              		.loc 1 1685 0
 3497 0028 0023     		movs	r3, #0
 3498 002a 0365     		str	r3, [r0, #80]
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3499              		.loc 1 1687 0
 3500 002c FFF7FEFF 		bl	HAL_DMA_Abort
 3501              	.LVL261:
 3502 0030 28B9     		cbnz	r0, .L322
 3503              	.L310:
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3504              		.loc 1 1701 0
 3505 0032 0020     		movs	r0, #0
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3506              		.loc 1 1704 0
 3507 0034 2023     		movs	r3, #32
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3508              		.loc 1 1701 0
 3509 0036 E085     		strh	r0, [r4, #46]	@ movhi
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3510              		.loc 1 1704 0
 3511 0038 84F83A30 		strb	r3, [r4, #58]
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3512              		.loc 1 1707 0
 3513 003c 10BD     		pop	{r4, pc}
 3514              	.LVL262:
 3515              	.L322:
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3516              		.loc 1 1689 0
 3517 003e 606B     		ldr	r0, [r4, #52]
 3518 0040 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  /tmp/cc4hqLkf.s 			page 127


 3519              	.LVL263:
 3520 0044 2028     		cmp	r0, #32
 3521 0046 F4D1     		bne	.L310
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3522              		.loc 1 1692 0
 3523 0048 1023     		movs	r3, #16
 3524 004a E363     		str	r3, [r4, #60]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3525              		.loc 1 1694 0
 3526 004c 0320     		movs	r0, #3
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3527              		.loc 1 1707 0
 3528 004e 10BD     		pop	{r4, pc}
 3529              		.cfi_endproc
 3530              	.LFE148:
 3532              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3533              		.align	1
 3534              		.p2align 2,,3
 3535              		.weak	HAL_UART_TxCpltCallback
 3536              		.syntax unified
 3537              		.thumb
 3538              		.thumb_func
 3539              		.fpu fpv4-sp-d16
 3541              	HAL_UART_TxCpltCallback:
 3542              	.LFB190:
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 0
 3545              		@ frame_needed = 0, uses_anonymous_args = 0
 3546              		@ link register save eliminated.
 3547 0000 7047     		bx	lr
 3548              		.cfi_endproc
 3549              	.LFE190:
 3551 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3552              		.align	1
 3553              		.p2align 2,,3
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu fpv4-sp-d16
 3559              	UART_DMATransmitCplt:
 3560              	.LFB168:
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3561              		.loc 1 2520 0
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 0
 3564              		@ frame_needed = 0, uses_anonymous_args = 0
 3565              	.LVL264:
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3566              		.loc 1 2520 0
 3567 0000 08B5     		push	{r3, lr}
 3568              	.LCFI51:
 3569              		.cfi_def_cfa_offset 8
 3570              		.cfi_offset 3, -8
 3571              		.cfi_offset 14, -4
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3572              		.loc 1 2523 0
 3573 0002 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc4hqLkf.s 			page 128


2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 3574              		.loc 1 2521 0
 3575 0004 806B     		ldr	r0, [r0, #56]
 3576              	.LVL265:
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3577              		.loc 1 2523 0
 3578 0006 1B68     		ldr	r3, [r3]
 3579 0008 13F48073 		ands	r3, r3, #256
 3580 000c 0AD1     		bne	.L325
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3581              		.loc 1 2529 0
 3582 000e 0268     		ldr	r2, [r0]
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3583              		.loc 1 2525 0
 3584 0010 C384     		strh	r3, [r0, #38]	@ movhi
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3585              		.loc 1 2529 0
 3586 0012 5369     		ldr	r3, [r2, #20]
 3587 0014 23F08003 		bic	r3, r3, #128
 3588 0018 5361     		str	r3, [r2, #20]
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3589              		.loc 1 2532 0
 3590 001a D368     		ldr	r3, [r2, #12]
 3591 001c 43F04003 		orr	r3, r3, #64
 3592 0020 D360     		str	r3, [r2, #12]
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3593              		.loc 1 2546 0
 3594 0022 08BD     		pop	{r3, pc}
 3595              	.L325:
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3596              		.loc 1 2543 0
 3597 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3598              	.LVL266:
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3599              		.loc 1 2546 0
 3600 0028 08BD     		pop	{r3, pc}
 3601              		.cfi_endproc
 3602              	.LFE168:
 3604 002a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3605              		.align	1
 3606              		.p2align 2,,3
 3607              		.weak	HAL_UART_TxHalfCpltCallback
 3608              		.syntax unified
 3609              		.thumb
 3610              		.thumb_func
 3611              		.fpu fpv4-sp-d16
 3613              	HAL_UART_TxHalfCpltCallback:
 3614              	.LFB192:
 3615              		.cfi_startproc
 3616              		@ args = 0, pretend = 0, frame = 0
 3617              		@ frame_needed = 0, uses_anonymous_args = 0
 3618              		@ link register save eliminated.
 3619 0000 7047     		bx	lr
 3620              		.cfi_endproc
 3621              	.LFE192:
 3623 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3624              		.align	1
ARM GAS  /tmp/cc4hqLkf.s 			page 129


 3625              		.p2align 2,,3
 3626              		.syntax unified
 3627              		.thumb
 3628              		.thumb_func
 3629              		.fpu fpv4-sp-d16
 3631              	UART_DMATxHalfCplt:
 3632              	.LFB169:
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3633              		.loc 1 2555 0
 3634              		.cfi_startproc
 3635              		@ args = 0, pretend = 0, frame = 0
 3636              		@ frame_needed = 0, uses_anonymous_args = 0
 3637              	.LVL267:
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3638              		.loc 1 2555 0
 3639 0000 08B5     		push	{r3, lr}
 3640              	.LCFI52:
 3641              		.cfi_def_cfa_offset 8
 3642              		.cfi_offset 3, -8
 3643              		.cfi_offset 14, -4
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3644              		.loc 1 2563 0
 3645 0002 806B     		ldr	r0, [r0, #56]
 3646              	.LVL268:
 3647 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 3648              	.LVL269:
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3649              		.loc 1 2565 0
 3650 0008 08BD     		pop	{r3, pc}
 3651              		.cfi_endproc
 3652              	.LFE169:
 3654 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3655              		.align	1
 3656              		.p2align 2,,3
 3657              		.weak	HAL_UART_RxCpltCallback
 3658              		.syntax unified
 3659              		.thumb
 3660              		.thumb_func
 3661              		.fpu fpv4-sp-d16
 3663              	HAL_UART_RxCpltCallback:
 3664              	.LFB194:
 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 0
 3667              		@ frame_needed = 0, uses_anonymous_args = 0
 3668              		@ link register save eliminated.
 3669 0000 7047     		bx	lr
 3670              		.cfi_endproc
 3671              	.LFE194:
 3673 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 3674              		.align	1
 3675              		.p2align 2,,3
 3676              		.syntax unified
 3677              		.thumb
 3678              		.thumb_func
 3679              		.fpu fpv4-sp-d16
 3681              	UART_DMAReceiveCplt:
 3682              	.LFB170:
ARM GAS  /tmp/cc4hqLkf.s 			page 130


2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3683              		.loc 1 2574 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 0
 3686              		@ frame_needed = 0, uses_anonymous_args = 0
 3687              	.LVL270:
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3688              		.loc 1 2574 0
 3689 0000 08B5     		push	{r3, lr}
 3690              	.LCFI53:
 3691              		.cfi_def_cfa_offset 8
 3692              		.cfi_offset 3, -8
 3693              		.cfi_offset 14, -4
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3694              		.loc 1 2577 0
 3695 0002 0368     		ldr	r3, [r0]
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 3696              		.loc 1 2575 0
 3697 0004 806B     		ldr	r0, [r0, #56]
 3698              	.LVL271:
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3699              		.loc 1 2577 0
 3700 0006 1B68     		ldr	r3, [r3]
 3701 0008 13F48073 		ands	r3, r3, #256
 3702 000c 10D1     		bne	.L333
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3703              		.loc 1 2582 0
 3704 000e 0268     		ldr	r2, [r0]
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3705              		.loc 1 2579 0
 3706 0010 C385     		strh	r3, [r0, #46]	@ movhi
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3707              		.loc 1 2582 0
 3708 0012 D368     		ldr	r3, [r2, #12]
 3709 0014 23F48073 		bic	r3, r3, #256
 3710 0018 D360     		str	r3, [r2, #12]
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3711              		.loc 1 2583 0
 3712 001a 5369     		ldr	r3, [r2, #20]
 3713 001c 23F00103 		bic	r3, r3, #1
 3714 0020 5361     		str	r3, [r2, #20]
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3715              		.loc 1 2587 0
 3716 0022 5369     		ldr	r3, [r2, #20]
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3717              		.loc 1 2590 0
 3718 0024 2021     		movs	r1, #32
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3719              		.loc 1 2587 0
 3720 0026 23F04003 		bic	r3, r3, #64
 3721 002a 5361     		str	r3, [r2, #20]
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3722              		.loc 1 2590 0
 3723 002c 80F83A10 		strb	r1, [r0, #58]
 3724              	.L333:
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3725              		.loc 1 2597 0
ARM GAS  /tmp/cc4hqLkf.s 			page 131


 3726 0030 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3727              	.LVL272:
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3728              		.loc 1 2599 0
 3729 0034 08BD     		pop	{r3, pc}
 3730              		.cfi_endproc
 3731              	.LFE170:
 3733 0036 00BF     		.section	.text.UART_Receive_IT.part.1,"ax",%progbits
 3734              		.align	1
 3735              		.p2align 2,,3
 3736              		.syntax unified
 3737              		.thumb
 3738              		.thumb_func
 3739              		.fpu fpv4-sp-d16
 3741              	UART_Receive_IT.part.1:
 3742              	.LFB186:
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3743              		.loc 1 2969 0
 3744              		.cfi_startproc
 3745              		@ args = 0, pretend = 0, frame = 0
 3746              		@ frame_needed = 0, uses_anonymous_args = 0
 3747              	.LVL273:
 3748 0000 10B5     		push	{r4, lr}
 3749              	.LCFI54:
 3750              		.cfi_def_cfa_offset 8
 3751              		.cfi_offset 4, -8
 3752              		.cfi_offset 14, -4
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3753              		.loc 1 2976 0
 3754 0002 8468     		ldr	r4, [r0, #8]
 3755 0004 0169     		ldr	r1, [r0, #16]
 3756 0006 836A     		ldr	r3, [r0, #40]
 3757 0008 0268     		ldr	r2, [r0]
 3758 000a B4F5805F 		cmp	r4, #4096
 3759 000e 20D0     		beq	.L343
 3760 0010 5C1C     		adds	r4, r3, #1
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3761              		.loc 1 2994 0
 3762 0012 5268     		ldr	r2, [r2, #4]
 3763 0014 8462     		str	r4, [r0, #40]
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3764              		.loc 1 2992 0
 3765 0016 C9B9     		cbnz	r1, .L339
 3766              	.L342:
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3767              		.loc 1 2998 0
 3768 0018 1A70     		strb	r2, [r3]
 3769              	.L338:
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3770              		.loc 1 3002 0
 3771 001a C38D     		ldrh	r3, [r0, #46]
 3772 001c 013B     		subs	r3, r3, #1
 3773 001e 9BB2     		uxth	r3, r3
 3774 0020 C385     		strh	r3, [r0, #46]	@ movhi
 3775 0022 8BB9     		cbnz	r3, .L340
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3776              		.loc 1 3005 0
ARM GAS  /tmp/cc4hqLkf.s 			page 132


 3777 0024 0268     		ldr	r2, [r0]
 3778 0026 D168     		ldr	r1, [r2, #12]
 3779 0028 21F02001 		bic	r1, r1, #32
 3780 002c D160     		str	r1, [r2, #12]
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3781              		.loc 1 3008 0
 3782 002e D168     		ldr	r1, [r2, #12]
 3783 0030 21F48071 		bic	r1, r1, #256
 3784 0034 D160     		str	r1, [r2, #12]
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3785              		.loc 1 3011 0
 3786 0036 5169     		ldr	r1, [r2, #20]
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3787              		.loc 1 3014 0
 3788 0038 2024     		movs	r4, #32
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3789              		.loc 1 3011 0
 3790 003a 21F00101 		bic	r1, r1, #1
 3791 003e 5161     		str	r1, [r2, #20]
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3792              		.loc 1 3014 0
 3793 0040 80F83A40 		strb	r4, [r0, #58]
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3794              		.loc 1 3021 0
 3795 0044 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3796              	.LVL274:
 3797              	.L340:
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3798              		.loc 1 3032 0
 3799 0048 0020     		movs	r0, #0
 3800 004a 10BD     		pop	{r4, pc}
 3801              	.LVL275:
 3802              	.L339:
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3803              		.loc 1 2998 0
 3804 004c 02F07F02 		and	r2, r2, #127
 3805 0050 E2E7     		b	.L342
 3806              	.L343:
 3807              	.LVL276:
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3808              		.loc 1 2981 0
 3809 0052 5268     		ldr	r2, [r2, #4]
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3810              		.loc 1 2979 0
 3811 0054 29B9     		cbnz	r1, .L337
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3812              		.loc 1 2981 0
 3813 0056 C2F30802 		ubfx	r2, r2, #0, #9
 3814 005a 23F8022B 		strh	r2, [r3], #2	@ movhi
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3815              		.loc 1 2982 0
 3816 005e 8362     		str	r3, [r0, #40]
 3817              	.LVL277:
 3818 0060 DBE7     		b	.L338
 3819              	.LVL278:
 3820              	.L337:
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
ARM GAS  /tmp/cc4hqLkf.s 			page 133


 3821              		.loc 1 2986 0
 3822 0062 D2B2     		uxtb	r2, r2
 3823 0064 23F8012B 		strh	r2, [r3], #1	@ movhi
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3824              		.loc 1 2987 0
 3825 0068 8362     		str	r3, [r0, #40]
 3826              	.LVL279:
 3827 006a D6E7     		b	.L338
 3828              		.cfi_endproc
 3829              	.LFE186:
 3831              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3832              		.align	1
 3833              		.p2align 2,,3
 3834              		.weak	HAL_UART_RxHalfCpltCallback
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3838              		.fpu fpv4-sp-d16
 3840              	HAL_UART_RxHalfCpltCallback:
 3841              	.LFB196:
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 0
 3844              		@ frame_needed = 0, uses_anonymous_args = 0
 3845              		@ link register save eliminated.
 3846 0000 7047     		bx	lr
 3847              		.cfi_endproc
 3848              	.LFE196:
 3850 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3851              		.align	1
 3852              		.p2align 2,,3
 3853              		.syntax unified
 3854              		.thumb
 3855              		.thumb_func
 3856              		.fpu fpv4-sp-d16
 3858              	UART_DMARxHalfCplt:
 3859              	.LFB171:
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3860              		.loc 1 2608 0
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 0
 3863              		@ frame_needed = 0, uses_anonymous_args = 0
 3864              	.LVL280:
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3865              		.loc 1 2608 0
 3866 0000 08B5     		push	{r3, lr}
 3867              	.LCFI55:
 3868              		.cfi_def_cfa_offset 8
 3869              		.cfi_offset 3, -8
 3870              		.cfi_offset 14, -4
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3871              		.loc 1 2616 0
 3872 0002 806B     		ldr	r0, [r0, #56]
 3873              	.LVL281:
 3874 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 3875              	.LVL282:
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3876              		.loc 1 2618 0
ARM GAS  /tmp/cc4hqLkf.s 			page 134


 3877 0008 08BD     		pop	{r3, pc}
 3878              		.cfi_endproc
 3879              	.LFE171:
 3881 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3882              		.align	1
 3883              		.p2align 2,,3
 3884              		.weak	HAL_UART_ErrorCallback
 3885              		.syntax unified
 3886              		.thumb
 3887              		.thumb_func
 3888              		.fpu fpv4-sp-d16
 3890              	HAL_UART_ErrorCallback:
 3891              	.LFB198:
 3892              		.cfi_startproc
 3893              		@ args = 0, pretend = 0, frame = 0
 3894              		@ frame_needed = 0, uses_anonymous_args = 0
 3895              		@ link register save eliminated.
 3896 0000 7047     		bx	lr
 3897              		.cfi_endproc
 3898              	.LFE198:
 3900 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 3901              		.align	1
 3902              		.p2align 2,,3
 3903              		.syntax unified
 3904              		.thumb
 3905              		.thumb_func
 3906              		.fpu fpv4-sp-d16
 3908              	UART_DMAError:
 3909              	.LFB172:
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3910              		.loc 1 2627 0
 3911              		.cfi_startproc
 3912              		@ args = 0, pretend = 0, frame = 0
 3913              		@ frame_needed = 0, uses_anonymous_args = 0
 3914              	.LVL283:
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3915              		.loc 1 2629 0
 3916 0000 806B     		ldr	r0, [r0, #56]
 3917              	.LVL284:
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3918              		.loc 1 2627 0
 3919 0002 08B5     		push	{r3, lr}
 3920              	.LCFI56:
 3921              		.cfi_def_cfa_offset 8
 3922              		.cfi_offset 3, -8
 3923              		.cfi_offset 14, -4
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3924              		.loc 1 2632 0
 3925 0004 0368     		ldr	r3, [r0]
 3926 0006 5969     		ldr	r1, [r3, #20]
 3927              	.LVL285:
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3928              		.loc 1 2633 0
 3929 0008 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 3930 000c 212A     		cmp	r2, #33
 3931 000e 1BD0     		beq	.L358
 3932              	.LVL286:
ARM GAS  /tmp/cc4hqLkf.s 			page 135


 3933              	.L349:
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3934              		.loc 1 2640 0
 3935 0010 5969     		ldr	r1, [r3, #20]
 3936              	.LVL287:
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3937              		.loc 1 2641 0
 3938 0012 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 3939 0016 222A     		cmp	r2, #34
 3940 0018 06D0     		beq	.L359
 3941              	.LVL288:
 3942              	.L350:
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 3943              		.loc 1 2647 0
 3944 001a C36B     		ldr	r3, [r0, #60]
 3945 001c 43F01003 		orr	r3, r3, #16
 3946 0020 C363     		str	r3, [r0, #60]
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3947              		.loc 1 2653 0
 3948 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3949              	.LVL289:
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3950              		.loc 1 2655 0
 3951 0026 08BD     		pop	{r3, pc}
 3952              	.LVL290:
 3953              	.L359:
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3954              		.loc 1 2641 0 discriminator 1
 3955 0028 4A06     		lsls	r2, r1, #25
 3956 002a F6D5     		bpl	.L350
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3957              		.loc 1 2643 0
 3958 002c 0022     		movs	r2, #0
 3959 002e C285     		strh	r2, [r0, #46]	@ movhi
 3960              	.LVL291:
 3961              	.LBB130:
 3962              	.LBB131:
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3963              		.loc 1 2716 0
 3964 0030 DA68     		ldr	r2, [r3, #12]
 3965 0032 22F49072 		bic	r2, r2, #288
 3966 0036 DA60     		str	r2, [r3, #12]
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3967              		.loc 1 2717 0
 3968 0038 5A69     		ldr	r2, [r3, #20]
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3969              		.loc 1 2720 0
 3970 003a 2021     		movs	r1, #32
 3971              	.LVL292:
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3972              		.loc 1 2717 0
 3973 003c 22F00102 		bic	r2, r2, #1
 3974 0040 5A61     		str	r2, [r3, #20]
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3975              		.loc 1 2720 0
 3976 0042 80F83A10 		strb	r1, [r0, #58]
 3977 0046 E8E7     		b	.L350
ARM GAS  /tmp/cc4hqLkf.s 			page 136


 3978              	.LVL293:
 3979              	.L358:
 3980              	.LBE131:
 3981              	.LBE130:
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3982              		.loc 1 2633 0 discriminator 1
 3983 0048 0906     		lsls	r1, r1, #24
 3984              	.LVL294:
 3985 004a E1D5     		bpl	.L349
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3986              		.loc 1 2635 0
 3987 004c 0022     		movs	r2, #0
 3988 004e C284     		strh	r2, [r0, #38]	@ movhi
 3989              	.LVL295:
 3990              	.LBB132:
 3991              	.LBB133:
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3992              		.loc 1 2702 0
 3993 0050 DA68     		ldr	r2, [r3, #12]
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3994              		.loc 1 2705 0
 3995 0052 2021     		movs	r1, #32
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3996              		.loc 1 2702 0
 3997 0054 22F0C002 		bic	r2, r2, #192
 3998 0058 DA60     		str	r2, [r3, #12]
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3999              		.loc 1 2705 0
 4000 005a 80F83910 		strb	r1, [r0, #57]
 4001 005e D7E7     		b	.L349
 4002              	.LBE133:
 4003              	.LBE132:
 4004              		.cfi_endproc
 4005              	.LFE172:
 4007              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4008              		.align	1
 4009              		.p2align 2,,3
 4010              		.global	HAL_UART_IRQHandler
 4011              		.syntax unified
 4012              		.thumb
 4013              		.thumb_func
 4014              		.fpu fpv4-sp-d16
 4016              	HAL_UART_IRQHandler:
 4017              	.LFB152:
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4018              		.loc 1 1999 0
 4019              		.cfi_startproc
 4020              		@ args = 0, pretend = 0, frame = 0
 4021              		@ frame_needed = 0, uses_anonymous_args = 0
 4022              	.LVL296:
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4023              		.loc 1 2000 0
 4024 0000 0368     		ldr	r3, [r0]
 4025 0002 1A68     		ldr	r2, [r3]
 4026              	.LVL297:
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4027              		.loc 1 1999 0
ARM GAS  /tmp/cc4hqLkf.s 			page 137


 4028 0004 70B5     		push	{r4, r5, r6, lr}
 4029              	.LCFI57:
 4030              		.cfi_def_cfa_offset 16
 4031              		.cfi_offset 4, -16
 4032              		.cfi_offset 5, -12
 4033              		.cfi_offset 6, -8
 4034              		.cfi_offset 14, -4
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4035              		.loc 1 2008 0
 4036 0006 1607     		lsls	r6, r2, #28
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4037              		.loc 1 2001 0
 4038 0008 DD68     		ldr	r5, [r3, #12]
 4039              	.LVL298:
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 4040              		.loc 1 2002 0
 4041 000a 5969     		ldr	r1, [r3, #20]
 4042              	.LVL299:
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4043              		.loc 1 1999 0
 4044 000c 0446     		mov	r4, r0
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4045              		.loc 1 2008 0
 4046 000e 49D0     		beq	.L443
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4047              		.loc 1 2019 0 discriminator 1
 4048 0010 11F00101 		ands	r1, r1, #1
 4049              	.LVL300:
 4050 0014 4FD0     		beq	.L444
 4051              	.L365:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4052              		.loc 1 2022 0
 4053 0016 D607     		lsls	r6, r2, #31
 4054 0018 05D5     		bpl	.L366
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4055              		.loc 1 2022 0 is_stmt 0 discriminator 1
 4056 001a E805     		lsls	r0, r5, #23
 4057              	.LVL301:
 4058 001c 03D5     		bpl	.L366
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4059              		.loc 1 2024 0 is_stmt 1
 4060 001e E06B     		ldr	r0, [r4, #60]
 4061 0020 40F00100 		orr	r0, r0, #1
 4062 0024 E063     		str	r0, [r4, #60]
 4063              	.L366:
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4064              		.loc 1 2028 0
 4065 0026 5607     		lsls	r6, r2, #29
 4066 0028 02F00200 		and	r0, r2, #2
 4067 002c 75D5     		bpl	.L367
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4068              		.loc 1 2028 0 is_stmt 0 discriminator 1
 4069 002e 61B1     		cbz	r1, .L372
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4070              		.loc 1 2030 0 is_stmt 1
 4071 0030 E16B     		ldr	r1, [r4, #60]
 4072 0032 41F00201 		orr	r1, r1, #2
ARM GAS  /tmp/cc4hqLkf.s 			page 138


 4073 0036 E163     		str	r1, [r4, #60]
 4074 0038 02F00806 		and	r6, r2, #8
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4075              		.loc 1 2034 0
 4076 003c 0028     		cmp	r0, #0
 4077 003e 71D1     		bne	.L369
 4078              	.L442:
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4079              		.loc 1 2040 0
 4080 0040 1EB1     		cbz	r6, .L372
 4081              	.L373:
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4082              		.loc 1 2042 0
 4083 0042 E16B     		ldr	r1, [r4, #60]
 4084 0044 41F00801 		orr	r1, r1, #8
 4085 0048 E163     		str	r1, [r4, #60]
 4086              	.L372:
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4087              		.loc 1 2046 0
 4088 004a E16B     		ldr	r1, [r4, #60]
 4089 004c 0029     		cmp	r1, #0
 4090 004e 31D0     		beq	.L360
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4091              		.loc 1 2049 0
 4092 0050 9606     		lsls	r6, r2, #26
 4093 0052 01D5     		bpl	.L375
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4094              		.loc 1 2049 0 is_stmt 0 discriminator 1
 4095 0054 A806     		lsls	r0, r5, #26
 4096 0056 73D4     		bmi	.L445
 4097              	.LVL302:
 4098              	.L375:
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 4099              		.loc 1 2056 0 is_stmt 1
 4100 0058 5D69     		ldr	r5, [r3, #20]
 4101              	.LVL303:
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4102              		.loc 1 2057 0
 4103 005a E16B     		ldr	r1, [r4, #60]
 4104 005c 0907     		lsls	r1, r1, #28
 4105 005e 02D4     		bmi	.L376
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4106              		.loc 1 2057 0 is_stmt 0 discriminator 1
 4107 0060 15F04005 		ands	r5, r5, #64
 4108              	.LVL304:
 4109 0064 79D0     		beq	.L377
 4110              	.LVL305:
 4111              	.L376:
 4112              	.LBB144:
 4113              	.LBB145:
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4114              		.loc 1 2716 0 is_stmt 1
 4115 0066 DA68     		ldr	r2, [r3, #12]
 4116 0068 22F49072 		bic	r2, r2, #288
 4117 006c DA60     		str	r2, [r3, #12]
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4118              		.loc 1 2717 0
ARM GAS  /tmp/cc4hqLkf.s 			page 139


 4119 006e 5A69     		ldr	r2, [r3, #20]
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4120              		.loc 1 2720 0
 4121 0070 2021     		movs	r1, #32
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4122              		.loc 1 2717 0
 4123 0072 22F00102 		bic	r2, r2, #1
 4124 0076 5A61     		str	r2, [r3, #20]
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4125              		.loc 1 2720 0
 4126 0078 84F83A10 		strb	r1, [r4, #58]
 4127              	.LVL306:
 4128              	.LBE145:
 4129              	.LBE144:
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 4130              		.loc 1 2065 0
 4131 007c 5A69     		ldr	r2, [r3, #20]
 4132 007e 5206     		lsls	r2, r2, #25
 4133 0080 5AD5     		bpl	.L378
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4134              		.loc 1 2067 0
 4135 0082 5A69     		ldr	r2, [r3, #20]
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 4136              		.loc 1 2070 0
 4137 0084 606B     		ldr	r0, [r4, #52]
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4138              		.loc 1 2067 0
 4139 0086 22F04002 		bic	r2, r2, #64
 4140 008a 5A61     		str	r2, [r3, #20]
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 4141              		.loc 1 2070 0
 4142 008c 0028     		cmp	r0, #0
 4143 008e 53D0     		beq	.L378
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4144              		.loc 1 2074 0
 4145 0090 3A4B     		ldr	r3, .L449
 4146 0092 0365     		str	r3, [r0, #80]
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 4147              		.loc 1 2075 0
 4148 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4149              	.LVL307:
 4150 0098 60B1     		cbz	r0, .L360
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 4151              		.loc 1 2078 0
 4152 009a 606B     		ldr	r0, [r4, #52]
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4153              		.loc 1 2136 0
 4154 009c BDE87040 		pop	{r4, r5, r6, lr}
 4155              	.LCFI58:
 4156              		.cfi_remember_state
 4157              		.cfi_restore 14
 4158              		.cfi_restore 6
 4159              		.cfi_restore 5
 4160              		.cfi_restore 4
 4161              		.cfi_def_cfa_offset 0
 4162              	.LVL308:
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
ARM GAS  /tmp/cc4hqLkf.s 			page 140


 4163              		.loc 1 2078 0
 4164 00a0 036D     		ldr	r3, [r0, #80]
 4165 00a2 1847     		bx	r3	@ indirect register sibling call
 4166              	.LVL309:
 4167              	.L443:
 4168              	.LCFI59:
 4169              		.cfi_restore_state
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4170              		.loc 1 2011 0
 4171 00a4 9606     		lsls	r6, r2, #26
 4172 00a6 09D5     		bpl	.L362
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4173              		.loc 1 2011 0 is_stmt 0 discriminator 1
 4174 00a8 A906     		lsls	r1, r5, #26
 4175              	.LVL310:
 4176 00aa 07D5     		bpl	.L362
 4177              	.LVL311:
 4178              	.LBB146:
 4179              	.LBB147:
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4180              		.loc 1 2974 0 is_stmt 1
 4181 00ac 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 4182 00b0 222B     		cmp	r3, #34
 4183 00b2 4ED0     		beq	.L446
 4184              	.LVL312:
 4185              	.L360:
 4186              	.LBE147:
 4187              	.LBE146:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4188              		.loc 1 2136 0
 4189 00b4 70BD     		pop	{r4, r5, r6, pc}
 4190              	.LVL313:
 4191              	.L444:
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4192              		.loc 1 2019 0 discriminator 2
 4193 00b6 15F4907F 		tst	r5, #288
 4194 00ba ACD1     		bne	.L365
 4195              	.L362:
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4196              		.loc 1 2124 0
 4197 00bc 1606     		lsls	r6, r2, #24
 4198 00be 0ED4     		bmi	.L447
 4199              	.LVL314:
 4200              	.L379:
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4201              		.loc 1 2131 0
 4202 00c0 5106     		lsls	r1, r2, #25
 4203 00c2 F7D5     		bpl	.L360
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4204              		.loc 1 2131 0 is_stmt 0 discriminator 1
 4205 00c4 6A06     		lsls	r2, r5, #25
 4206              	.LVL315:
 4207 00c6 F5D5     		bpl	.L360
 4208              	.LVL316:
 4209              	.LBB149:
 4210              	.LBB150:
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 141


 4211              		.loc 1 2947 0 is_stmt 1
 4212 00c8 DA68     		ldr	r2, [r3, #12]
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4213              		.loc 1 2950 0
 4214 00ca 2021     		movs	r1, #32
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4215              		.loc 1 2947 0
 4216 00cc 22F04002 		bic	r2, r2, #64
 4217 00d0 DA60     		str	r2, [r3, #12]
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4218              		.loc 1 2957 0
 4219 00d2 2046     		mov	r0, r4
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4220              		.loc 1 2950 0
 4221 00d4 84F83910 		strb	r1, [r4, #57]
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4222              		.loc 1 2957 0
 4223 00d8 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4224              	.LVL317:
 4225              	.LBE150:
 4226              	.LBE149:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4227              		.loc 1 2136 0
 4228 00dc 70BD     		pop	{r4, r5, r6, pc}
 4229              	.LVL318:
 4230              	.L447:
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4231              		.loc 1 2124 0 discriminator 1
 4232 00de 2806     		lsls	r0, r5, #24
 4233              	.LVL319:
 4234 00e0 EED5     		bpl	.L379
 4235              	.LVL320:
 4236              	.LBB151:
 4237              	.LBB152:
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4238              		.loc 1 2902 0
 4239 00e2 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 4240              	.LVL321:
 4241 00e6 212A     		cmp	r2, #33
 4242 00e8 E4D1     		bne	.L360
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4243              		.loc 1 2904 0
 4244 00ea A168     		ldr	r1, [r4, #8]
 4245 00ec 226A     		ldr	r2, [r4, #32]
 4246 00ee B1F5805F 		cmp	r1, #4096
 4247 00f2 37D0     		beq	.L448
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4248              		.loc 1 2919 0
 4249 00f4 511C     		adds	r1, r2, #1
 4250 00f6 2162     		str	r1, [r4, #32]
 4251 00f8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4252 00fa 5A60     		str	r2, [r3, #4]
 4253              	.L382:
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4254              		.loc 1 2922 0
 4255 00fc E28C     		ldrh	r2, [r4, #38]
 4256 00fe 013A     		subs	r2, r2, #1
ARM GAS  /tmp/cc4hqLkf.s 			page 142


 4257 0100 92B2     		uxth	r2, r2
 4258 0102 E284     		strh	r2, [r4, #38]	@ movhi
 4259 0104 002A     		cmp	r2, #0
 4260 0106 D5D1     		bne	.L360
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4261              		.loc 1 2925 0
 4262 0108 DA68     		ldr	r2, [r3, #12]
 4263 010a 22F08002 		bic	r2, r2, #128
 4264 010e DA60     		str	r2, [r3, #12]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4265              		.loc 1 2928 0
 4266 0110 DA68     		ldr	r2, [r3, #12]
 4267 0112 42F04002 		orr	r2, r2, #64
 4268 0116 DA60     		str	r2, [r3, #12]
 4269              	.LBE152:
 4270              	.LBE151:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4271              		.loc 1 2136 0
 4272 0118 70BD     		pop	{r4, r5, r6, pc}
 4273              	.LVL322:
 4274              	.L367:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4275              		.loc 1 2034 0
 4276 011a 40B1     		cbz	r0, .L371
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4277              		.loc 1 2034 0 is_stmt 0 discriminator 1
 4278 011c 0029     		cmp	r1, #0
 4279 011e 94D0     		beq	.L372
 4280 0120 02F00806 		and	r6, r2, #8
 4281              	.L369:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4282              		.loc 1 2036 0 is_stmt 1
 4283 0124 E16B     		ldr	r1, [r4, #60]
 4284 0126 41F00401 		orr	r1, r1, #4
 4285 012a E163     		str	r1, [r4, #60]
 4286 012c 88E7     		b	.L442
 4287              	.L371:
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4288              		.loc 1 2040 0
 4289 012e 1007     		lsls	r0, r2, #28
 4290 0130 8BD5     		bpl	.L372
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4291              		.loc 1 2040 0 is_stmt 0 discriminator 1
 4292 0132 0029     		cmp	r1, #0
 4293 0134 85D1     		bne	.L373
 4294 0136 88E7     		b	.L372
 4295              	.LVL323:
 4296              	.L378:
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4297              		.loc 1 2089 0 is_stmt 1
 4298 0138 2046     		mov	r0, r4
 4299 013a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4300              	.LVL324:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4301              		.loc 1 2136 0
 4302 013e 70BD     		pop	{r4, r5, r6, pc}
 4303              	.LVL325:
ARM GAS  /tmp/cc4hqLkf.s 			page 143


 4304              	.L445:
 4305              	.LBB154:
 4306              	.LBB155:
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4307              		.loc 1 2974 0
 4308 0140 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 4309              	.LVL326:
 4310 0144 222A     		cmp	r2, #34
 4311 0146 87D1     		bne	.L375
 4312 0148 2046     		mov	r0, r4
 4313 014a FFF7FEFF 		bl	UART_Receive_IT.part.1
 4314              	.LVL327:
 4315 014e 2368     		ldr	r3, [r4]
 4316 0150 82E7     		b	.L375
 4317              	.LVL328:
 4318              	.L446:
 4319              	.LBE155:
 4320              	.LBE154:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4321              		.loc 1 2136 0
 4322 0152 BDE87040 		pop	{r4, r5, r6, lr}
 4323              	.LCFI60:
 4324              		.cfi_remember_state
 4325              		.cfi_restore 14
 4326              		.cfi_restore 6
 4327              		.cfi_restore 5
 4328              		.cfi_restore 4
 4329              		.cfi_def_cfa_offset 0
 4330              	.LVL329:
 4331              	.LBB156:
 4332              	.LBB148:
 4333 0156 FFF7FEBF 		b	UART_Receive_IT.part.1
 4334              	.LVL330:
 4335              	.L377:
 4336              	.LCFI61:
 4337              		.cfi_restore_state
 4338              	.LBE148:
 4339              	.LBE156:
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4340              		.loc 1 2114 0
 4341 015a 2046     		mov	r0, r4
 4342 015c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4343              	.LVL331:
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4344              		.loc 1 2117 0
 4345 0160 E563     		str	r5, [r4, #60]
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4346              		.loc 1 2136 0
 4347 0162 70BD     		pop	{r4, r5, r6, pc}
 4348              	.LVL332:
 4349              	.L448:
 4350              	.LBB157:
 4351              	.LBB153:
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 4352              		.loc 1 2907 0
 4353 0164 1188     		ldrh	r1, [r2]
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/cc4hqLkf.s 			page 144


 4354              		.loc 1 2908 0
 4355 0166 2069     		ldr	r0, [r4, #16]
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 4356              		.loc 1 2907 0
 4357 0168 C1F30801 		ubfx	r1, r1, #0, #9
 4358 016c 5960     		str	r1, [r3, #4]
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4359              		.loc 1 2908 0
 4360 016e 10B9     		cbnz	r0, .L381
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4361              		.loc 1 2910 0
 4362 0170 0232     		adds	r2, r2, #2
 4363 0172 2262     		str	r2, [r4, #32]
 4364              	.LVL333:
 4365 0174 C2E7     		b	.L382
 4366              	.LVL334:
 4367              	.L381:
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4368              		.loc 1 2914 0
 4369 0176 0132     		adds	r2, r2, #1
 4370 0178 2262     		str	r2, [r4, #32]
 4371              	.LVL335:
 4372 017a BFE7     		b	.L382
 4373              	.L450:
 4374              		.align	2
 4375              	.L449:
 4376 017c 00000000 		.word	UART_DMAAbortOnError
 4377              	.LBE153:
 4378              	.LBE157:
 4379              		.cfi_endproc
 4380              	.LFE152:
 4382              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4383              		.align	1
 4384              		.p2align 2,,3
 4385              		.syntax unified
 4386              		.thumb
 4387              		.thumb_func
 4388              		.fpu fpv4-sp-d16
 4390              	UART_DMAAbortOnError:
 4391              	.LFB176:
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4392              		.loc 1 2731 0
 4393              		.cfi_startproc
 4394              		@ args = 0, pretend = 0, frame = 0
 4395              		@ frame_needed = 0, uses_anonymous_args = 0
 4396              	.LVL336:
 4397 0000 08B5     		push	{r3, lr}
 4398              	.LCFI62:
 4399              		.cfi_def_cfa_offset 8
 4400              		.cfi_offset 3, -8
 4401              		.cfi_offset 14, -4
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4402              		.loc 1 2732 0
 4403 0002 836B     		ldr	r3, [r0, #56]
 4404              	.LVL337:
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4405              		.loc 1 2733 0
ARM GAS  /tmp/cc4hqLkf.s 			page 145


 4406 0004 0022     		movs	r2, #0
 4407 0006 DA85     		strh	r2, [r3, #46]	@ movhi
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4408              		.loc 1 2741 0
 4409 0008 1846     		mov	r0, r3
 4410              	.LVL338:
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4411              		.loc 1 2734 0
 4412 000a DA84     		strh	r2, [r3, #38]	@ movhi
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4413              		.loc 1 2741 0
 4414 000c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4415              	.LVL339:
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4416              		.loc 1 2743 0
 4417 0010 08BD     		pop	{r3, pc}
 4418              		.cfi_endproc
 4419              	.LFE176:
 4421 0012 00BF     		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4422              		.align	1
 4423              		.p2align 2,,3
 4424              		.weak	HAL_UART_AbortCpltCallback
 4425              		.syntax unified
 4426              		.thumb
 4427              		.thumb_func
 4428              		.fpu fpv4-sp-d16
 4430              	HAL_UART_AbortCpltCallback:
 4431              	.LFB200:
 4432              		.cfi_startproc
 4433              		@ args = 0, pretend = 0, frame = 0
 4434              		@ frame_needed = 0, uses_anonymous_args = 0
 4435              		@ link register save eliminated.
 4436 0000 7047     		bx	lr
 4437              		.cfi_endproc
 4438              	.LFE200:
 4440 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4441              		.align	1
 4442              		.p2align 2,,3
 4443              		.global	HAL_UART_Abort_IT
 4444              		.syntax unified
 4445              		.thumb
 4446              		.thumb_func
 4447              		.fpu fpv4-sp-d16
 4449              	HAL_UART_Abort_IT:
 4450              	.LFB149:
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4451              		.loc 1 1724 0
 4452              		.cfi_startproc
 4453              		@ args = 0, pretend = 0, frame = 0
 4454              		@ frame_needed = 0, uses_anonymous_args = 0
 4455              	.LVL340:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4456              		.loc 1 1728 0
 4457 0000 0368     		ldr	r3, [r0]
 4458 0002 DA68     		ldr	r2, [r3, #12]
 4459 0004 22F4F072 		bic	r2, r2, #480
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
ARM GAS  /tmp/cc4hqLkf.s 			page 146


 4460              		.loc 1 1724 0
 4461 0008 10B5     		push	{r4, lr}
 4462              	.LCFI63:
 4463              		.cfi_def_cfa_offset 8
 4464              		.cfi_offset 4, -8
 4465              		.cfi_offset 14, -4
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4466              		.loc 1 1724 0
 4467 000a 0446     		mov	r4, r0
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4468              		.loc 1 1734 0
 4469 000c 006B     		ldr	r0, [r0, #48]
 4470              	.LVL341:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4471              		.loc 1 1728 0
 4472 000e DA60     		str	r2, [r3, #12]
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4473              		.loc 1 1729 0
 4474 0010 5A69     		ldr	r2, [r3, #20]
 4475 0012 22F00102 		bic	r2, r2, #1
 4476 0016 5A61     		str	r2, [r3, #20]
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4477              		.loc 1 1734 0
 4478 0018 28B1     		cbz	r0, .L455
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4479              		.loc 1 1738 0
 4480 001a 5A69     		ldr	r2, [r3, #20]
 4481 001c 12F08002 		ands	r2, r2, #128
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4482              		.loc 1 1740 0
 4483 0020 18BF     		it	ne
 4484 0022 214A     		ldrne	r2, .L485
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4485              		.loc 1 1744 0
 4486 0024 0265     		str	r2, [r0, #80]
 4487              	.L455:
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4488              		.loc 1 1748 0
 4489 0026 616B     		ldr	r1, [r4, #52]
 4490 0028 29B1     		cbz	r1, .L457
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4491              		.loc 1 1752 0
 4492 002a 5A69     		ldr	r2, [r3, #20]
 4493 002c 12F04002 		ands	r2, r2, #64
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4494              		.loc 1 1754 0
 4495 0030 18BF     		it	ne
 4496 0032 1E4A     		ldrne	r2, .L485+4
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4497              		.loc 1 1758 0
 4498 0034 0A65     		str	r2, [r1, #80]
 4499              	.L457:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4500              		.loc 1 1763 0
 4501 0036 5A69     		ldr	r2, [r3, #20]
 4502 0038 1206     		lsls	r2, r2, #24
 4503 003a 0BD5     		bpl	.L459
ARM GAS  /tmp/cc4hqLkf.s 			page 147


1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4504              		.loc 1 1766 0
 4505 003c 5A69     		ldr	r2, [r3, #20]
 4506 003e 22F08002 		bic	r2, r2, #128
 4507 0042 5A61     		str	r2, [r3, #20]
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4508              		.loc 1 1769 0
 4509 0044 30B1     		cbz	r0, .L459
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4510              		.loc 1 1775 0
 4511 0046 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4512              	.LVL342:
 4513 004a 00B3     		cbz	r0, .L460
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4514              		.loc 1 1777 0
 4515 004c 226B     		ldr	r2, [r4, #48]
 4516 004e 2368     		ldr	r3, [r4]
 4517 0050 0021     		movs	r1, #0
 4518 0052 1165     		str	r1, [r2, #80]
 4519              	.L459:
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4520              		.loc 1 1787 0
 4521 0054 5A69     		ldr	r2, [r3, #20]
 4522 0056 5206     		lsls	r2, r2, #25
 4523 0058 0BD5     		bpl	.L462
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4524              		.loc 1 1789 0
 4525 005a 5A69     		ldr	r2, [r3, #20]
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4526              		.loc 1 1792 0
 4527 005c 606B     		ldr	r0, [r4, #52]
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4528              		.loc 1 1789 0
 4529 005e 22F04002 		bic	r2, r2, #64
 4530 0062 5A61     		str	r2, [r3, #20]
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4531              		.loc 1 1792 0
 4532 0064 28B1     		cbz	r0, .L462
 4533              	.LVL343:
 4534              	.L461:
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4535              		.loc 1 1798 0
 4536 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4537              	.LVL344:
 4538 006a 70B1     		cbz	r0, .L478
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4539              		.loc 1 1800 0
 4540 006c 636B     		ldr	r3, [r4, #52]
 4541 006e 0022     		movs	r2, #0
 4542 0070 1A65     		str	r2, [r3, #80]
 4543              	.LVL345:
 4544              	.L462:
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4545              		.loc 1 1814 0
 4546 0072 0023     		movs	r3, #0
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4547              		.loc 1 1821 0
ARM GAS  /tmp/cc4hqLkf.s 			page 148


 4548 0074 2022     		movs	r2, #32
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4549              		.loc 1 1814 0
 4550 0076 E384     		strh	r3, [r4, #38]	@ movhi
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4551              		.loc 1 1830 0
 4552 0078 2046     		mov	r0, r4
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4553              		.loc 1 1815 0
 4554 007a E385     		strh	r3, [r4, #46]	@ movhi
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4555              		.loc 1 1818 0
 4556 007c E363     		str	r3, [r4, #60]
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4557              		.loc 1 1821 0
 4558 007e 84F83920 		strb	r2, [r4, #57]
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4559              		.loc 1 1822 0
 4560 0082 84F83A20 		strb	r2, [r4, #58]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4561              		.loc 1 1830 0
 4562 0086 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4563              	.LVL346:
 4564              	.L478:
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4565              		.loc 1 1835 0
 4566 008a 0020     		movs	r0, #0
 4567 008c 10BD     		pop	{r4, pc}
 4568              	.LVL347:
 4569              	.L460:
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4570              		.loc 1 1787 0
 4571 008e 2368     		ldr	r3, [r4]
 4572 0090 5A69     		ldr	r2, [r3, #20]
 4573 0092 5106     		lsls	r1, r2, #25
 4574 0094 F9D5     		bpl	.L478
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4575              		.loc 1 1789 0
 4576 0096 5A69     		ldr	r2, [r3, #20]
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4577              		.loc 1 1792 0
 4578 0098 606B     		ldr	r0, [r4, #52]
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4579              		.loc 1 1789 0
 4580 009a 22F04002 		bic	r2, r2, #64
 4581 009e 5A61     		str	r2, [r3, #20]
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4582              		.loc 1 1792 0
 4583 00a0 0028     		cmp	r0, #0
 4584 00a2 E0D1     		bne	.L461
 4585 00a4 F1E7     		b	.L478
 4586              	.L486:
 4587 00a6 00BF     		.align	2
 4588              	.L485:
 4589 00a8 00000000 		.word	UART_DMATxAbortCallback
 4590 00ac 00000000 		.word	UART_DMARxAbortCallback
 4591              		.cfi_endproc
ARM GAS  /tmp/cc4hqLkf.s 			page 149


 4592              	.LFE149:
 4594              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 4595              		.align	1
 4596              		.p2align 2,,3
 4597              		.syntax unified
 4598              		.thumb
 4599              		.thumb_func
 4600              		.fpu fpv4-sp-d16
 4602              	UART_DMARxAbortCallback:
 4603              	.LFB178:
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4604              		.loc 1 2800 0
 4605              		.cfi_startproc
 4606              		@ args = 0, pretend = 0, frame = 0
 4607              		@ frame_needed = 0, uses_anonymous_args = 0
 4608              	.LVL348:
 4609 0000 08B5     		push	{r3, lr}
 4610              	.LCFI64:
 4611              		.cfi_def_cfa_offset 8
 4612              		.cfi_offset 3, -8
 4613              		.cfi_offset 14, -4
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4614              		.loc 1 2801 0
 4615 0002 836B     		ldr	r3, [r0, #56]
 4616              	.LVL349:
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4617              		.loc 1 2806 0
 4618 0004 D3E90C21 		ldrd	r2, r1, [r3, #48]
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4619              		.loc 1 2803 0
 4620 0008 0020     		movs	r0, #0
 4621              	.LVL350:
 4622 000a 0865     		str	r0, [r1, #80]
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4623              		.loc 1 2806 0
 4624 000c 12B1     		cbz	r2, .L488
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4625              		.loc 1 2808 0
 4626 000e 126D     		ldr	r2, [r2, #80]
 4627 0010 02B1     		cbz	r2, .L488
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4628              		.loc 1 2833 0
 4629 0012 08BD     		pop	{r3, pc}
 4630              	.LVL351:
 4631              	.L488:
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4632              		.loc 1 2815 0
 4633 0014 0022     		movs	r2, #0
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4634              		.loc 1 2822 0
 4635 0016 2021     		movs	r1, #32
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4636              		.loc 1 2815 0
 4637 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4638              		.loc 1 2831 0
 4639 001a 1846     		mov	r0, r3
ARM GAS  /tmp/cc4hqLkf.s 			page 150


2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4640              		.loc 1 2816 0
 4641 001c DA85     		strh	r2, [r3, #46]	@ movhi
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4642              		.loc 1 2819 0
 4643 001e DA63     		str	r2, [r3, #60]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4644              		.loc 1 2822 0
 4645 0020 83F83910 		strb	r1, [r3, #57]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4646              		.loc 1 2823 0
 4647 0024 83F83A10 		strb	r1, [r3, #58]
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4648              		.loc 1 2831 0
 4649 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4650              	.LVL352:
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4651              		.loc 1 2833 0
 4652 002c 08BD     		pop	{r3, pc}
 4653              		.cfi_endproc
 4654              	.LFE178:
 4656 002e 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4657              		.align	1
 4658              		.p2align 2,,3
 4659              		.syntax unified
 4660              		.thumb
 4661              		.thumb_func
 4662              		.fpu fpv4-sp-d16
 4664              	UART_DMATxAbortCallback:
 4665              	.LFB177:
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4666              		.loc 1 2755 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
 4669              		@ frame_needed = 0, uses_anonymous_args = 0
 4670              	.LVL353:
 4671 0000 08B5     		push	{r3, lr}
 4672              	.LCFI65:
 4673              		.cfi_def_cfa_offset 8
 4674              		.cfi_offset 3, -8
 4675              		.cfi_offset 14, -4
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4676              		.loc 1 2756 0
 4677 0002 836B     		ldr	r3, [r0, #56]
 4678              	.LVL354:
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4679              		.loc 1 2761 0
 4680 0004 D3E90C12 		ldrd	r1, r2, [r3, #48]
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4681              		.loc 1 2758 0
 4682 0008 0020     		movs	r0, #0
 4683              	.LVL355:
 4684 000a 0865     		str	r0, [r1, #80]
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4685              		.loc 1 2761 0
 4686 000c 12B1     		cbz	r2, .L495
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc4hqLkf.s 			page 151


 4687              		.loc 1 2763 0
 4688 000e 126D     		ldr	r2, [r2, #80]
 4689 0010 02B1     		cbz	r2, .L495
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4690              		.loc 1 2788 0
 4691 0012 08BD     		pop	{r3, pc}
 4692              	.LVL356:
 4693              	.L495:
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4694              		.loc 1 2770 0
 4695 0014 0022     		movs	r2, #0
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4696              		.loc 1 2777 0
 4697 0016 2021     		movs	r1, #32
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4698              		.loc 1 2770 0
 4699 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4700              		.loc 1 2786 0
 4701 001a 1846     		mov	r0, r3
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4702              		.loc 1 2771 0
 4703 001c DA85     		strh	r2, [r3, #46]	@ movhi
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4704              		.loc 1 2774 0
 4705 001e DA63     		str	r2, [r3, #60]
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4706              		.loc 1 2777 0
 4707 0020 83F83910 		strb	r1, [r3, #57]
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4708              		.loc 1 2778 0
 4709 0024 83F83A10 		strb	r1, [r3, #58]
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4710              		.loc 1 2786 0
 4711 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4712              	.LVL357:
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4713              		.loc 1 2788 0
 4714 002c 08BD     		pop	{r3, pc}
 4715              		.cfi_endproc
 4716              	.LFE177:
 4718 002e 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4719              		.align	1
 4720              		.p2align 2,,3
 4721              		.weak	HAL_UART_AbortTransmitCpltCallback
 4722              		.syntax unified
 4723              		.thumb
 4724              		.thumb_func
 4725              		.fpu fpv4-sp-d16
 4727              	HAL_UART_AbortTransmitCpltCallback:
 4728              	.LFB202:
 4729              		.cfi_startproc
 4730              		@ args = 0, pretend = 0, frame = 0
 4731              		@ frame_needed = 0, uses_anonymous_args = 0
 4732              		@ link register save eliminated.
 4733 0000 7047     		bx	lr
 4734              		.cfi_endproc
ARM GAS  /tmp/cc4hqLkf.s 			page 152


 4735              	.LFE202:
 4737 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4738              		.align	1
 4739              		.p2align 2,,3
 4740              		.global	HAL_UART_AbortTransmit_IT
 4741              		.syntax unified
 4742              		.thumb
 4743              		.thumb_func
 4744              		.fpu fpv4-sp-d16
 4746              	HAL_UART_AbortTransmit_IT:
 4747              	.LFB150:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4748              		.loc 1 1852 0
 4749              		.cfi_startproc
 4750              		@ args = 0, pretend = 0, frame = 0
 4751              		@ frame_needed = 0, uses_anonymous_args = 0
 4752              	.LVL358:
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4753              		.loc 1 1854 0
 4754 0000 0368     		ldr	r3, [r0]
 4755 0002 DA68     		ldr	r2, [r3, #12]
 4756 0004 22F0C002 		bic	r2, r2, #192
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4757              		.loc 1 1852 0
 4758 0008 10B5     		push	{r4, lr}
 4759              	.LCFI66:
 4760              		.cfi_def_cfa_offset 8
 4761              		.cfi_offset 4, -8
 4762              		.cfi_offset 14, -4
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4763              		.loc 1 1854 0
 4764 000a DA60     		str	r2, [r3, #12]
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4765              		.loc 1 1857 0
 4766 000c 5A69     		ldr	r2, [r3, #20]
 4767 000e 12F08002 		ands	r2, r2, #128
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4768              		.loc 1 1852 0
 4769 0012 0446     		mov	r4, r0
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4770              		.loc 1 1857 0
 4771 0014 10D0     		beq	.L503
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4772              		.loc 1 1859 0
 4773 0016 5A69     		ldr	r2, [r3, #20]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4774              		.loc 1 1862 0
 4775 0018 016B     		ldr	r1, [r0, #48]
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4776              		.loc 1 1859 0
 4777 001a 22F08002 		bic	r2, r2, #128
 4778 001e 5A61     		str	r2, [r3, #20]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4779              		.loc 1 1862 0
 4780 0020 91B1     		cbz	r1, .L504
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4781              		.loc 1 1866 0
ARM GAS  /tmp/cc4hqLkf.s 			page 153


 4782 0022 0D4B     		ldr	r3, .L510
 4783 0024 0B65     		str	r3, [r1, #80]
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4784              		.loc 1 1869 0
 4785 0026 0846     		mov	r0, r1
 4786              	.LVL359:
 4787 0028 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4788              	.LVL360:
 4789 002c 10B1     		cbz	r0, .L505
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4790              		.loc 1 1872 0
 4791 002e 206B     		ldr	r0, [r4, #48]
 4792 0030 036D     		ldr	r3, [r0, #80]
 4793 0032 9847     		blx	r3
 4794              	.LVL361:
 4795              	.L505:
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4796              		.loc 1 1912 0
 4797 0034 0020     		movs	r0, #0
 4798 0036 10BD     		pop	{r4, pc}
 4799              	.LVL362:
 4800              	.L503:
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4801              		.loc 1 1899 0
 4802 0038 2023     		movs	r3, #32
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4803              		.loc 1 1896 0
 4804 003a C284     		strh	r2, [r0, #38]	@ movhi
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4805              		.loc 1 1899 0
 4806 003c 80F83930 		strb	r3, [r0, #57]
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4807              		.loc 1 1907 0
 4808 0040 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4809              	.LVL363:
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4810              		.loc 1 1912 0
 4811 0044 0020     		movs	r0, #0
 4812 0046 10BD     		pop	{r4, pc}
 4813              	.LVL364:
 4814              	.L504:
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4815              		.loc 1 1881 0
 4816 0048 2023     		movs	r3, #32
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4817              		.loc 1 1878 0
 4818 004a C184     		strh	r1, [r0, #38]	@ movhi
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4819              		.loc 1 1881 0
 4820 004c 80F83930 		strb	r3, [r0, #57]
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4821              		.loc 1 1889 0
 4822 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4823              	.LVL365:
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4824              		.loc 1 1912 0
 4825 0054 0020     		movs	r0, #0
ARM GAS  /tmp/cc4hqLkf.s 			page 154


 4826 0056 10BD     		pop	{r4, pc}
 4827              	.LVL366:
 4828              	.L511:
 4829              		.align	2
 4830              	.L510:
 4831 0058 00000000 		.word	UART_DMATxOnlyAbortCallback
 4832              		.cfi_endproc
 4833              	.LFE150:
 4835              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4836              		.align	1
 4837              		.p2align 2,,3
 4838              		.syntax unified
 4839              		.thumb
 4840              		.thumb_func
 4841              		.fpu fpv4-sp-d16
 4843              	UART_DMATxOnlyAbortCallback:
 4844              	.LFB179:
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4845              		.loc 1 2845 0
 4846              		.cfi_startproc
 4847              		@ args = 0, pretend = 0, frame = 0
 4848              		@ frame_needed = 0, uses_anonymous_args = 0
 4849              	.LVL367:
 4850 0000 08B5     		push	{r3, lr}
 4851              	.LCFI67:
 4852              		.cfi_def_cfa_offset 8
 4853              		.cfi_offset 3, -8
 4854              		.cfi_offset 14, -4
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4855              		.loc 1 2846 0
 4856 0002 836B     		ldr	r3, [r0, #56]
 4857              	.LVL368:
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4858              		.loc 1 2848 0
 4859 0004 0021     		movs	r1, #0
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4860              		.loc 1 2851 0
 4861 0006 2022     		movs	r2, #32
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4862              		.loc 1 2848 0
 4863 0008 D984     		strh	r1, [r3, #38]	@ movhi
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4864              		.loc 1 2859 0
 4865 000a 1846     		mov	r0, r3
 4866              	.LVL369:
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4867              		.loc 1 2851 0
 4868 000c 83F83920 		strb	r2, [r3, #57]
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4869              		.loc 1 2859 0
 4870 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4871              	.LVL370:
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4872              		.loc 1 2861 0
 4873 0014 08BD     		pop	{r3, pc}
 4874              		.cfi_endproc
 4875              	.LFE179:
ARM GAS  /tmp/cc4hqLkf.s 			page 155


 4877 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4878              		.align	1
 4879              		.p2align 2,,3
 4880              		.weak	HAL_UART_AbortReceiveCpltCallback
 4881              		.syntax unified
 4882              		.thumb
 4883              		.thumb_func
 4884              		.fpu fpv4-sp-d16
 4886              	HAL_UART_AbortReceiveCpltCallback:
 4887              	.LFB204:
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 0
 4890              		@ frame_needed = 0, uses_anonymous_args = 0
 4891              		@ link register save eliminated.
 4892 0000 7047     		bx	lr
 4893              		.cfi_endproc
 4894              	.LFE204:
 4896 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4897              		.align	1
 4898              		.p2align 2,,3
 4899              		.global	HAL_UART_AbortReceive_IT
 4900              		.syntax unified
 4901              		.thumb
 4902              		.thumb_func
 4903              		.fpu fpv4-sp-d16
 4905              	HAL_UART_AbortReceive_IT:
 4906              	.LFB151:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4907              		.loc 1 1929 0
 4908              		.cfi_startproc
 4909              		@ args = 0, pretend = 0, frame = 0
 4910              		@ frame_needed = 0, uses_anonymous_args = 0
 4911              	.LVL371:
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4912              		.loc 1 1931 0
 4913 0000 0368     		ldr	r3, [r0]
 4914 0002 DA68     		ldr	r2, [r3, #12]
 4915 0004 22F49072 		bic	r2, r2, #288
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4916              		.loc 1 1929 0
 4917 0008 10B5     		push	{r4, lr}
 4918              	.LCFI68:
 4919              		.cfi_def_cfa_offset 8
 4920              		.cfi_offset 4, -8
 4921              		.cfi_offset 14, -4
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4922              		.loc 1 1931 0
 4923 000a DA60     		str	r2, [r3, #12]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4924              		.loc 1 1932 0
 4925 000c 5A69     		ldr	r2, [r3, #20]
 4926 000e 22F00102 		bic	r2, r2, #1
 4927 0012 5A61     		str	r2, [r3, #20]
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4928              		.loc 1 1935 0
 4929 0014 5A69     		ldr	r2, [r3, #20]
 4930 0016 12F04002 		ands	r2, r2, #64
ARM GAS  /tmp/cc4hqLkf.s 			page 156


1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4931              		.loc 1 1929 0
 4932 001a 0446     		mov	r4, r0
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4933              		.loc 1 1935 0
 4934 001c 10D0     		beq	.L516
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4935              		.loc 1 1937 0
 4936 001e 5A69     		ldr	r2, [r3, #20]
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4937              		.loc 1 1940 0
 4938 0020 416B     		ldr	r1, [r0, #52]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4939              		.loc 1 1937 0
 4940 0022 22F04002 		bic	r2, r2, #64
 4941 0026 5A61     		str	r2, [r3, #20]
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4942              		.loc 1 1940 0
 4943 0028 91B1     		cbz	r1, .L517
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4944              		.loc 1 1944 0
 4945 002a 0D4B     		ldr	r3, .L523
 4946 002c 0B65     		str	r3, [r1, #80]
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4947              		.loc 1 1947 0
 4948 002e 0846     		mov	r0, r1
 4949              	.LVL372:
 4950 0030 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4951              	.LVL373:
 4952 0034 10B1     		cbz	r0, .L518
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4953              		.loc 1 1950 0
 4954 0036 606B     		ldr	r0, [r4, #52]
 4955 0038 036D     		ldr	r3, [r0, #80]
 4956 003a 9847     		blx	r3
 4957              	.LVL374:
 4958              	.L518:
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4959              		.loc 1 1990 0
 4960 003c 0020     		movs	r0, #0
 4961 003e 10BD     		pop	{r4, pc}
 4962              	.LVL375:
 4963              	.L516:
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4964              		.loc 1 1977 0
 4965 0040 2023     		movs	r3, #32
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4966              		.loc 1 1974 0
 4967 0042 C285     		strh	r2, [r0, #46]	@ movhi
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4968              		.loc 1 1977 0
 4969 0044 80F83A30 		strb	r3, [r0, #58]
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4970              		.loc 1 1985 0
 4971 0048 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4972              	.LVL376:
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 157


 4973              		.loc 1 1990 0
 4974 004c 0020     		movs	r0, #0
 4975 004e 10BD     		pop	{r4, pc}
 4976              	.LVL377:
 4977              	.L517:
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4978              		.loc 1 1959 0
 4979 0050 2023     		movs	r3, #32
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4980              		.loc 1 1956 0
 4981 0052 C185     		strh	r1, [r0, #46]	@ movhi
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4982              		.loc 1 1959 0
 4983 0054 80F83A30 		strb	r3, [r0, #58]
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4984              		.loc 1 1967 0
 4985 0058 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4986              	.LVL378:
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4987              		.loc 1 1990 0
 4988 005c 0020     		movs	r0, #0
 4989 005e 10BD     		pop	{r4, pc}
 4990              	.LVL379:
 4991              	.L524:
 4992              		.align	2
 4993              	.L523:
 4994 0060 00000000 		.word	UART_DMARxOnlyAbortCallback
 4995              		.cfi_endproc
 4996              	.LFE151:
 4998              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4999              		.align	1
 5000              		.p2align 2,,3
 5001              		.syntax unified
 5002              		.thumb
 5003              		.thumb_func
 5004              		.fpu fpv4-sp-d16
 5006              	UART_DMARxOnlyAbortCallback:
 5007              	.LFB180:
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5008              		.loc 1 2873 0
 5009              		.cfi_startproc
 5010              		@ args = 0, pretend = 0, frame = 0
 5011              		@ frame_needed = 0, uses_anonymous_args = 0
 5012              	.LVL380:
 5013 0000 08B5     		push	{r3, lr}
 5014              	.LCFI69:
 5015              		.cfi_def_cfa_offset 8
 5016              		.cfi_offset 3, -8
 5017              		.cfi_offset 14, -4
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5018              		.loc 1 2874 0
 5019 0002 836B     		ldr	r3, [r0, #56]
 5020              	.LVL381:
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5021              		.loc 1 2876 0
 5022 0004 0021     		movs	r1, #0
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 158


 5023              		.loc 1 2879 0
 5024 0006 2022     		movs	r2, #32
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5025              		.loc 1 2876 0
 5026 0008 D985     		strh	r1, [r3, #46]	@ movhi
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5027              		.loc 1 2887 0
 5028 000a 1846     		mov	r0, r3
 5029              	.LVL382:
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5030              		.loc 1 2879 0
 5031 000c 83F83A20 		strb	r2, [r3, #58]
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5032              		.loc 1 2887 0
 5033 0010 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5034              	.LVL383:
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5035              		.loc 1 2889 0
 5036 0014 08BD     		pop	{r3, pc}
 5037              		.cfi_endproc
 5038              	.LFE180:
 5040 0016 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5041              		.align	1
 5042              		.p2align 2,,3
 5043              		.global	HAL_LIN_SendBreak
 5044              		.syntax unified
 5045              		.thumb
 5046              		.thumb_func
 5047              		.fpu fpv4-sp-d16
 5049              	HAL_LIN_SendBreak:
 5050              	.LFB161:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5051              		.loc 1 2288 0
 5052              		.cfi_startproc
 5053              		@ args = 0, pretend = 0, frame = 0
 5054              		@ frame_needed = 0, uses_anonymous_args = 0
 5055              		@ link register save eliminated.
 5056              	.LVL384:
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5057              		.loc 1 2293 0
 5058 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 5059 0004 012A     		cmp	r2, #1
 5060 0006 13D0     		beq	.L529
 5061 0008 0346     		mov	r3, r0
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5062              		.loc 1 2295 0 discriminator 2
 5063 000a 2422     		movs	r2, #36
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5064              		.loc 1 2298 0 discriminator 2
 5065 000c 0068     		ldr	r0, [r0]
 5066              	.LVL385:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5067              		.loc 1 2288 0 discriminator 2
 5068 000e 10B4     		push	{r4}
 5069              	.LCFI70:
 5070              		.cfi_def_cfa_offset 4
 5071              		.cfi_offset 4, -4
ARM GAS  /tmp/cc4hqLkf.s 			page 159


2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5072              		.loc 1 2295 0 discriminator 2
 5073 0010 83F83920 		strb	r2, [r3, #57]
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5074              		.loc 1 2298 0 discriminator 2
 5075 0014 C268     		ldr	r2, [r0, #12]
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5076              		.loc 1 2300 0 discriminator 2
 5077 0016 2024     		movs	r4, #32
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5078              		.loc 1 2303 0 discriminator 2
 5079 0018 0021     		movs	r1, #0
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5080              		.loc 1 2298 0 discriminator 2
 5081 001a 42F00102 		orr	r2, r2, #1
 5082 001e C260     		str	r2, [r0, #12]
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5083              		.loc 1 2305 0 discriminator 2
 5084 0020 0846     		mov	r0, r1
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5085              		.loc 1 2300 0 discriminator 2
 5086 0022 83F83940 		strb	r4, [r3, #57]
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5087              		.loc 1 2303 0 discriminator 2
 5088 0026 83F83810 		strb	r1, [r3, #56]
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5089              		.loc 1 2306 0 discriminator 2
 5090 002a 5DF8044B 		ldr	r4, [sp], #4
 5091              	.LCFI71:
 5092              		.cfi_restore 4
 5093              		.cfi_def_cfa_offset 0
 5094 002e 7047     		bx	lr
 5095              	.LVL386:
 5096              	.L529:
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5097              		.loc 1 2293 0
 5098 0030 0220     		movs	r0, #2
 5099              	.LVL387:
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5100              		.loc 1 2306 0
 5101 0032 7047     		bx	lr
 5102              		.cfi_endproc
 5103              	.LFE161:
 5105              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5106              		.align	1
 5107              		.p2align 2,,3
 5108              		.global	HAL_MultiProcessor_EnterMuteMode
 5109              		.syntax unified
 5110              		.thumb
 5111              		.thumb_func
 5112              		.fpu fpv4-sp-d16
 5114              	HAL_MultiProcessor_EnterMuteMode:
 5115              	.LFB162:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5116              		.loc 1 2315 0
 5117              		.cfi_startproc
 5118              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4hqLkf.s 			page 160


 5119              		@ frame_needed = 0, uses_anonymous_args = 0
 5120              		@ link register save eliminated.
 5121              	.LVL388:
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5122              		.loc 1 2320 0
 5123 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 5124 0004 012A     		cmp	r2, #1
 5125 0006 13D0     		beq	.L536
 5126 0008 0346     		mov	r3, r0
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5127              		.loc 1 2322 0 discriminator 2
 5128 000a 2422     		movs	r2, #36
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5129              		.loc 1 2325 0 discriminator 2
 5130 000c 0068     		ldr	r0, [r0]
 5131              	.LVL389:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5132              		.loc 1 2315 0 discriminator 2
 5133 000e 10B4     		push	{r4}
 5134              	.LCFI72:
 5135              		.cfi_def_cfa_offset 4
 5136              		.cfi_offset 4, -4
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5137              		.loc 1 2322 0 discriminator 2
 5138 0010 83F83920 		strb	r2, [r3, #57]
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5139              		.loc 1 2325 0 discriminator 2
 5140 0014 C268     		ldr	r2, [r0, #12]
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5141              		.loc 1 2327 0 discriminator 2
 5142 0016 2024     		movs	r4, #32
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5143              		.loc 1 2330 0 discriminator 2
 5144 0018 0021     		movs	r1, #0
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5145              		.loc 1 2325 0 discriminator 2
 5146 001a 42F00202 		orr	r2, r2, #2
 5147 001e C260     		str	r2, [r0, #12]
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5148              		.loc 1 2332 0 discriminator 2
 5149 0020 0846     		mov	r0, r1
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5150              		.loc 1 2327 0 discriminator 2
 5151 0022 83F83940 		strb	r4, [r3, #57]
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5152              		.loc 1 2330 0 discriminator 2
 5153 0026 83F83810 		strb	r1, [r3, #56]
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5154              		.loc 1 2333 0 discriminator 2
 5155 002a 5DF8044B 		ldr	r4, [sp], #4
 5156              	.LCFI73:
 5157              		.cfi_restore 4
 5158              		.cfi_def_cfa_offset 0
 5159 002e 7047     		bx	lr
 5160              	.LVL390:
 5161              	.L536:
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 161


 5162              		.loc 1 2320 0
 5163 0030 0220     		movs	r0, #2
 5164              	.LVL391:
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5165              		.loc 1 2333 0
 5166 0032 7047     		bx	lr
 5167              		.cfi_endproc
 5168              	.LFE162:
 5170              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 5171              		.align	1
 5172              		.p2align 2,,3
 5173              		.global	HAL_MultiProcessor_ExitMuteMode
 5174              		.syntax unified
 5175              		.thumb
 5176              		.thumb_func
 5177              		.fpu fpv4-sp-d16
 5179              	HAL_MultiProcessor_ExitMuteMode:
 5180              	.LFB163:
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5181              		.loc 1 2342 0
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 0
 5184              		@ frame_needed = 0, uses_anonymous_args = 0
 5185              		@ link register save eliminated.
 5186              	.LVL392:
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5187              		.loc 1 2347 0
 5188 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 5189 0004 012A     		cmp	r2, #1
 5190 0006 13D0     		beq	.L543
 5191 0008 0346     		mov	r3, r0
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5192              		.loc 1 2349 0 discriminator 2
 5193 000a 2422     		movs	r2, #36
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5194              		.loc 1 2352 0 discriminator 2
 5195 000c 0068     		ldr	r0, [r0]
 5196              	.LVL393:
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5197              		.loc 1 2342 0 discriminator 2
 5198 000e 10B4     		push	{r4}
 5199              	.LCFI74:
 5200              		.cfi_def_cfa_offset 4
 5201              		.cfi_offset 4, -4
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5202              		.loc 1 2349 0 discriminator 2
 5203 0010 83F83920 		strb	r2, [r3, #57]
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5204              		.loc 1 2352 0 discriminator 2
 5205 0014 C268     		ldr	r2, [r0, #12]
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5206              		.loc 1 2354 0 discriminator 2
 5207 0016 2024     		movs	r4, #32
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5208              		.loc 1 2357 0 discriminator 2
 5209 0018 0021     		movs	r1, #0
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 162


 5210              		.loc 1 2352 0 discriminator 2
 5211 001a 22F00202 		bic	r2, r2, #2
 5212 001e C260     		str	r2, [r0, #12]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5213              		.loc 1 2359 0 discriminator 2
 5214 0020 0846     		mov	r0, r1
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5215              		.loc 1 2354 0 discriminator 2
 5216 0022 83F83940 		strb	r4, [r3, #57]
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5217              		.loc 1 2357 0 discriminator 2
 5218 0026 83F83810 		strb	r1, [r3, #56]
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5219              		.loc 1 2360 0 discriminator 2
 5220 002a 5DF8044B 		ldr	r4, [sp], #4
 5221              	.LCFI75:
 5222              		.cfi_restore 4
 5223              		.cfi_def_cfa_offset 0
 5224 002e 7047     		bx	lr
 5225              	.LVL394:
 5226              	.L543:
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5227              		.loc 1 2347 0
 5228 0030 0220     		movs	r0, #2
 5229              	.LVL395:
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5230              		.loc 1 2360 0
 5231 0032 7047     		bx	lr
 5232              		.cfi_endproc
 5233              	.LFE163:
 5235              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5236              		.align	1
 5237              		.p2align 2,,3
 5238              		.global	HAL_HalfDuplex_EnableTransmitter
 5239              		.syntax unified
 5240              		.thumb
 5241              		.thumb_func
 5242              		.fpu fpv4-sp-d16
 5244              	HAL_HalfDuplex_EnableTransmitter:
 5245              	.LFB164:
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5246              		.loc 1 2369 0
 5247              		.cfi_startproc
 5248              		@ args = 0, pretend = 0, frame = 0
 5249              		@ frame_needed = 0, uses_anonymous_args = 0
 5250              		@ link register save eliminated.
 5251              	.LVL396:
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5252              		.loc 1 2373 0
 5253 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 5254 0004 012A     		cmp	r2, #1
 5255 0006 15D0     		beq	.L550
 5256 0008 0346     		mov	r3, r0
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5257              		.loc 1 2375 0 discriminator 2
 5258 000a 2422     		movs	r2, #36
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 163


 5259              		.loc 1 2378 0 discriminator 2
 5260 000c 0068     		ldr	r0, [r0]
 5261              	.LVL397:
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5262              		.loc 1 2369 0 discriminator 2
 5263 000e 10B4     		push	{r4}
 5264              	.LCFI76:
 5265              		.cfi_def_cfa_offset 4
 5266              		.cfi_offset 4, -4
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5267              		.loc 1 2375 0 discriminator 2
 5268 0010 83F83920 		strb	r2, [r3, #57]
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5269              		.loc 1 2378 0 discriminator 2
 5270 0014 C268     		ldr	r2, [r0, #12]
 5271              	.LVL398:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5272              		.loc 1 2381 0 discriminator 2
 5273 0016 22F00C02 		bic	r2, r2, #12
 5274              	.LVL399:
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5275              		.loc 1 2389 0 discriminator 2
 5276 001a 2024     		movs	r4, #32
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5277              		.loc 1 2392 0 discriminator 2
 5278 001c 0021     		movs	r1, #0
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5279              		.loc 1 2384 0 discriminator 2
 5280 001e 42F00802 		orr	r2, r2, #8
 5281              	.LVL400:
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5282              		.loc 1 2387 0 discriminator 2
 5283 0022 C260     		str	r2, [r0, #12]
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5284              		.loc 1 2394 0 discriminator 2
 5285 0024 0846     		mov	r0, r1
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5286              		.loc 1 2389 0 discriminator 2
 5287 0026 83F83940 		strb	r4, [r3, #57]
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5288              		.loc 1 2392 0 discriminator 2
 5289 002a 83F83810 		strb	r1, [r3, #56]
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5290              		.loc 1 2395 0 discriminator 2
 5291 002e 5DF8044B 		ldr	r4, [sp], #4
 5292              	.LCFI77:
 5293              		.cfi_restore 4
 5294              		.cfi_def_cfa_offset 0
 5295 0032 7047     		bx	lr
 5296              	.LVL401:
 5297              	.L550:
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5298              		.loc 1 2373 0
 5299 0034 0220     		movs	r0, #2
 5300              	.LVL402:
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5301              		.loc 1 2395 0
ARM GAS  /tmp/cc4hqLkf.s 			page 164


 5302 0036 7047     		bx	lr
 5303              		.cfi_endproc
 5304              	.LFE164:
 5306              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5307              		.align	1
 5308              		.p2align 2,,3
 5309              		.global	HAL_HalfDuplex_EnableReceiver
 5310              		.syntax unified
 5311              		.thumb
 5312              		.thumb_func
 5313              		.fpu fpv4-sp-d16
 5315              	HAL_HalfDuplex_EnableReceiver:
 5316              	.LFB165:
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5317              		.loc 1 2404 0
 5318              		.cfi_startproc
 5319              		@ args = 0, pretend = 0, frame = 0
 5320              		@ frame_needed = 0, uses_anonymous_args = 0
 5321              		@ link register save eliminated.
 5322              	.LVL403:
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5323              		.loc 1 2408 0
 5324 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 5325 0004 012A     		cmp	r2, #1
 5326 0006 15D0     		beq	.L557
 5327 0008 0346     		mov	r3, r0
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5328              		.loc 1 2410 0 discriminator 2
 5329 000a 2422     		movs	r2, #36
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5330              		.loc 1 2413 0 discriminator 2
 5331 000c 0068     		ldr	r0, [r0]
 5332              	.LVL404:
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5333              		.loc 1 2404 0 discriminator 2
 5334 000e 10B4     		push	{r4}
 5335              	.LCFI78:
 5336              		.cfi_def_cfa_offset 4
 5337              		.cfi_offset 4, -4
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5338              		.loc 1 2410 0 discriminator 2
 5339 0010 83F83920 		strb	r2, [r3, #57]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5340              		.loc 1 2413 0 discriminator 2
 5341 0014 C268     		ldr	r2, [r0, #12]
 5342              	.LVL405:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5343              		.loc 1 2416 0 discriminator 2
 5344 0016 22F00C02 		bic	r2, r2, #12
 5345              	.LVL406:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5346              		.loc 1 2424 0 discriminator 2
 5347 001a 2024     		movs	r4, #32
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5348              		.loc 1 2427 0 discriminator 2
 5349 001c 0021     		movs	r1, #0
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cc4hqLkf.s 			page 165


 5350              		.loc 1 2419 0 discriminator 2
 5351 001e 42F00402 		orr	r2, r2, #4
 5352              	.LVL407:
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5353              		.loc 1 2422 0 discriminator 2
 5354 0022 C260     		str	r2, [r0, #12]
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5355              		.loc 1 2429 0 discriminator 2
 5356 0024 0846     		mov	r0, r1
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5357              		.loc 1 2424 0 discriminator 2
 5358 0026 83F83940 		strb	r4, [r3, #57]
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5359              		.loc 1 2427 0 discriminator 2
 5360 002a 83F83810 		strb	r1, [r3, #56]
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5361              		.loc 1 2430 0 discriminator 2
 5362 002e 5DF8044B 		ldr	r4, [sp], #4
 5363              	.LCFI79:
 5364              		.cfi_restore 4
 5365              		.cfi_def_cfa_offset 0
 5366 0032 7047     		bx	lr
 5367              	.LVL408:
 5368              	.L557:
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5369              		.loc 1 2408 0
 5370 0034 0220     		movs	r0, #2
 5371              	.LVL409:
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5372              		.loc 1 2430 0
 5373 0036 7047     		bx	lr
 5374              		.cfi_endproc
 5375              	.LFE165:
 5377              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5378              		.align	1
 5379              		.p2align 2,,3
 5380              		.global	HAL_UART_GetState
 5381              		.syntax unified
 5382              		.thumb
 5383              		.thumb_func
 5384              		.fpu fpv4-sp-d16
 5386              	HAL_UART_GetState:
 5387              	.LFB166:
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 5388              		.loc 1 2461 0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
 5392              		@ link register save eliminated.
 5393              	.LVL410:
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 5394              		.loc 1 2463 0
 5395 0000 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 5396              	.LVL411:
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5397              		.loc 1 2464 0
 5398 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
ARM GAS  /tmp/cc4hqLkf.s 			page 166


 5399              	.LVL412:
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5400              		.loc 1 2467 0
 5401 0008 1043     		orrs	r0, r0, r2
 5402              	.LVL413:
 5403 000a 7047     		bx	lr
 5404              		.cfi_endproc
 5405              	.LFE166:
 5407              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5408              		.align	1
 5409              		.p2align 2,,3
 5410              		.global	HAL_UART_GetError
 5411              		.syntax unified
 5412              		.thumb
 5413              		.thumb_func
 5414              		.fpu fpv4-sp-d16
 5416              	HAL_UART_GetError:
 5417              	.LFB167:
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 5418              		.loc 1 2476 0
 5419              		.cfi_startproc
 5420              		@ args = 0, pretend = 0, frame = 0
 5421              		@ frame_needed = 0, uses_anonymous_args = 0
 5422              		@ link register save eliminated.
 5423              	.LVL414:
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5424              		.loc 1 2477 0
 5425 0000 C06B     		ldr	r0, [r0, #60]
 5426              	.LVL415:
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5427              		.loc 1 2478 0
 5428 0002 7047     		bx	lr
 5429              		.cfi_endproc
 5430              	.LFE167:
 5432              		.text
 5433              	.Letext0:
 5434              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5435              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5436              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5437              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 5438              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 5439              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 5440              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 5441              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 5442              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 5443              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 5444              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  /tmp/cc4hqLkf.s 			page 167


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/cc4hqLkf.s:18     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc4hqLkf.s:26     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc4hqLkf.s:41     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc4hqLkf.s:49     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc4hqLkf.s:446    .text.HAL_UART_Init:000000000000030c $d
     /tmp/cc4hqLkf.s:454    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc4hqLkf.s:462    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc4hqLkf.s:863    .text.HAL_HalfDuplex_Init:0000000000000314 $d
     /tmp/cc4hqLkf.s:871    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc4hqLkf.s:879    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc4hqLkf.s:1291   .text.HAL_LIN_Init:000000000000032c $d
     /tmp/cc4hqLkf.s:1299   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc4hqLkf.s:1307   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc4hqLkf.s:1728   .text.HAL_MultiProcessor_Init:000000000000033c $d
     /tmp/cc4hqLkf.s:1736   .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc4hqLkf.s:1744   .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc4hqLkf.s:1755   .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc4hqLkf.s:1763   .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc4hqLkf.s:1820   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc4hqLkf.s:1828   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc4hqLkf.s:2108   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc4hqLkf.s:2116   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc4hqLkf.s:2423   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc4hqLkf.s:2431   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc4hqLkf.s:2508   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc4hqLkf.s:2516   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc4hqLkf.s:2603   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc4hqLkf.s:2611   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc4hqLkf.s:2734   .text.HAL_UART_Transmit_DMA:000000000000006c $d
     /tmp/cc4hqLkf.s:3559   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc4hqLkf.s:3631   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc4hqLkf.s:3908   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc4hqLkf.s:2741   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc4hqLkf.s:2749   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc4hqLkf.s:2891   .text.HAL_UART_Receive_DMA:000000000000008c $d
     /tmp/cc4hqLkf.s:3681   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc4hqLkf.s:3858   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc4hqLkf.s:2898   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc4hqLkf.s:2906   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc4hqLkf.s:3012   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc4hqLkf.s:3020   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc4hqLkf.s:3111   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc4hqLkf.s:3119   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc4hqLkf.s:3241   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc4hqLkf.s:3249   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc4hqLkf.s:3367   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc4hqLkf.s:3375   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc4hqLkf.s:3448   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc4hqLkf.s:3456   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc4hqLkf.s:3533   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:3541   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc4hqLkf.s:3552   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc4hqLkf.s:3605   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:3613   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc4hqLkf.s:3624   .text.UART_DMATxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/cc4hqLkf.s 			page 168


     /tmp/cc4hqLkf.s:3655   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:3663   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc4hqLkf.s:3674   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc4hqLkf.s:3734   .text.UART_Receive_IT.part.1:0000000000000000 $t
     /tmp/cc4hqLkf.s:3741   .text.UART_Receive_IT.part.1:0000000000000000 UART_Receive_IT.part.1
     /tmp/cc4hqLkf.s:3832   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:3840   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc4hqLkf.s:3851   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc4hqLkf.s:3882   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:3890   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc4hqLkf.s:3901   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc4hqLkf.s:4008   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc4hqLkf.s:4016   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc4hqLkf.s:4376   .text.HAL_UART_IRQHandler:000000000000017c $d
     /tmp/cc4hqLkf.s:4390   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc4hqLkf.s:4383   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc4hqLkf.s:4422   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4430   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc4hqLkf.s:4441   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc4hqLkf.s:4449   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc4hqLkf.s:4589   .text.HAL_UART_Abort_IT:00000000000000a8 $d
     /tmp/cc4hqLkf.s:4664   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc4hqLkf.s:4602   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc4hqLkf.s:4595   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4657   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4719   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4727   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc4hqLkf.s:4738   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc4hqLkf.s:4746   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc4hqLkf.s:4831   .text.HAL_UART_AbortTransmit_IT:0000000000000058 $d
     /tmp/cc4hqLkf.s:4843   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc4hqLkf.s:4836   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4878   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:4886   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc4hqLkf.s:4897   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc4hqLkf.s:4905   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc4hqLkf.s:4994   .text.HAL_UART_AbortReceive_IT:0000000000000060 $d
     /tmp/cc4hqLkf.s:5006   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc4hqLkf.s:4999   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc4hqLkf.s:5041   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc4hqLkf.s:5049   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc4hqLkf.s:5106   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc4hqLkf.s:5114   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc4hqLkf.s:5171   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/cc4hqLkf.s:5179   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/cc4hqLkf.s:5236   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc4hqLkf.s:5244   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc4hqLkf.s:5307   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc4hqLkf.s:5315   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc4hqLkf.s:5378   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc4hqLkf.s:5386   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc4hqLkf.s:5408   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc4hqLkf.s:5416   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/cc4hqLkf.s 			page 169


HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
