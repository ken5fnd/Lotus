ARM GAS  /tmp/ccnUCyzj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_USART1_UART_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** 
  29:Src/usart.c   **** /* USART1 init function */
  30:Src/usart.c   **** 
ARM GAS  /tmp/ccnUCyzj.s 			page 2


  31:Src/usart.c   **** void MX_USART1_UART_Init(void)
  32:Src/usart.c   **** {
  29              		.loc 1 32 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33:Src/usart.c   **** 
  34:Src/usart.c   ****   huart1.Instance = USART1;
  33              		.loc 1 34 0
  34 0000 0B4B     		ldr	r3, .L6
  35 0002 0C4A     		ldr	r2, .L6+4
  32:Src/usart.c   **** 
  36              		.loc 1 32 0
  37 0004 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  35:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  36:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  37:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  38:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  39:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  42              		.loc 1 39 0
  43 0006 0C21     		movs	r1, #12
  34:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  44              		.loc 1 34 0
  45 0008 1A60     		str	r2, [r3]
  35:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  46              		.loc 1 35 0
  47 000a 4FF4E134 		mov	r4, #115200
  36:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  48              		.loc 1 36 0
  49 000e 0022     		movs	r2, #0
  40:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  41:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  42:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  50              		.loc 1 42 0
  51 0010 1846     		mov	r0, r3
  35:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  52              		.loc 1 35 0
  53 0012 5C60     		str	r4, [r3, #4]
  39:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54              		.loc 1 39 0
  55 0014 5961     		str	r1, [r3, #20]
  37:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  56              		.loc 1 37 0
  57 0016 C3E90222 		strd	r2, r2, [r3, #8]
  38:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  58              		.loc 1 38 0
  59 001a 1A61     		str	r2, [r3, #16]
  41:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  60              		.loc 1 41 0
  61 001c C3E90622 		strd	r2, r2, [r3, #24]
  62              		.loc 1 42 0
  63 0020 FFF7FEFF 		bl	HAL_UART_Init
  64              	.LVL0:
ARM GAS  /tmp/ccnUCyzj.s 			page 3


  65 0024 00B9     		cbnz	r0, .L5
  43:Src/usart.c   ****   {
  44:Src/usart.c   ****     Error_Handler();
  45:Src/usart.c   ****   }
  46:Src/usart.c   **** 
  47:Src/usart.c   **** }
  66              		.loc 1 47 0
  67 0026 10BD     		pop	{r4, pc}
  68              	.L5:
  69 0028 BDE81040 		pop	{r4, lr}
  70              	.LCFI1:
  71              		.cfi_restore 14
  72              		.cfi_restore 4
  73              		.cfi_def_cfa_offset 0
  44:Src/usart.c   ****   }
  74              		.loc 1 44 0
  75 002c FFF7FEBF 		b	Error_Handler
  76              	.LVL1:
  77              	.L7:
  78              		.align	2
  79              	.L6:
  80 0030 00000000 		.word	huart1
  81 0034 00100140 		.word	1073811456
  82              		.cfi_endproc
  83              	.LFE130:
  85              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	HAL_UART_MspInit
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	HAL_UART_MspInit:
  95              	.LFB131:
  48:Src/usart.c   **** 
  49:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  50:Src/usart.c   **** {
  96              		.loc 1 50 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 32
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL2:
 101 0000 70B5     		push	{r4, r5, r6, lr}
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 4, -16
 105              		.cfi_offset 5, -12
 106              		.cfi_offset 6, -8
 107              		.cfi_offset 14, -4
  51:Src/usart.c   **** 
  52:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  53:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 108              		.loc 1 53 0
 109 0002 0168     		ldr	r1, [r0]
 110 0004 194A     		ldr	r2, .L12
  50:Src/usart.c   **** 
ARM GAS  /tmp/ccnUCyzj.s 			page 4


 111              		.loc 1 50 0
 112 0006 88B0     		sub	sp, sp, #32
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 48
  52:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 115              		.loc 1 52 0
 116 0008 0023     		movs	r3, #0
 117              		.loc 1 53 0
 118 000a 9142     		cmp	r1, r2
  52:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 119              		.loc 1 52 0
 120 000c CDE90333 		strd	r3, r3, [sp, #12]
 121 0010 CDE90533 		strd	r3, r3, [sp, #20]
 122 0014 0793     		str	r3, [sp, #28]
 123              		.loc 1 53 0
 124 0016 01D0     		beq	.L11
  54:Src/usart.c   ****   {
  55:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  58:Src/usart.c   ****     /* USART1 clock enable */
  59:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
  60:Src/usart.c   ****   
  61:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  62:Src/usart.c   ****     /**USART1 GPIO Configuration    
  63:Src/usart.c   ****     PA9     ------> USART1_TX
  64:Src/usart.c   ****     PA10     ------> USART1_RX 
  65:Src/usart.c   ****     */
  66:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  67:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  68:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  69:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  70:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  71:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  72:Src/usart.c   **** 
  73:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  74:Src/usart.c   **** 
  75:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
  76:Src/usart.c   ****   }
  77:Src/usart.c   **** }
 125              		.loc 1 77 0
 126 0018 08B0     		add	sp, sp, #32
 127              	.LCFI4:
 128              		.cfi_remember_state
 129              		.cfi_def_cfa_offset 16
 130              		@ sp needed
 131 001a 70BD     		pop	{r4, r5, r6, pc}
 132              	.L11:
 133              	.LCFI5:
 134              		.cfi_restore_state
 135              	.LBB2:
  59:Src/usart.c   ****   
 136              		.loc 1 59 0
 137 001c 02F59432 		add	r2, r2, #75776
 138 0020 0193     		str	r3, [sp, #4]
 139 0022 516C     		ldr	r1, [r2, #68]
 140              	.LBE2:
ARM GAS  /tmp/ccnUCyzj.s 			page 5


  71:Src/usart.c   **** 
 141              		.loc 1 71 0
 142 0024 1248     		ldr	r0, .L12+4
 143              	.LVL3:
 144              	.LBB3:
  59:Src/usart.c   ****   
 145              		.loc 1 59 0
 146 0026 41F01001 		orr	r1, r1, #16
 147 002a 5164     		str	r1, [r2, #68]
 148 002c 516C     		ldr	r1, [r2, #68]
 149 002e 01F01001 		and	r1, r1, #16
 150 0032 0191     		str	r1, [sp, #4]
 151 0034 0199     		ldr	r1, [sp, #4]
 152              	.LBE3:
 153              	.LBB4:
  61:Src/usart.c   ****     /**USART1 GPIO Configuration    
 154              		.loc 1 61 0
 155 0036 0293     		str	r3, [sp, #8]
 156 0038 136B     		ldr	r3, [r2, #48]
 157 003a 43F00103 		orr	r3, r3, #1
 158 003e 1363     		str	r3, [r2, #48]
 159 0040 136B     		ldr	r3, [r2, #48]
 160 0042 03F00103 		and	r3, r3, #1
 161 0046 0293     		str	r3, [sp, #8]
 162              	.LBE4:
  66:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 66 0
 164 0048 4FF4C063 		mov	r3, #1536
  69:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 165              		.loc 1 69 0
 166 004c 0322     		movs	r2, #3
  66:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 167              		.loc 1 66 0
 168 004e 0393     		str	r3, [sp, #12]
  71:Src/usart.c   **** 
 169              		.loc 1 71 0
 170 0050 03A9     		add	r1, sp, #12
  70:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 171              		.loc 1 70 0
 172 0052 0723     		movs	r3, #7
  67:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 173              		.loc 1 67 0
 174 0054 0225     		movs	r5, #2
  68:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 175              		.loc 1 68 0
 176 0056 0124     		movs	r4, #1
 177              	.LBB5:
  61:Src/usart.c   ****     /**USART1 GPIO Configuration    
 178              		.loc 1 61 0
 179 0058 029E     		ldr	r6, [sp, #8]
 180              	.LBE5:
  68:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 181              		.loc 1 68 0
 182 005a CDE90454 		strd	r5, r4, [sp, #16]
  70:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 183              		.loc 1 70 0
 184 005e CDE90623 		strd	r2, r3, [sp, #24]
ARM GAS  /tmp/ccnUCyzj.s 			page 6


  71:Src/usart.c   **** 
 185              		.loc 1 71 0
 186 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL4:
 188              		.loc 1 77 0
 189 0066 08B0     		add	sp, sp, #32
 190              	.LCFI6:
 191              		.cfi_def_cfa_offset 16
 192              		@ sp needed
 193 0068 70BD     		pop	{r4, r5, r6, pc}
 194              	.L13:
 195 006a 00BF     		.align	2
 196              	.L12:
 197 006c 00100140 		.word	1073811456
 198 0070 00000240 		.word	1073872896
 199              		.cfi_endproc
 200              	.LFE131:
 202              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 203              		.align	1
 204              		.p2align 2,,3
 205              		.global	HAL_UART_MspDeInit
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	HAL_UART_MspDeInit:
 212              	.LFB132:
  78:Src/usart.c   **** 
  79:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  80:Src/usart.c   **** {
 213              		.loc 1 80 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL5:
  81:Src/usart.c   **** 
  82:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 219              		.loc 1 82 0
 220 0000 0268     		ldr	r2, [r0]
 221 0002 074B     		ldr	r3, .L17
 222 0004 9A42     		cmp	r2, r3
 223 0006 00D0     		beq	.L16
  83:Src/usart.c   ****   {
  84:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
  85:Src/usart.c   **** 
  86:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
  87:Src/usart.c   ****     /* Peripheral clock disable */
  88:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
  89:Src/usart.c   ****   
  90:Src/usart.c   ****     /**USART1 GPIO Configuration    
  91:Src/usart.c   ****     PA9     ------> USART1_TX
  92:Src/usart.c   ****     PA10     ------> USART1_RX 
  93:Src/usart.c   ****     */
  94:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
ARM GAS  /tmp/ccnUCyzj.s 			page 7


  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
  99:Src/usart.c   ****   }
 100:Src/usart.c   **** } 
 224              		.loc 1 100 0
 225 0008 7047     		bx	lr
 226              	.L16:
  88:Src/usart.c   ****   
 227              		.loc 1 88 0
 228 000a 064A     		ldr	r2, .L17+4
  94:Src/usart.c   **** 
 229              		.loc 1 94 0
 230 000c 0648     		ldr	r0, .L17+8
 231              	.LVL6:
  88:Src/usart.c   ****   
 232              		.loc 1 88 0
 233 000e 536C     		ldr	r3, [r2, #68]
 234 0010 23F01003 		bic	r3, r3, #16
 235 0014 5364     		str	r3, [r2, #68]
  94:Src/usart.c   **** 
 236              		.loc 1 94 0
 237 0016 4FF4C061 		mov	r1, #1536
 238 001a FFF7FEBF 		b	HAL_GPIO_DeInit
 239              	.LVL7:
 240              	.L18:
 241 001e 00BF     		.align	2
 242              	.L17:
 243 0020 00100140 		.word	1073811456
 244 0024 00380240 		.word	1073887232
 245 0028 00000240 		.word	1073872896
 246              		.cfi_endproc
 247              	.LFE132:
 249              		.comm	huart1,64,4
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 253              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 254              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 255              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 256              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 257              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 258              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 259              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 260              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 261              		.file 11 "Inc/usart.h"
 262              		.file 12 "Inc/main.h"
ARM GAS  /tmp/ccnUCyzj.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccnUCyzj.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccnUCyzj.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccnUCyzj.s:80     .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccnUCyzj.s:86     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccnUCyzj.s:94     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccnUCyzj.s:197    .text.HAL_UART_MspInit:000000000000006c $d
     /tmp/ccnUCyzj.s:203    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccnUCyzj.s:211    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccnUCyzj.s:243    .text.HAL_UART_MspDeInit:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
