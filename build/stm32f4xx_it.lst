ARM GAS  /tmp/ccD2V181.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****  ******************************************************************************
   4:Src/stm32f4xx_it.c ****  * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****  ******************************************************************************
   7:Src/stm32f4xx_it.c ****  * @attention
   8:Src/stm32f4xx_it.c ****  *
   9:Src/stm32f4xx_it.c ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****  * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****  *
  12:Src/stm32f4xx_it.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****  * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****  * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****  *
  17:Src/stm32f4xx_it.c ****  ******************************************************************************
  18:Src/stm32f4xx_it.c ****  */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "hardware/interrupt.h"
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  /tmp/ccD2V181.s 			page 2


  31:Src/stm32f4xx_it.c **** 
  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c **** 
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  61:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  62:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32f4xx_it.c ****   */
  72:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  73:Src/stm32f4xx_it.c **** {
  29              		.loc 1 73 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f4xx_it.c **** }
  34              		.loc 1 80 0
  35 0000 7047     		bx	lr
ARM GAS  /tmp/ccD2V181.s 			page 3


  36              		.cfi_endproc
  37              	.LFE130:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.p2align 2,,3
  42              		.global	HardFault_Handler
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	HardFault_Handler:
  49              	.LFB131:
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c **** /**
  83:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f4xx_it.c ****   */
  85:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f4xx_it.c **** {
  50              		.loc 1 86 0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  57 0000 FEE7     		b	.L4
  58              		.cfi_endproc
  59              	.LFE131:
  61 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.p2align 2,,3
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MemManage_Handler:
  71              	.LFB132:
  87:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f4xx_it.c ****   while (1)
  91:Src/stm32f4xx_it.c ****   {
  92:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   }
  95:Src/stm32f4xx_it.c **** }
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c **** /**
  98:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f4xx_it.c ****   */
 100:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f4xx_it.c **** {
  72              		.loc 1 101 0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccD2V181.s 			page 4


  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L6:
  79 0000 FEE7     		b	.L6
  80              		.cfi_endproc
  81              	.LFE132:
  83 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	BusFault_Handler
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	BusFault_Handler:
  93              	.LFB133:
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f4xx_it.c ****   while (1)
 106:Src/stm32f4xx_it.c ****   {
 107:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   }
 110:Src/stm32f4xx_it.c **** }
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Src/stm32f4xx_it.c ****   */
 115:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f4xx_it.c **** {
  94              		.loc 1 116 0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.L8:
 101 0000 FEE7     		b	.L8
 102              		.cfi_endproc
 103              	.LFE133:
 105 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 106              		.align	1
 107              		.p2align 2,,3
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	UsageFault_Handler:
 115              	.LFB134:
 117:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f4xx_it.c ****   while (1)
 121:Src/stm32f4xx_it.c ****   {
 122:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccD2V181.s 			page 5


 123:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   }
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f4xx_it.c ****   */
 130:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f4xx_it.c **** {
 116              		.loc 1 131 0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.L10:
 123 0000 FEE7     		b	.L10
 124              		.cfi_endproc
 125              	.LFE134:
 127 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 128              		.align	1
 129              		.p2align 2,,3
 130              		.global	SVC_Handler
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	SVC_Handler:
 137              	.LFB142:
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0000 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE142:
 146 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 147              		.align	1
 148              		.p2align 2,,3
 149              		.global	DebugMon_Handler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	DebugMon_Handler:
 156              	.LFB144:
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE144:
 165 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 166              		.align	1
 167              		.p2align 2,,3
 168              		.global	PendSV_Handler
ARM GAS  /tmp/ccD2V181.s 			page 6


 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	PendSV_Handler:
 175              	.LFB146:
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE146:
 184 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 185              		.align	1
 186              		.p2align 2,,3
 187              		.global	SysTick_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	SysTick_Handler:
 194              	.LFB138:
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   while (1)
 136:Src/stm32f4xx_it.c ****   {
 137:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   }
 140:Src/stm32f4xx_it.c **** }
 141:Src/stm32f4xx_it.c **** 
 142:Src/stm32f4xx_it.c **** /**
 143:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32f4xx_it.c ****   */
 145:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 146:Src/stm32f4xx_it.c **** {
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32f4xx_it.c **** }
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c **** /**
 156:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32f4xx_it.c ****   */
 158:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32f4xx_it.c **** {
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
ARM GAS  /tmp/ccD2V181.s 			page 7


 166:Src/stm32f4xx_it.c **** }
 167:Src/stm32f4xx_it.c **** 
 168:Src/stm32f4xx_it.c **** /**
 169:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Src/stm32f4xx_it.c ****   */
 171:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32f4xx_it.c **** {
 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32f4xx_it.c **** }
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c **** /**
 182:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32f4xx_it.c ****   */
 184:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32f4xx_it.c **** {
 195              		.loc 1 185 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 186:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32f4xx_it.c ****   HAL_IncTick();
 200              		.loc 1 189 0
 201 0000 FFF7FEBF 		b	HAL_IncTick
 202              	.LVL0:
 203              		.cfi_endproc
 204              	.LFE138:
 206              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 207              		.align	1
 208              		.p2align 2,,3
 209              		.global	TIM6_DAC_IRQHandler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	TIM6_DAC_IRQHandler:
 216              	.LFB139:
 190:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32f4xx_it.c **** 
 192:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Src/stm32f4xx_it.c **** }
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c **** /******************************************************************************/
 196:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 200:Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccD2V181.s 			page 8


 203:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 204:Src/stm32f4xx_it.c ****   */
 205:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 206:Src/stm32f4xx_it.c **** {
 217              		.loc 1 206 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI0:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 207:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 208:Src/stm32f4xx_it.c ****     interrupt_TIM6();
 226              		.loc 1 208 0
 227 0002 FFF7FEFF 		bl	interrupt_TIM6
 228              	.LVL1:
 209:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 210:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 229              		.loc 1 210 0
 230 0006 0248     		ldr	r0, .L17
 211:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 212:Src/stm32f4xx_it.c **** 
 213:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 214:Src/stm32f4xx_it.c **** }
 231              		.loc 1 214 0
 232 0008 BDE80840 		pop	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_restore 14
 235              		.cfi_restore 3
 236              		.cfi_def_cfa_offset 0
 210:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 237              		.loc 1 210 0
 238 000c FFF7FEBF 		b	HAL_TIM_IRQHandler
 239              	.LVL2:
 240              	.L18:
 241              		.align	2
 242              	.L17:
 243 0010 00000000 		.word	htim6
 244              		.cfi_endproc
 245              	.LFE139:
 247              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.p2align 2,,3
 250              		.global	DMA2_Stream0_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	DMA2_Stream0_IRQHandler:
 257              	.LFB140:
 215:Src/stm32f4xx_it.c **** 
 216:Src/stm32f4xx_it.c **** /**
 217:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 218:Src/stm32f4xx_it.c ****   */
 219:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
ARM GAS  /tmp/ccD2V181.s 			page 9


 220:Src/stm32f4xx_it.c **** {
 258              		.loc 1 220 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 221:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 224:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 263              		.loc 1 224 0
 264 0000 0148     		ldr	r0, .L20
 265 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 266              	.LVL3:
 267              	.L21:
 268 0006 00BF     		.align	2
 269              	.L20:
 270 0008 00000000 		.word	hdma_adc1
 271              		.cfi_endproc
 272              	.LFE140:
 274              		.text
 275              	.Letext0:
 276              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 277              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 278              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 279              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 280              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 281              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 282              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 283              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 284              		.file 10 "Inc/hardware/interrupt.h"
 285              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccD2V181.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccD2V181.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccD2V181.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccD2V181.s:62     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccD2V181.s:84     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:92     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccD2V181.s:106    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:114    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccD2V181.s:128    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:136    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccD2V181.s:147    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:155    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccD2V181.s:166    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:174    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccD2V181.s:185    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccD2V181.s:193    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccD2V181.s:207    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccD2V181.s:215    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccD2V181.s:243    .text.TIM6_DAC_IRQHandler:0000000000000010 $d
     /tmp/ccD2V181.s:248    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccD2V181.s:256    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccD2V181.s:270    .text.DMA2_Stream0_IRQHandler:0000000000000008 $d

UNDEFINED SYMBOLS
HAL_IncTick
interrupt_TIM6
HAL_TIM_IRQHandler
htim6
HAL_DMA_IRQHandler
hdma_adc1
