ARM GAS  /tmp/ccNVYCQk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.weak	HAL_ADC_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_ADC_MspInit:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
ARM GAS  /tmp/ccNVYCQk.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccNVYCQk.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
ARM GAS  /tmp/ccNVYCQk.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Callback registration ***
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      to register an interrupt callback.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and a pointer to the user callback function.
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      weak function.
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and the Callback ID.
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function allows to reset following callbacks:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
ARM GAS  /tmp/ccNVYCQk.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      are set to the corresponding weak functions.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
ARM GAS  /tmp/ccNVYCQk.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccNVYCQk.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
ARM GAS  /tmp/ccNVYCQk.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccNVYCQk.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (pCallback == NULL)
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccNVYCQk.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccNVYCQk.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
ARM GAS  /tmp/ccNVYCQk.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccNVYCQk.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  29              		.loc 1 666 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
  35              		.loc 1 672 0
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE132:
  40 0002 00BF     		.section	.text.HAL_ADC_Init,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	HAL_ADC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_ADC_Init:
  50              	.LFB130:
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  51              		.loc 1 313 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
  56              		.loc 1 317 0
  57 0000 0028     		cmp	r0, #0
  58 0002 00F09180 		beq	.L11
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  59              		.loc 1 313 0
  60 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 24
  63              		.cfi_offset 3, -24
  64              		.cfi_offset 4, -20
  65              		.cfi_offset 5, -16
  66              		.cfi_offset 6, -12
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccNVYCQk.s 			page 14


  69              		.loc 1 340 0
  70 0008 056C     		ldr	r5, [r0, #64]
  71 000a 0446     		mov	r4, r0
  72 000c 002D     		cmp	r5, #0
  73 000e 00F08180 		beq	.L17
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
  74              		.loc 1 370 0
  75 0012 236C     		ldr	r3, [r4, #64]
  76 0014 DB06     		lsls	r3, r3, #27
  77 0016 04D5     		bpl	.L18
  78              	.LVL2:
  79              	.L12:
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  80              		.loc 1 394 0
  81 0018 0023     		movs	r3, #0
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
  82              		.loc 1 390 0
  83 001a 0120     		movs	r0, #1
  84              	.LVL3:
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  85              		.loc 1 394 0
  86 001c 84F83C30 		strb	r3, [r4, #60]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87              		.loc 1 398 0
  88 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  89              	.LVL4:
  90              	.L18:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
  91              		.loc 1 373 0
  92 0022 226C     		ldr	r2, [r4, #64]
  93              	.LBB4:
  94              	.LBB5:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
ARM GAS  /tmp/ccNVYCQk.s 			page 15


 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/ccNVYCQk.s 			page 16


 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
ARM GAS  /tmp/ccNVYCQk.s 			page 17


 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
ARM GAS  /tmp/ccNVYCQk.s 			page 18


 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
ARM GAS  /tmp/ccNVYCQk.s 			page 19


 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
ARM GAS  /tmp/ccNVYCQk.s 			page 20


 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
ARM GAS  /tmp/ccNVYCQk.s 			page 21


1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
ARM GAS  /tmp/ccNVYCQk.s 			page 22


1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
ARM GAS  /tmp/ccNVYCQk.s 			page 23


1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
ARM GAS  /tmp/ccNVYCQk.s 			page 24


1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
ARM GAS  /tmp/ccNVYCQk.s 			page 25


1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
ARM GAS  /tmp/ccNVYCQk.s 			page 26


1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
ARM GAS  /tmp/ccNVYCQk.s 			page 27


1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
ARM GAS  /tmp/ccNVYCQk.s 			page 28


1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
ARM GAS  /tmp/ccNVYCQk.s 			page 29


1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
ARM GAS  /tmp/ccNVYCQk.s 			page 30


1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
ARM GAS  /tmp/ccNVYCQk.s 			page 31


1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
ARM GAS  /tmp/ccNVYCQk.s 			page 32


1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & AD
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Channel_17 is selected for VREFINT enable TSVREFE */
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHAN
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Temperature sensor and VREFINT channel*/
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
ARM GAS  /tmp/ccNVYCQk.s 			page 33


1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
ARM GAS  /tmp/ccNVYCQk.s 			page 34


1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/ccNVYCQk.s 			page 35


1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
  95              		.loc 1 1868 0
  96 0024 4D49     		ldr	r1, .L20
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
  97              		.loc 1 1872 0
  98 0026 2368     		ldr	r3, [r4]
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  99              		.loc 1 1888 0
 100 0028 4D4D     		ldr	r5, .L20+4
ARM GAS  /tmp/ccNVYCQk.s 			page 36


 101              	.LBE5:
 102              	.LBE4:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 103              		.loc 1 373 0
 104 002a 22F48852 		bic	r2, r2, #4352
 105 002e 22F00202 		bic	r2, r2, #2
 106 0032 42F00202 		orr	r2, r2, #2
 107 0036 2264     		str	r2, [r4, #64]
 108              	.LVL5:
 109              	.LBB9:
 110              	.LBB6:
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 111              		.loc 1 1868 0
 112 0038 4A68     		ldr	r2, [r1, #4]
 113 003a 22F44032 		bic	r2, r2, #196608
 114 003e 4A60     		str	r2, [r1, #4]
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 115              		.loc 1 1869 0
 116 0040 4A68     		ldr	r2, [r1, #4]
 117 0042 6068     		ldr	r0, [r4, #4]
 118 0044 0243     		orrs	r2, r2, r0
 119 0046 4A60     		str	r2, [r1, #4]
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 120              		.loc 1 1872 0
 121 0048 5868     		ldr	r0, [r3, #4]
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 122              		.loc 1 1873 0
 123 004a 2169     		ldr	r1, [r4, #16]
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 124              		.loc 1 1877 0
 125 004c A768     		ldr	r7, [r4, #8]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 126              		.loc 1 1881 0
 127 004e E668     		ldr	r6, [r4, #12]
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 128              		.loc 1 1872 0
 129 0050 20F48070 		bic	r0, r0, #256
 130 0054 5860     		str	r0, [r3, #4]
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 131              		.loc 1 1873 0
 132 0056 5A68     		ldr	r2, [r3, #4]
 133 0058 42EA0122 		orr	r2, r2, r1, lsl #8
 134 005c 5A60     		str	r2, [r3, #4]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 135              		.loc 1 1876 0
 136 005e 5868     		ldr	r0, [r3, #4]
 137 0060 20F04070 		bic	r0, r0, #50331648
 138 0064 5860     		str	r0, [r3, #4]
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 139              		.loc 1 1877 0
 140 0066 5968     		ldr	r1, [r3, #4]
 141              		.loc 1 1888 0
 142 0068 A06A     		ldr	r0, [r4, #40]
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 143              		.loc 1 1877 0
 144 006a 3943     		orrs	r1, r1, r7
 145 006c 5960     		str	r1, [r3, #4]
ARM GAS  /tmp/ccNVYCQk.s 			page 37


1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 146              		.loc 1 1880 0
 147 006e 9968     		ldr	r1, [r3, #8]
 148 0070 21F40061 		bic	r1, r1, #2048
 149 0074 9960     		str	r1, [r3, #8]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 150              		.loc 1 1881 0
 151 0076 9A68     		ldr	r2, [r3, #8]
 152              		.loc 1 1888 0
 153 0078 A842     		cmp	r0, r5
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 154              		.loc 1 1881 0
 155 007a 42EA0602 		orr	r2, r2, r6
 156 007e 9A60     		str	r2, [r3, #8]
 157              		.loc 1 1888 0
 158 0080 54D0     		beq	.L7
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 159              		.loc 1 1891 0
 160 0082 9968     		ldr	r1, [r3, #8]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 161              		.loc 1 1896 0
 162 0084 E56A     		ldr	r5, [r4, #44]
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 163              		.loc 1 1891 0
 164 0086 21F07061 		bic	r1, r1, #251658240
 165 008a 9960     		str	r1, [r3, #8]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 166              		.loc 1 1892 0
 167 008c 9A68     		ldr	r2, [r3, #8]
 168 008e 1043     		orrs	r0, r0, r2
 169 0090 9860     		str	r0, [r3, #8]
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 170              		.loc 1 1895 0
 171 0092 9968     		ldr	r1, [r3, #8]
 172 0094 21F04051 		bic	r1, r1, #805306368
 173 0098 9960     		str	r1, [r3, #8]
 174              		.loc 1 1896 0
 175 009a 9A68     		ldr	r2, [r3, #8]
 176 009c 2A43     		orrs	r2, r2, r5
 177 009e 9A60     		str	r2, [r3, #8]
 178              	.L8:
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
ARM GAS  /tmp/ccNVYCQk.s 			page 38


 179              		.loc 1 1906 0
 180 00a0 9968     		ldr	r1, [r3, #8]
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 181              		.loc 1 1907 0
 182 00a2 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 183              		.loc 1 1909 0
 184 00a4 94F82000 		ldrb	r0, [r4, #32]	@ zero_extendqisi2
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 185              		.loc 1 1906 0
 186 00a8 21F00201 		bic	r1, r1, #2
 187 00ac 9960     		str	r1, [r3, #8]
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 188              		.loc 1 1907 0
 189 00ae 9A68     		ldr	r2, [r3, #8]
 190 00b0 42EA4502 		orr	r2, r2, r5, lsl #1
 191 00b4 9A60     		str	r2, [r3, #8]
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 192              		.loc 1 1914 0
 193 00b6 5A68     		ldr	r2, [r3, #4]
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 194              		.loc 1 1909 0
 195 00b8 0028     		cmp	r0, #0
 196 00ba 40D1     		bne	.L19
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 197              		.loc 1 1923 0
 198 00bc 22F40062 		bic	r2, r2, #2048
 199 00c0 5A60     		str	r2, [r3, #4]
 200              	.L10:
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 201              		.loc 1 1927 0
 202 00c2 DA6A     		ldr	r2, [r3, #44]
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 203              		.loc 1 1928 0
 204 00c4 E569     		ldr	r5, [r4, #28]
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 205              		.loc 1 1932 0
 206 00c6 94F83070 		ldrb	r7, [r4, #48]	@ zero_extendqisi2
ARM GAS  /tmp/ccNVYCQk.s 			page 39


1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 207              		.loc 1 1936 0
 208 00ca 6669     		ldr	r6, [r4, #20]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 209              		.loc 1 1927 0
 210 00cc 22F47002 		bic	r2, r2, #15728640
 211 00d0 DA62     		str	r2, [r3, #44]
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 212              		.loc 1 1928 0
 213 00d2 D86A     		ldr	r0, [r3, #44]
 214 00d4 013D     		subs	r5, r5, #1
 215 00d6 40EA0550 		orr	r0, r0, r5, lsl #20
 216 00da D862     		str	r0, [r3, #44]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 217              		.loc 1 1931 0
 218 00dc 9868     		ldr	r0, [r3, #8]
 219 00de 20F40070 		bic	r0, r0, #512
 220 00e2 9860     		str	r0, [r3, #8]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 221              		.loc 1 1932 0
 222 00e4 9968     		ldr	r1, [r3, #8]
 223 00e6 41EA4721 		orr	r1, r1, r7, lsl #9
 224 00ea 9960     		str	r1, [r3, #8]
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 225              		.loc 1 1935 0
 226 00ec 9968     		ldr	r1, [r3, #8]
 227 00ee 21F48061 		bic	r1, r1, #1024
 228 00f2 9960     		str	r1, [r3, #8]
 229              		.loc 1 1936 0
 230 00f4 9A68     		ldr	r2, [r3, #8]
 231              	.LBE6:
 232              	.LBE9:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 233              		.loc 1 381 0
 234 00f6 0020     		movs	r0, #0
 235              	.LBB10:
 236              	.LBB7:
 237              		.loc 1 1936 0
 238 00f8 42EA8622 		orr	r2, r2, r6, lsl #10
 239 00fc 9A60     		str	r2, [r3, #8]
 240              	.LVL6:
 241              	.LBE7:
 242              	.LBE10:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 243              		.loc 1 381 0
 244 00fe 6064     		str	r0, [r4, #68]
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 245              		.loc 1 384 0
 246 0100 236C     		ldr	r3, [r4, #64]
 247 0102 23F00303 		bic	r3, r3, #3
 248 0106 43F00103 		orr	r3, r3, #1
 249 010a 2364     		str	r3, [r4, #64]
 250              	.LVL7:
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNVYCQk.s 			page 40


 251              		.loc 1 394 0
 252 010c 0023     		movs	r3, #0
 253 010e 84F83C30 		strb	r3, [r4, #60]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 254              		.loc 1 398 0
 255 0112 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 256              	.LVL8:
 257              	.L17:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 258              		.loc 1 358 0
 259 0114 FFF7FEFF 		bl	HAL_ADC_MspInit
 260              	.LVL9:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 261              		.loc 1 362 0
 262 0118 6564     		str	r5, [r4, #68]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 263              		.loc 1 370 0
 264 011a 236C     		ldr	r3, [r4, #64]
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 265              		.loc 1 365 0
 266 011c 84F83C50 		strb	r5, [r4, #60]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 267              		.loc 1 370 0
 268 0120 DB06     		lsls	r3, r3, #27
 269 0122 3FF579AF 		bmi	.L12
 270 0126 7CE7     		b	.L18
 271              	.LVL10:
 272              	.L11:
 273              	.LCFI1:
 274              		.cfi_def_cfa_offset 0
 275              		.cfi_restore 3
 276              		.cfi_restore 4
 277              		.cfi_restore 5
 278              		.cfi_restore 6
 279              		.cfi_restore 7
 280              		.cfi_restore 14
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 281              		.loc 1 319 0
 282 0128 0120     		movs	r0, #1
 283              	.LVL11:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 284              		.loc 1 398 0
 285 012a 7047     		bx	lr
 286              	.LVL12:
 287              	.L7:
 288              	.LCFI2:
 289              		.cfi_def_cfa_offset 24
 290              		.cfi_offset 3, -24
 291              		.cfi_offset 4, -20
 292              		.cfi_offset 5, -16
 293              		.cfi_offset 6, -12
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296              	.LBB11:
 297              	.LBB8:
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 298              		.loc 1 1901 0
ARM GAS  /tmp/ccNVYCQk.s 			page 41


 299 012c 9A68     		ldr	r2, [r3, #8]
 300 012e 22F07062 		bic	r2, r2, #251658240
 301 0132 9A60     		str	r2, [r3, #8]
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 302              		.loc 1 1902 0
 303 0134 9A68     		ldr	r2, [r3, #8]
 304 0136 22F04052 		bic	r2, r2, #805306368
 305 013a 9A60     		str	r2, [r3, #8]
 306 013c B0E7     		b	.L8
 307              	.L19:
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 308              		.loc 1 1914 0
 309 013e 42F40062 		orr	r2, r2, #2048
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 310              		.loc 1 1918 0
 311 0142 616A     		ldr	r1, [r4, #36]
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 312              		.loc 1 1914 0
 313 0144 5A60     		str	r2, [r3, #4]
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 314              		.loc 1 1917 0
 315 0146 5A68     		ldr	r2, [r3, #4]
 316 0148 22F46042 		bic	r2, r2, #57344
 317 014c 5A60     		str	r2, [r3, #4]
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 318              		.loc 1 1918 0
 319 014e 5A68     		ldr	r2, [r3, #4]
 320 0150 0139     		subs	r1, r1, #1
 321 0152 42EA4132 		orr	r2, r2, r1, lsl #13
 322 0156 5A60     		str	r2, [r3, #4]
 323 0158 B3E7     		b	.L10
 324              	.L21:
 325 015a 00BF     		.align	2
 326              	.L20:
 327 015c 00230140 		.word	1073816320
 328 0160 0100000F 		.word	251658241
 329              	.LBE8:
 330              	.LBE11:
 331              		.cfi_endproc
 332              	.LFE130:
 334              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 335              		.align	1
 336              		.p2align 2,,3
 337              		.weak	HAL_ADC_MspDeInit
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	HAL_ADC_MspDeInit:
 344              	.LFB157:
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE157:
ARM GAS  /tmp/ccNVYCQk.s 			page 42


 353 0002 00BF     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 354              		.align	1
 355              		.p2align 2,,3
 356              		.global	HAL_ADC_DeInit
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	HAL_ADC_DeInit:
 363              	.LFB131:
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 364              		.loc 1 407 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              	.LVL13:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 369              		.loc 1 411 0
 370 0000 D0B1     		cbz	r0, .L26
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 371              		.loc 1 420 0
 372 0002 026C     		ldr	r2, [r0, #64]
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 373              		.loc 1 407 0
 374 0004 38B5     		push	{r3, r4, r5, lr}
 375              	.LCFI3:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 381              		.loc 1 420 0
 382 0006 42F00202 		orr	r2, r2, #2
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 383              		.loc 1 424 0
 384 000a 0368     		ldr	r3, [r0]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 385              		.loc 1 420 0
 386 000c 0264     		str	r2, [r0, #64]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 387              		.loc 1 424 0
 388 000e 9A68     		ldr	r2, [r3, #8]
 389 0010 22F00102 		bic	r2, r2, #1
 390 0014 9A60     		str	r2, [r3, #8]
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 391              		.loc 1 428 0
 392 0016 9D68     		ldr	r5, [r3, #8]
 393 0018 15F00105 		ands	r5, r5, #1
 394 001c 0446     		mov	r4, r0
 395 001e 03D0     		beq	.L31
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 396              		.loc 1 451 0
 397 0020 0020     		movs	r0, #0
 398              	.LVL14:
 399 0022 84F83C00 		strb	r0, [r4, #60]
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNVYCQk.s 			page 43


 400              		.loc 1 455 0
 401 0026 38BD     		pop	{r3, r4, r5, pc}
 402              	.LVL15:
 403              	.L31:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 404              		.loc 1 440 0
 405 0028 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 406              	.LVL16:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 407              		.loc 1 451 0
 408 002c 0020     		movs	r0, #0
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 409              		.loc 1 444 0
 410 002e 6564     		str	r5, [r4, #68]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 411              		.loc 1 451 0
 412 0030 84F83C00 		strb	r0, [r4, #60]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 413              		.loc 1 447 0
 414 0034 2564     		str	r5, [r4, #64]
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 415              		.loc 1 455 0
 416 0036 38BD     		pop	{r3, r4, r5, pc}
 417              	.LVL17:
 418              	.L26:
 419              	.LCFI4:
 420              		.cfi_def_cfa_offset 0
 421              		.cfi_restore 3
 422              		.cfi_restore 4
 423              		.cfi_restore 5
 424              		.cfi_restore 14
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 425              		.loc 1 413 0
 426 0038 0120     		movs	r0, #1
 427              	.LVL18:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 428              		.loc 1 455 0
 429 003a 7047     		bx	lr
 430              		.cfi_endproc
 431              	.LFE131:
 433              		.section	.text.HAL_ADC_Start,"ax",%progbits
 434              		.align	1
 435              		.p2align 2,,3
 436              		.global	HAL_ADC_Start
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	HAL_ADC_Start:
 443              	.LFB134:
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 444              		.loc 1 720 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL19:
ARM GAS  /tmp/ccNVYCQk.s 			page 44


 450 0000 10B4     		push	{r4}
 451              	.LCFI5:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 4, -4
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 454              		.loc 1 729 0
 455 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 456              		.loc 1 720 0
 457 0006 83B0     		sub	sp, sp, #12
 458              	.LCFI6:
 459              		.cfi_def_cfa_offset 16
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 460              		.loc 1 721 0
 461 0008 0022     		movs	r2, #0
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 462              		.loc 1 729 0
 463 000a 012B     		cmp	r3, #1
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 464              		.loc 1 721 0
 465 000c 0192     		str	r2, [sp, #4]
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 466              		.loc 1 729 0
 467 000e 55D0     		beq	.L42
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 468              		.loc 1 734 0 discriminator 2
 469 0010 0268     		ldr	r2, [r0]
 470 0012 9368     		ldr	r3, [r2, #8]
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 471              		.loc 1 729 0 discriminator 2
 472 0014 0121     		movs	r1, #1
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 473              		.loc 1 734 0 discriminator 2
 474 0016 DB07     		lsls	r3, r3, #31
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 475              		.loc 1 729 0 discriminator 2
 476 0018 80F83C10 		strb	r1, [r0, #60]
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 477              		.loc 1 734 0 discriminator 2
 478 001c 14D4     		bmi	.L34
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 479              		.loc 1 741 0
 480 001e 2A4B     		ldr	r3, .L54
 481 0020 2A4C     		ldr	r4, .L54+4
 482 0022 1B68     		ldr	r3, [r3]
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 483              		.loc 1 737 0
 484 0024 9168     		ldr	r1, [r2, #8]
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 485              		.loc 1 741 0
 486 0026 A4FB0343 		umull	r4, r3, r4, r3
 487 002a 9B0C     		lsrs	r3, r3, #18
 488 002c 03EB4303 		add	r3, r3, r3, lsl #1
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 489              		.loc 1 737 0
 490 0030 41F00101 		orr	r1, r1, #1
 491 0034 9160     		str	r1, [r2, #8]
ARM GAS  /tmp/ccNVYCQk.s 			page 45


 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 492              		.loc 1 741 0
 493 0036 0193     		str	r3, [sp, #4]
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 494              		.loc 1 742 0
 495 0038 019B     		ldr	r3, [sp, #4]
 496 003a 2BB1     		cbz	r3, .L34
 497              	.L35:
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 498              		.loc 1 744 0
 499 003c 019B     		ldr	r3, [sp, #4]
 500 003e 013B     		subs	r3, r3, #1
 501 0040 0193     		str	r3, [sp, #4]
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 502              		.loc 1 742 0
 503 0042 019B     		ldr	r3, [sp, #4]
 504 0044 002B     		cmp	r3, #0
 505 0046 F9D1     		bne	.L35
 506              	.L34:
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 507              		.loc 1 749 0
 508 0048 9368     		ldr	r3, [r2, #8]
 509 004a DC07     		lsls	r4, r3, #31
 510 004c 25D5     		bpl	.L41
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 511              		.loc 1 754 0
 512 004e 036C     		ldr	r3, [r0, #64]
 513 0050 23F4E063 		bic	r3, r3, #1792
 514 0054 23F00103 		bic	r3, r3, #1
 515 0058 43F48073 		orr	r3, r3, #256
 516 005c 0364     		str	r3, [r0, #64]
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 517              		.loc 1 760 0
 518 005e 5368     		ldr	r3, [r2, #4]
 519 0060 5905     		lsls	r1, r3, #21
 520 0062 05D5     		bpl	.L37
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 521              		.loc 1 762 0
 522 0064 036C     		ldr	r3, [r0, #64]
 523 0066 23F44053 		bic	r3, r3, #12288
 524 006a 43F48053 		orr	r3, r3, #4096
 525 006e 0364     		str	r3, [r0, #64]
 526              	.L37:
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 527              		.loc 1 766 0
 528 0070 036C     		ldr	r3, [r0, #64]
 529 0072 13F48053 		ands	r3, r3, #4096
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 530              		.loc 1 769 0
 531 0076 1CBF     		itt	ne
 532 0078 436C     		ldrne	r3, [r0, #68]
 533 007a 23F00603 		bicne	r3, r3, #6
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 534              		.loc 1 774 0
 535 007e 4364     		str	r3, [r0, #68]
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 536              		.loc 1 780 0
ARM GAS  /tmp/ccNVYCQk.s 			page 46


 537 0080 0024     		movs	r4, #0
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 538              		.loc 1 789 0
 539 0082 6FF02201 		mvn	r1, #34
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 540              		.loc 1 792 0
 541 0086 124B     		ldr	r3, .L54+8
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 542              		.loc 1 780 0
 543 0088 80F83C40 		strb	r4, [r0, #60]
 544              	.LVL20:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 545              		.loc 1 789 0
 546 008c 1160     		str	r1, [r2]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 547              		.loc 1 792 0
 548 008e 5B68     		ldr	r3, [r3, #4]
 549 0090 DB06     		lsls	r3, r3, #27
 550 0092 07D0     		beq	.L53
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 551              		.loc 1 812 0
 552 0094 0F4B     		ldr	r3, .L54+12
 553 0096 9A42     		cmp	r2, r3
 554 0098 04D0     		beq	.L53
 555              	.LVL21:
 556              	.L41:
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 557              		.loc 1 821 0
 558 009a 0020     		movs	r0, #0
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 559              		.loc 1 822 0
 560 009c 03B0     		add	sp, sp, #12
 561              	.LCFI7:
 562              		.cfi_remember_state
 563              		.cfi_def_cfa_offset 4
 564              		@ sp needed
 565 009e 5DF8044B 		ldr	r4, [sp], #4
 566              	.LCFI8:
 567              		.cfi_restore 4
 568              		.cfi_def_cfa_offset 0
 569 00a2 7047     		bx	lr
 570              	.LVL22:
 571              	.L53:
 572              	.LCFI9:
 573              		.cfi_restore_state
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 574              		.loc 1 812 0 discriminator 1
 575 00a4 9068     		ldr	r0, [r2, #8]
 576              	.LVL23:
 577 00a6 10F04050 		ands	r0, r0, #805306368
 578 00aa F6D1     		bne	.L41
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 579              		.loc 1 815 0
 580 00ac 9368     		ldr	r3, [r2, #8]
 581 00ae 43F08043 		orr	r3, r3, #1073741824
 582 00b2 9360     		str	r3, [r2, #8]
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNVYCQk.s 			page 47


 583              		.loc 1 822 0
 584 00b4 03B0     		add	sp, sp, #12
 585              	.LCFI10:
 586              		.cfi_remember_state
 587              		.cfi_def_cfa_offset 4
 588              		@ sp needed
 589 00b6 5DF8044B 		ldr	r4, [sp], #4
 590              	.LCFI11:
 591              		.cfi_restore 4
 592              		.cfi_def_cfa_offset 0
 593 00ba 7047     		bx	lr
 594              	.LVL24:
 595              	.L42:
 596              	.LCFI12:
 597              		.cfi_restore_state
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 598              		.loc 1 729 0
 599 00bc 0220     		movs	r0, #2
 600              	.LVL25:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 601              		.loc 1 822 0
 602 00be 03B0     		add	sp, sp, #12
 603              	.LCFI13:
 604              		.cfi_def_cfa_offset 4
 605              		@ sp needed
 606 00c0 5DF8044B 		ldr	r4, [sp], #4
 607              	.LCFI14:
 608              		.cfi_restore 4
 609              		.cfi_def_cfa_offset 0
 610 00c4 7047     		bx	lr
 611              	.L55:
 612 00c6 00BF     		.align	2
 613              	.L54:
 614 00c8 00000000 		.word	SystemCoreClock
 615 00cc 83DE1B43 		.word	1125899907
 616 00d0 00230140 		.word	1073816320
 617 00d4 00200140 		.word	1073815552
 618              		.cfi_endproc
 619              	.LFE134:
 621              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 622              		.align	1
 623              		.p2align 2,,3
 624              		.global	HAL_ADC_Stop
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv4-sp-d16
 630              	HAL_ADC_Stop:
 631              	.LFB135:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 632              		.loc 1 835 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637              	.LVL26:
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccNVYCQk.s 			page 48


 638              		.loc 1 840 0
 639 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 640 0004 012B     		cmp	r3, #1
 641 0006 16D0     		beq	.L59
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 642              		.loc 1 844 0 discriminator 2
 643 0008 0368     		ldr	r3, [r0]
 644 000a 9A68     		ldr	r2, [r3, #8]
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 645              		.loc 1 840 0 discriminator 2
 646 000c 0121     		movs	r1, #1
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 647              		.loc 1 844 0 discriminator 2
 648 000e 22F00102 		bic	r2, r2, #1
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 649              		.loc 1 840 0 discriminator 2
 650 0012 80F83C10 		strb	r1, [r0, #60]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 651              		.loc 1 844 0 discriminator 2
 652 0016 9A60     		str	r2, [r3, #8]
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 653              		.loc 1 847 0 discriminator 2
 654 0018 9B68     		ldr	r3, [r3, #8]
 655 001a DB07     		lsls	r3, r3, #31
 656 001c 06D4     		bmi	.L58
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 657              		.loc 1 850 0
 658 001e 036C     		ldr	r3, [r0, #64]
 659 0020 23F48853 		bic	r3, r3, #4352
 660 0024 23F00103 		bic	r3, r3, #1
 661 0028 0B43     		orrs	r3, r3, r1
 662 002a 0364     		str	r3, [r0, #64]
 663              	.L58:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 664              		.loc 1 856 0
 665 002c 0023     		movs	r3, #0
 666 002e 80F83C30 		strb	r3, [r0, #60]
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 667              		.loc 1 859 0
 668 0032 1846     		mov	r0, r3
 669              	.LVL27:
 670 0034 7047     		bx	lr
 671              	.LVL28:
 672              	.L59:
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 673              		.loc 1 840 0
 674 0036 0220     		movs	r0, #2
 675              	.LVL29:
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 676              		.loc 1 860 0
 677 0038 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE135:
 681 003a 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 682              		.align	1
 683              		.p2align 2,,3
 684              		.global	HAL_ADC_PollForConversion
ARM GAS  /tmp/ccNVYCQk.s 			page 49


 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	HAL_ADC_PollForConversion:
 691              	.LFB136:
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 692              		.loc 1 878 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              	.LVL30:
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 697              		.loc 1 887 0
 698 0000 0368     		ldr	r3, [r0]
 699 0002 9A68     		ldr	r2, [r3, #8]
 700 0004 5205     		lsls	r2, r2, #21
 701 0006 02D5     		bpl	.L61
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 702              		.loc 1 888 0 discriminator 1
 703 0008 9B68     		ldr	r3, [r3, #8]
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 704              		.loc 1 887 0 discriminator 1
 705 000a DA05     		lsls	r2, r3, #23
 706 000c 40D4     		bmi	.L87
 707              	.L61:
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 708              		.loc 1 878 0
 709 000e 70B5     		push	{r4, r5, r6, lr}
 710              	.LCFI15:
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 4, -16
 713              		.cfi_offset 5, -12
 714              		.cfi_offset 6, -8
 715              		.cfi_offset 14, -4
 716 0010 0D46     		mov	r5, r1
 717 0012 0446     		mov	r4, r0
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 718              		.loc 1 900 0
 719 0014 FFF7FEFF 		bl	HAL_GetTick
 720              	.LVL31:
 721 0018 0646     		mov	r6, r0
 722              	.LVL32:
 723              	.L63:
 724 001a 6B1C     		adds	r3, r5, #1
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 725              		.loc 1 903 0
 726 001c 2268     		ldr	r2, [r4]
 727 001e 25D1     		bne	.L66
 728              	.L67:
 729 0020 1368     		ldr	r3, [r2]
 730 0022 9807     		lsls	r0, r3, #30
 731 0024 FCD5     		bpl	.L67
 732              	.L68:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 733              		.loc 1 922 0
 734 0026 6FF01203 		mvn	r3, #18
ARM GAS  /tmp/ccNVYCQk.s 			page 50


 735 002a 1360     		str	r3, [r2]
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 736              		.loc 1 925 0
 737 002c 236C     		ldr	r3, [r4, #64]
 738 002e 43F40073 		orr	r3, r3, #512
 739 0032 2364     		str	r3, [r4, #64]
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 740              		.loc 1 933 0
 741 0034 9368     		ldr	r3, [r2, #8]
 742 0036 13F0405F 		tst	r3, #805306368
 743 003a 15D1     		bne	.L71
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 744              		.loc 1 933 0 is_stmt 0 discriminator 1
 745 003c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 746 003e 9BB9     		cbnz	r3, .L71
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 747              		.loc 1 935 0 is_stmt 1
 748 0040 D36A     		ldr	r3, [r2, #44]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 749              		.loc 1 934 0
 750 0042 13F4700F 		tst	r3, #15728640
 751 0046 02D0     		beq	.L72
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 752              		.loc 1 936 0
 753 0048 9368     		ldr	r3, [r2, #8]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 754              		.loc 1 935 0
 755 004a 5B05     		lsls	r3, r3, #21
 756 004c 0CD4     		bmi	.L71
 757              	.L72:
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 758              		.loc 1 939 0
 759 004e 236C     		ldr	r3, [r4, #64]
 760 0050 23F48073 		bic	r3, r3, #256
 761 0054 2364     		str	r3, [r4, #64]
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 762              		.loc 1 941 0
 763 0056 206C     		ldr	r0, [r4, #64]
 764 0058 10F48050 		ands	r0, r0, #4096
 765 005c 04D1     		bne	.L71
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 766              		.loc 1 943 0
 767 005e 236C     		ldr	r3, [r4, #64]
 768 0060 43F00103 		orr	r3, r3, #1
 769 0064 2364     		str	r3, [r4, #64]
 770              	.L62:
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 771              		.loc 1 949 0
 772 0066 70BD     		pop	{r4, r5, r6, pc}
 773              	.LVL33:
 774              	.L71:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 775              		.loc 1 948 0
 776 0068 0020     		movs	r0, #0
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 777              		.loc 1 949 0
 778 006a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccNVYCQk.s 			page 51


 779              	.LVL34:
 780              	.L66:
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 781              		.loc 1 903 0
 782 006c 1368     		ldr	r3, [r2]
 783 006e 9907     		lsls	r1, r3, #30
 784 0070 D9D4     		bmi	.L68
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 785              		.loc 1 908 0
 786 0072 25B1     		cbz	r5, .L65
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 787              		.loc 1 908 0 is_stmt 0 discriminator 1
 788 0074 FFF7FEFF 		bl	HAL_GetTick
 789              	.LVL35:
 790 0078 801B     		subs	r0, r0, r6
 791 007a A842     		cmp	r0, r5
 792 007c CDD9     		bls	.L63
 793              	.L65:
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 794              		.loc 1 911 0 is_stmt 1
 795 007e 236C     		ldr	r3, [r4, #64]
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 796              		.loc 1 914 0
 797 0080 0022     		movs	r2, #0
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 798              		.loc 1 911 0
 799 0082 43F00403 		orr	r3, r3, #4
 800 0086 2364     		str	r3, [r4, #64]
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 801              		.loc 1 914 0
 802 0088 84F83C20 		strb	r2, [r4, #60]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 803              		.loc 1 916 0
 804 008c 0320     		movs	r0, #3
 805 008e EAE7     		b	.L62
 806              	.LVL36:
 807              	.L87:
 808              	.LCFI16:
 809              		.cfi_def_cfa_offset 0
 810              		.cfi_restore 4
 811              		.cfi_restore 5
 812              		.cfi_restore 6
 813              		.cfi_restore 14
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 814              		.loc 1 891 0
 815 0090 036C     		ldr	r3, [r0, #64]
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 816              		.loc 1 894 0
 817 0092 0022     		movs	r2, #0
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 818              		.loc 1 891 0
 819 0094 43F02003 		orr	r3, r3, #32
 820 0098 0364     		str	r3, [r0, #64]
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 821              		.loc 1 894 0
 822 009a 80F83C20 		strb	r2, [r0, #60]
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccNVYCQk.s 			page 52


 823              		.loc 1 896 0
 824 009e 0120     		movs	r0, #1
 825              	.LVL37:
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 826              		.loc 1 949 0
 827 00a0 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE136:
 831 00a2 00BF     		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 832              		.align	1
 833              		.p2align 2,,3
 834              		.global	HAL_ADC_PollForEvent
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu fpv4-sp-d16
 840              	HAL_ADC_PollForEvent:
 841              	.LFB137:
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 842              		.loc 1 963 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              	.LVL38:
 847 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 848              	.LCFI17:
 849              		.cfi_def_cfa_offset 24
 850              		.cfi_offset 4, -24
 851              		.cfi_offset 5, -20
 852              		.cfi_offset 6, -16
 853              		.cfi_offset 7, -12
 854              		.cfi_offset 8, -8
 855              		.cfi_offset 14, -4
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 856              		.loc 1 963 0
 857 0004 0646     		mov	r6, r0
 858 0006 0D46     		mov	r5, r1
 859 0008 1746     		mov	r7, r2
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 860              		.loc 1 971 0
 861 000a FFF7FEFF 		bl	HAL_GetTick
 862              	.LVL39:
 863 000e 8046     		mov	r8, r0
 864              	.LVL40:
 865              	.L89:
 866 0010 7B1C     		adds	r3, r7, #1
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 867              		.loc 1 974 0
 868 0012 3468     		ldr	r4, [r6]
 869 0014 13D1     		bne	.L93
 870              	.L94:
 871 0016 2368     		ldr	r3, [r4]
 872 0018 35EA0303 		bics	r3, r5, r3
 873 001c FBD1     		bne	.L94
 874              	.L95:
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 875              		.loc 1 993 0
ARM GAS  /tmp/ccNVYCQk.s 			page 53


 876 001e 012D     		cmp	r5, #1
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 877              		.loc 1 996 0
 878 0020 336C     		ldr	r3, [r6, #64]
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 879              		.loc 1 993 0
 880 0022 20D0     		beq	.L100
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
 881              		.loc 1 1005 0
 882 0024 43F48063 		orr	r3, r3, #1024
 883 0028 3364     		str	r3, [r6, #64]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 884              		.loc 1 1007 0
 885 002a 736C     		ldr	r3, [r6, #68]
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 886              		.loc 1 1010 0
 887 002c 6FF02002 		mvn	r2, #32
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 888              		.loc 1 1007 0
 889 0030 43F00203 		orr	r3, r3, #2
 890 0034 7364     		str	r3, [r6, #68]
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 891              		.loc 1 1014 0
 892 0036 0020     		movs	r0, #0
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 893              		.loc 1 1010 0
 894 0038 2260     		str	r2, [r4]
 895              	.L91:
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 896              		.loc 1 1015 0
 897 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 898              	.LVL41:
 899              	.L93:
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 900              		.loc 1 974 0
 901 003e 2368     		ldr	r3, [r4]
 902 0040 35EA0303 		bics	r3, r5, r3
 903 0044 EBD0     		beq	.L95
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 904              		.loc 1 979 0
 905 0046 2FB1     		cbz	r7, .L92
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 906              		.loc 1 979 0 is_stmt 0 discriminator 1
 907 0048 FFF7FEFF 		bl	HAL_GetTick
 908              	.LVL42:
 909 004c A0EB0800 		sub	r0, r0, r8
 910 0050 B842     		cmp	r0, r7
 911 0052 DDD9     		bls	.L89
 912              	.L92:
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 913              		.loc 1 982 0 is_stmt 1
 914 0054 336C     		ldr	r3, [r6, #64]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 915              		.loc 1 985 0
 916 0056 0022     		movs	r2, #0
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 917              		.loc 1 982 0
ARM GAS  /tmp/ccNVYCQk.s 			page 54


 918 0058 43F00403 		orr	r3, r3, #4
 919 005c 3364     		str	r3, [r6, #64]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 920              		.loc 1 985 0
 921 005e 86F83C20 		strb	r2, [r6, #60]
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 922              		.loc 1 987 0
 923 0062 0320     		movs	r0, #3
 924 0064 E9E7     		b	.L91
 925              	.L100:
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 926              		.loc 1 999 0
 927 0066 6FF00102 		mvn	r2, #1
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 928              		.loc 1 996 0
 929 006a 43F48033 		orr	r3, r3, #65536
 930 006e 3364     		str	r3, [r6, #64]
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 931              		.loc 1 1014 0
 932 0070 0020     		movs	r0, #0
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 933              		.loc 1 999 0
 934 0072 2260     		str	r2, [r4]
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 935              		.loc 1 1015 0
 936 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 937              		.cfi_endproc
 938              	.LFE137:
 940              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 941              		.align	1
 942              		.p2align 2,,3
 943              		.global	HAL_ADC_Start_IT
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	HAL_ADC_Start_IT:
 950              	.LFB138:
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 951              		.loc 1 1025 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956              	.LVL43:
 957 0000 10B4     		push	{r4}
 958              	.LCFI18:
 959              		.cfi_def_cfa_offset 4
 960              		.cfi_offset 4, -4
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 961              		.loc 1 1034 0
 962 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 963              		.loc 1 1025 0
 964 0006 83B0     		sub	sp, sp, #12
 965              	.LCFI19:
 966              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccNVYCQk.s 			page 55


1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 967              		.loc 1 1026 0
 968 0008 0022     		movs	r2, #0
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 969              		.loc 1 1034 0
 970 000a 012B     		cmp	r3, #1
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 971              		.loc 1 1026 0
 972 000c 0192     		str	r2, [sp, #4]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 973              		.loc 1 1034 0
 974 000e 5BD0     		beq	.L111
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 975              		.loc 1 1039 0 discriminator 2
 976 0010 0268     		ldr	r2, [r0]
 977 0012 9368     		ldr	r3, [r2, #8]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 978              		.loc 1 1034 0 discriminator 2
 979 0014 0121     		movs	r1, #1
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 980              		.loc 1 1039 0 discriminator 2
 981 0016 DB07     		lsls	r3, r3, #31
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 982              		.loc 1 1034 0 discriminator 2
 983 0018 80F83C10 		strb	r1, [r0, #60]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 984              		.loc 1 1039 0 discriminator 2
 985 001c 14D4     		bmi	.L103
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 986              		.loc 1 1046 0
 987 001e 2D4B     		ldr	r3, .L123
 988 0020 2D4C     		ldr	r4, .L123+4
 989 0022 1B68     		ldr	r3, [r3]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 990              		.loc 1 1042 0
 991 0024 9168     		ldr	r1, [r2, #8]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 992              		.loc 1 1046 0
 993 0026 A4FB0343 		umull	r4, r3, r4, r3
 994 002a 9B0C     		lsrs	r3, r3, #18
 995 002c 03EB4303 		add	r3, r3, r3, lsl #1
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 996              		.loc 1 1042 0
 997 0030 41F00101 		orr	r1, r1, #1
 998 0034 9160     		str	r1, [r2, #8]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 999              		.loc 1 1046 0
 1000 0036 0193     		str	r3, [sp, #4]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1001              		.loc 1 1047 0
 1002 0038 019B     		ldr	r3, [sp, #4]
 1003 003a 2BB1     		cbz	r3, .L103
 1004              	.L104:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1005              		.loc 1 1049 0
 1006 003c 019B     		ldr	r3, [sp, #4]
 1007 003e 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccNVYCQk.s 			page 56


 1008 0040 0193     		str	r3, [sp, #4]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1009              		.loc 1 1047 0
 1010 0042 019B     		ldr	r3, [sp, #4]
 1011 0044 002B     		cmp	r3, #0
 1012 0046 F9D1     		bne	.L104
 1013              	.L103:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1014              		.loc 1 1054 0
 1015 0048 9368     		ldr	r3, [r2, #8]
 1016 004a DC07     		lsls	r4, r3, #31
 1017 004c 2BD5     		bpl	.L110
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1018              		.loc 1 1059 0
 1019 004e 036C     		ldr	r3, [r0, #64]
 1020 0050 23F4E063 		bic	r3, r3, #1792
 1021 0054 23F00103 		bic	r3, r3, #1
 1022 0058 43F48073 		orr	r3, r3, #256
 1023 005c 0364     		str	r3, [r0, #64]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1024              		.loc 1 1065 0
 1025 005e 5368     		ldr	r3, [r2, #4]
 1026 0060 5905     		lsls	r1, r3, #21
 1027 0062 05D5     		bpl	.L106
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1028              		.loc 1 1067 0
 1029 0064 036C     		ldr	r3, [r0, #64]
 1030 0066 23F44053 		bic	r3, r3, #12288
 1031 006a 43F48053 		orr	r3, r3, #4096
 1032 006e 0364     		str	r3, [r0, #64]
 1033              	.L106:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1034              		.loc 1 1071 0
 1035 0070 036C     		ldr	r3, [r0, #64]
 1036 0072 13F48053 		ands	r3, r3, #4096
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1037              		.loc 1 1074 0
 1038 0076 1CBF     		itt	ne
 1039 0078 436C     		ldrne	r3, [r0, #68]
 1040 007a 23F00603 		bicne	r3, r3, #6
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1041              		.loc 1 1079 0
 1042 007e 4364     		str	r3, [r0, #68]
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1043              		.loc 1 1085 0
 1044 0080 0021     		movs	r1, #0
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1045              		.loc 1 1094 0
 1046 0082 6FF02203 		mvn	r3, #34
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1047              		.loc 1 1085 0
 1048 0086 80F83C10 		strb	r1, [r0, #60]
 1049              	.LVL44:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1050              		.loc 1 1094 0
 1051 008a 1360     		str	r3, [r2]
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccNVYCQk.s 			page 57


 1052              		.loc 1 1097 0
 1053 008c 5368     		ldr	r3, [r2, #4]
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1054              		.loc 1 1100 0
 1055 008e 1349     		ldr	r1, .L123+8
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1056              		.loc 1 1097 0
 1057 0090 43F08063 		orr	r3, r3, #67108864
 1058 0094 43F02003 		orr	r3, r3, #32
 1059 0098 5360     		str	r3, [r2, #4]
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1060              		.loc 1 1100 0
 1061 009a 4B68     		ldr	r3, [r1, #4]
 1062 009c DB06     		lsls	r3, r3, #27
 1063 009e 07D0     		beq	.L122
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 1064              		.loc 1 1120 0
 1065 00a0 0F4B     		ldr	r3, .L123+12
 1066 00a2 9A42     		cmp	r2, r3
 1067 00a4 04D0     		beq	.L122
 1068              	.LVL45:
 1069              	.L110:
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1070              		.loc 1 1129 0
 1071 00a6 0020     		movs	r0, #0
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1072              		.loc 1 1130 0
 1073 00a8 03B0     		add	sp, sp, #12
 1074              	.LCFI20:
 1075              		.cfi_remember_state
 1076              		.cfi_def_cfa_offset 4
 1077              		@ sp needed
 1078 00aa 5DF8044B 		ldr	r4, [sp], #4
 1079              	.LCFI21:
 1080              		.cfi_restore 4
 1081              		.cfi_def_cfa_offset 0
 1082 00ae 7047     		bx	lr
 1083              	.LVL46:
 1084              	.L122:
 1085              	.LCFI22:
 1086              		.cfi_restore_state
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 1087              		.loc 1 1120 0 discriminator 1
 1088 00b0 9068     		ldr	r0, [r2, #8]
 1089              	.LVL47:
 1090 00b2 10F04050 		ands	r0, r0, #805306368
 1091 00b6 F6D1     		bne	.L110
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 1092              		.loc 1 1123 0
 1093 00b8 9368     		ldr	r3, [r2, #8]
 1094 00ba 43F08043 		orr	r3, r3, #1073741824
 1095 00be 9360     		str	r3, [r2, #8]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1096              		.loc 1 1130 0
 1097 00c0 03B0     		add	sp, sp, #12
 1098              	.LCFI23:
 1099              		.cfi_remember_state
ARM GAS  /tmp/ccNVYCQk.s 			page 58


 1100              		.cfi_def_cfa_offset 4
 1101              		@ sp needed
 1102 00c2 5DF8044B 		ldr	r4, [sp], #4
 1103              	.LCFI24:
 1104              		.cfi_restore 4
 1105              		.cfi_def_cfa_offset 0
 1106 00c6 7047     		bx	lr
 1107              	.LVL48:
 1108              	.L111:
 1109              	.LCFI25:
 1110              		.cfi_restore_state
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1111              		.loc 1 1034 0
 1112 00c8 0220     		movs	r0, #2
 1113              	.LVL49:
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1114              		.loc 1 1130 0
 1115 00ca 03B0     		add	sp, sp, #12
 1116              	.LCFI26:
 1117              		.cfi_def_cfa_offset 4
 1118              		@ sp needed
 1119 00cc 5DF8044B 		ldr	r4, [sp], #4
 1120              	.LCFI27:
 1121              		.cfi_restore 4
 1122              		.cfi_def_cfa_offset 0
 1123 00d0 7047     		bx	lr
 1124              	.L124:
 1125 00d2 00BF     		.align	2
 1126              	.L123:
 1127 00d4 00000000 		.word	SystemCoreClock
 1128 00d8 83DE1B43 		.word	1125899907
 1129 00dc 00230140 		.word	1073816320
 1130 00e0 00200140 		.word	1073815552
 1131              		.cfi_endproc
 1132              	.LFE138:
 1134              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1135              		.align	1
 1136              		.p2align 2,,3
 1137              		.global	HAL_ADC_Stop_IT
 1138              		.syntax unified
 1139              		.thumb
 1140              		.thumb_func
 1141              		.fpu fpv4-sp-d16
 1143              	HAL_ADC_Stop_IT:
 1144              	.LFB139:
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 1145              		.loc 1 1142 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
 1150              	.LVL50:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1151              		.loc 1 1147 0
 1152 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1153 0004 012B     		cmp	r3, #1
 1154 0006 1CD0     		beq	.L128
ARM GAS  /tmp/ccNVYCQk.s 			page 59


1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1155              		.loc 1 1151 0 discriminator 2
 1156 0008 0368     		ldr	r3, [r0]
 1157 000a 9A68     		ldr	r2, [r3, #8]
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1158              		.loc 1 1147 0 discriminator 2
 1159 000c 0121     		movs	r1, #1
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1160              		.loc 1 1151 0 discriminator 2
 1161 000e 22F00102 		bic	r2, r2, #1
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1162              		.loc 1 1147 0 discriminator 2
 1163 0012 80F83C10 		strb	r1, [r0, #60]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1164              		.loc 1 1151 0 discriminator 2
 1165 0016 9A60     		str	r2, [r3, #8]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1166              		.loc 1 1154 0 discriminator 2
 1167 0018 9A68     		ldr	r2, [r3, #8]
 1168 001a D207     		lsls	r2, r2, #31
 1169 001c 0CD4     		bmi	.L127
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1170              		.loc 1 1157 0
 1171 001e 5A68     		ldr	r2, [r3, #4]
 1172 0020 22F08062 		bic	r2, r2, #67108864
 1173 0024 22F02002 		bic	r2, r2, #32
 1174 0028 5A60     		str	r2, [r3, #4]
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1175              		.loc 1 1160 0
 1176 002a 036C     		ldr	r3, [r0, #64]
 1177 002c 23F48853 		bic	r3, r3, #4352
 1178 0030 23F00103 		bic	r3, r3, #1
 1179 0034 0B43     		orrs	r3, r3, r1
 1180 0036 0364     		str	r3, [r0, #64]
 1181              	.L127:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1182              		.loc 1 1166 0
 1183 0038 0023     		movs	r3, #0
 1184 003a 80F83C30 		strb	r3, [r0, #60]
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1185              		.loc 1 1169 0
 1186 003e 1846     		mov	r0, r3
 1187              	.LVL51:
 1188 0040 7047     		bx	lr
 1189              	.LVL52:
 1190              	.L128:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1191              		.loc 1 1147 0
 1192 0042 0220     		movs	r0, #2
 1193              	.LVL53:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1194              		.loc 1 1170 0
 1195 0044 7047     		bx	lr
 1196              		.cfi_endproc
 1197              	.LFE139:
 1199 0046 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1200              		.align	1
ARM GAS  /tmp/ccNVYCQk.s 			page 60


 1201              		.p2align 2,,3
 1202              		.global	HAL_ADC_Start_DMA
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	HAL_ADC_Start_DMA:
 1209              	.LFB141:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1210              		.loc 1 1341 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              	.LVL54:
 1215 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1216              	.LCFI28:
 1217              		.cfi_def_cfa_offset 20
 1218              		.cfi_offset 4, -20
 1219              		.cfi_offset 5, -16
 1220              		.cfi_offset 6, -12
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1223              		.loc 1 1350 0
 1224 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1225              		.loc 1 1341 0
 1226 0006 83B0     		sub	sp, sp, #12
 1227              	.LCFI29:
 1228              		.cfi_def_cfa_offset 32
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 1229              		.loc 1 1342 0
 1230 0008 0024     		movs	r4, #0
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1231              		.loc 1 1350 0
 1232 000a 012B     		cmp	r3, #1
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 1233              		.loc 1 1342 0
 1234 000c 0194     		str	r4, [sp, #4]
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1235              		.loc 1 1350 0
 1236 000e 69D0     		beq	.L139
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 1237              		.loc 1 1355 0 discriminator 2
 1238 0010 0568     		ldr	r5, [r0]
 1239 0012 AB68     		ldr	r3, [r5, #8]
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1240              		.loc 1 1350 0 discriminator 2
 1241 0014 0124     		movs	r4, #1
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 1242              		.loc 1 1355 0 discriminator 2
 1243 0016 DE07     		lsls	r6, r3, #31
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1244              		.loc 1 1350 0 discriminator 2
 1245 0018 80F83C40 		strb	r4, [r0, #60]
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 1246              		.loc 1 1355 0 discriminator 2
ARM GAS  /tmp/ccNVYCQk.s 			page 61


 1247 001c 14D4     		bmi	.L131
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1248              		.loc 1 1362 0
 1249 001e 334B     		ldr	r3, .L151
 1250 0020 334E     		ldr	r6, .L151+4
 1251 0022 1C68     		ldr	r4, [r3]
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1252              		.loc 1 1358 0
 1253 0024 AB68     		ldr	r3, [r5, #8]
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1254              		.loc 1 1362 0
 1255 0026 A6FB0464 		umull	r6, r4, r6, r4
 1256 002a A40C     		lsrs	r4, r4, #18
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1257              		.loc 1 1358 0
 1258 002c 43F00103 		orr	r3, r3, #1
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1259              		.loc 1 1362 0
 1260 0030 04EB4404 		add	r4, r4, r4, lsl #1
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1261              		.loc 1 1358 0
 1262 0034 AB60     		str	r3, [r5, #8]
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1263              		.loc 1 1362 0
 1264 0036 0194     		str	r4, [sp, #4]
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1265              		.loc 1 1363 0
 1266 0038 019B     		ldr	r3, [sp, #4]
 1267 003a 2BB1     		cbz	r3, .L131
 1268              	.L132:
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1269              		.loc 1 1365 0
 1270 003c 019C     		ldr	r4, [sp, #4]
 1271 003e 013C     		subs	r4, r4, #1
 1272 0040 0194     		str	r4, [sp, #4]
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1273              		.loc 1 1363 0
 1274 0042 019C     		ldr	r4, [sp, #4]
 1275 0044 002C     		cmp	r4, #0
 1276 0046 F9D1     		bne	.L132
 1277              	.L131:
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1278              		.loc 1 1370 0
 1279 0048 AB68     		ldr	r3, [r5, #8]
 1280 004a DC07     		lsls	r4, r3, #31
 1281 004c 3DD5     		bpl	.L138
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1282              		.loc 1 1375 0
 1283 004e 046C     		ldr	r4, [r0, #64]
 1284 0050 24F4E064 		bic	r4, r4, #1792
 1285 0054 24F00104 		bic	r4, r4, #1
 1286 0058 44F48074 		orr	r4, r4, #256
 1287 005c 0464     		str	r4, [r0, #64]
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1288              		.loc 1 1381 0
 1289 005e 6B68     		ldr	r3, [r5, #4]
 1290 0060 5B05     		lsls	r3, r3, #21
ARM GAS  /tmp/ccNVYCQk.s 			page 62


 1291 0062 05D5     		bpl	.L134
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1292              		.loc 1 1383 0
 1293 0064 036C     		ldr	r3, [r0, #64]
 1294 0066 23F44053 		bic	r3, r3, #12288
 1295 006a 43F48053 		orr	r3, r3, #4096
 1296 006e 0364     		str	r3, [r0, #64]
 1297              	.L134:
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1298              		.loc 1 1387 0
 1299 0070 036C     		ldr	r3, [r0, #64]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1300              		.loc 1 1409 0
 1301 0072 204E     		ldr	r6, .L151+8
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1302              		.loc 1 1387 0
 1303 0074 13F48053 		ands	r3, r3, #4096
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1304              		.loc 1 1390 0
 1305 0078 1CBF     		itt	ne
 1306 007a 436C     		ldrne	r3, [r0, #68]
 1307 007c 23F00603 		bicne	r3, r3, #6
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1308              		.loc 1 1395 0
 1309 0080 4364     		str	r3, [r0, #68]
 1310 0082 0446     		mov	r4, r0
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1311              		.loc 1 1409 0
 1312 0084 806B     		ldr	r0, [r0, #56]
 1313              	.LVL55:
 1314 0086 1346     		mov	r3, r2
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1315              		.loc 1 1401 0
 1316 0088 0027     		movs	r7, #0
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1317              		.loc 1 1412 0
 1318 008a 1B4A     		ldr	r2, .L151+12
 1319              	.LVL56:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1320              		.loc 1 1401 0
 1321 008c 84F83C70 		strb	r7, [r4, #60]
 1322              	.LVL57:
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1323              		.loc 1 1409 0
 1324 0090 C663     		str	r6, [r0, #60]
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1325              		.loc 1 1412 0
 1326 0092 0264     		str	r2, [r0, #64]
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1327              		.loc 1 1415 0
 1328 0094 194E     		ldr	r6, .L151+16
 1329 0096 C664     		str	r6, [r0, #76]
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1330              		.loc 1 1423 0
 1331 0098 6FF02202 		mvn	r2, #34
 1332 009c 2A60     		str	r2, [r5]
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccNVYCQk.s 			page 63


 1333              		.loc 1 1426 0
 1334 009e 6E68     		ldr	r6, [r5, #4]
 1335 00a0 46F08066 		orr	r6, r6, #67108864
 1336 00a4 6E60     		str	r6, [r5, #4]
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1337              		.loc 1 1429 0
 1338 00a6 AE68     		ldr	r6, [r5, #8]
 1339 00a8 46F48076 		orr	r6, r6, #256
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1340              		.loc 1 1432 0
 1341 00ac 0A46     		mov	r2, r1
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1342              		.loc 1 1429 0
 1343 00ae AE60     		str	r6, [r5, #8]
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1344              		.loc 1 1432 0
 1345 00b0 05F14C01 		add	r1, r5, #76
 1346              	.LVL58:
 1347 00b4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1348              	.LVL59:
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1349              		.loc 1 1435 0
 1350 00b8 114B     		ldr	r3, .L151+20
 1351 00ba 5B68     		ldr	r3, [r3, #4]
 1352 00bc 13F01F0F 		tst	r3, #31
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 1353              		.loc 1 1443 0
 1354 00c0 2368     		ldr	r3, [r4]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1355              		.loc 1 1435 0
 1356 00c2 05D0     		beq	.L150
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 1357              		.loc 1 1455 0
 1358 00c4 0F4A     		ldr	r2, .L151+24
 1359 00c6 9342     		cmp	r3, r2
 1360 00c8 02D0     		beq	.L150
 1361              	.LVL60:
 1362              	.L138:
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1363              		.loc 1 1464 0
 1364 00ca 0020     		movs	r0, #0
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1365              		.loc 1 1465 0
 1366 00cc 03B0     		add	sp, sp, #12
 1367              	.LCFI30:
 1368              		.cfi_remember_state
 1369              		.cfi_def_cfa_offset 20
 1370              		@ sp needed
 1371 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 1372              	.LVL61:
 1373              	.L150:
 1374              	.LCFI31:
 1375              		.cfi_restore_state
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 1376              		.loc 1 1455 0 discriminator 1
 1377 00d0 9868     		ldr	r0, [r3, #8]
 1378 00d2 10F04050 		ands	r0, r0, #805306368
ARM GAS  /tmp/ccNVYCQk.s 			page 64


 1379 00d6 F8D1     		bne	.L138
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 1380              		.loc 1 1458 0
 1381 00d8 9A68     		ldr	r2, [r3, #8]
 1382 00da 42F08042 		orr	r2, r2, #1073741824
 1383 00de 9A60     		str	r2, [r3, #8]
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1384              		.loc 1 1465 0
 1385 00e0 03B0     		add	sp, sp, #12
 1386              	.LCFI32:
 1387              		.cfi_remember_state
 1388              		.cfi_def_cfa_offset 20
 1389              		@ sp needed
 1390 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1391              	.LVL62:
 1392              	.L139:
 1393              	.LCFI33:
 1394              		.cfi_restore_state
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1395              		.loc 1 1350 0
 1396 00e4 0220     		movs	r0, #2
 1397              	.LVL63:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1398              		.loc 1 1465 0
 1399 00e6 03B0     		add	sp, sp, #12
 1400              	.LCFI34:
 1401              		.cfi_def_cfa_offset 20
 1402              		@ sp needed
 1403 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1404              	.L152:
 1405 00ea 00BF     		.align	2
 1406              	.L151:
 1407 00ec 00000000 		.word	SystemCoreClock
 1408 00f0 83DE1B43 		.word	1125899907
 1409 00f4 00000000 		.word	ADC_DMAConvCplt
 1410 00f8 00000000 		.word	ADC_DMAHalfConvCplt
 1411 00fc 00000000 		.word	ADC_DMAError
 1412 0100 00230140 		.word	1073816320
 1413 0104 00200140 		.word	1073815552
 1414              		.cfi_endproc
 1415              	.LFE141:
 1417              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1418              		.align	1
 1419              		.p2align 2,,3
 1420              		.global	HAL_ADC_Stop_DMA
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu fpv4-sp-d16
 1426              	HAL_ADC_Stop_DMA:
 1427              	.LFB142:
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1428              		.loc 1 1474 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              	.LVL64:
ARM GAS  /tmp/ccNVYCQk.s 			page 65


1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1433              		.loc 1 1481 0
 1434 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1435 0004 012B     		cmp	r3, #1
 1436 0006 29D0     		beq	.L156
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1437              		.loc 1 1485 0 discriminator 2
 1438 0008 0368     		ldr	r3, [r0]
 1439 000a 9A68     		ldr	r2, [r3, #8]
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1440              		.loc 1 1481 0 discriminator 2
 1441 000c 0121     		movs	r1, #1
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1442              		.loc 1 1485 0 discriminator 2
 1443 000e 22F00102 		bic	r2, r2, #1
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1444              		.loc 1 1474 0 discriminator 2
 1445 0012 10B5     		push	{r4, lr}
 1446              	.LCFI35:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1450              		.loc 1 1481 0 discriminator 2
 1451 0014 80F83C10 		strb	r1, [r0, #60]
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1452              		.loc 1 1485 0 discriminator 2
 1453 0018 9A60     		str	r2, [r3, #8]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1454              		.loc 1 1488 0 discriminator 2
 1455 001a 9A68     		ldr	r2, [r3, #8]
 1456 001c D207     		lsls	r2, r2, #31
 1457 001e 0446     		mov	r4, r0
 1458 0020 04D5     		bpl	.L162
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1459              		.loc 1 1507 0
 1460 0022 0023     		movs	r3, #0
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1461              		.loc 1 1475 0
 1462 0024 0020     		movs	r0, #0
 1463              	.LVL65:
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1464              		.loc 1 1507 0
 1465 0026 84F83C30 		strb	r3, [r4, #60]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1466              		.loc 1 1511 0
 1467 002a 10BD     		pop	{r4, pc}
 1468              	.LVL66:
 1469              	.L162:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1470              		.loc 1 1491 0
 1471 002c 9A68     		ldr	r2, [r3, #8]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1472              		.loc 1 1495 0
 1473 002e 806B     		ldr	r0, [r0, #56]
 1474              	.LVL67:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccNVYCQk.s 			page 66


 1475              		.loc 1 1491 0
 1476 0030 22F48072 		bic	r2, r2, #256
 1477 0034 9A60     		str	r2, [r3, #8]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1478              		.loc 1 1495 0
 1479 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1480              	.LVL68:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1481              		.loc 1 1498 0
 1482 003a 2268     		ldr	r2, [r4]
 1483 003c 5368     		ldr	r3, [r2, #4]
 1484 003e 23F08063 		bic	r3, r3, #67108864
 1485 0042 5360     		str	r3, [r2, #4]
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1486              		.loc 1 1501 0
 1487 0044 236C     		ldr	r3, [r4, #64]
 1488 0046 23F48853 		bic	r3, r3, #4352
 1489 004a 23F00103 		bic	r3, r3, #1
 1490 004e 43F00103 		orr	r3, r3, #1
 1491 0052 2364     		str	r3, [r4, #64]
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1492              		.loc 1 1507 0
 1493 0054 0023     		movs	r3, #0
 1494 0056 84F83C30 		strb	r3, [r4, #60]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1495              		.loc 1 1511 0
 1496 005a 10BD     		pop	{r4, pc}
 1497              	.LVL69:
 1498              	.L156:
 1499              	.LCFI36:
 1500              		.cfi_def_cfa_offset 0
 1501              		.cfi_restore 4
 1502              		.cfi_restore 14
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1503              		.loc 1 1481 0
 1504 005c 0220     		movs	r0, #2
 1505              	.LVL70:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1506              		.loc 1 1511 0
 1507 005e 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE142:
 1511              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1512              		.align	1
 1513              		.p2align 2,,3
 1514              		.global	HAL_ADC_GetValue
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu fpv4-sp-d16
 1520              	HAL_ADC_GetValue:
 1521              	.LFB143:
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
 1522              		.loc 1 1520 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccNVYCQk.s 			page 67


 1526              		@ link register save eliminated.
 1527              	.LVL71:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1528              		.loc 1 1522 0
 1529 0000 0368     		ldr	r3, [r0]
 1530 0002 D86C     		ldr	r0, [r3, #76]
 1531              	.LVL72:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1532              		.loc 1 1523 0
 1533 0004 7047     		bx	lr
 1534              		.cfi_endproc
 1535              	.LFE143:
 1537 0006 00BF     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1538              		.align	1
 1539              		.p2align 2,,3
 1540              		.weak	HAL_ADC_ConvCpltCallback
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv4-sp-d16
 1546              	HAL_ADC_ConvCpltCallback:
 1547              	.LFB159:
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              		@ link register save eliminated.
 1552 0000 7047     		bx	lr
 1553              		.cfi_endproc
 1554              	.LFE159:
 1556 0002 00BF     		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1557              		.align	1
 1558              		.p2align 2,,3
 1559              		.weak	HAL_ADC_ConvHalfCpltCallback
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1563              		.fpu fpv4-sp-d16
 1565              	HAL_ADC_ConvHalfCpltCallback:
 1566              	.LFB161:
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570              		@ link register save eliminated.
 1571 0000 7047     		bx	lr
 1572              		.cfi_endproc
 1573              	.LFE161:
 1575 0002 00BF     		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1576              		.align	1
 1577              		.p2align 2,,3
 1578              		.syntax unified
 1579              		.thumb
 1580              		.thumb_func
 1581              		.fpu fpv4-sp-d16
 1583              	ADC_DMAHalfConvCplt:
 1584              	.LFB154:
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNVYCQk.s 			page 68


1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
ARM GAS  /tmp/ccNVYCQk.s 			page 69


1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	else
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	{
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call DMA error callback */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1585              		.loc 1 2015 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              	.LVL73:
 1590              		.loc 1 2015 0
 1591 0000 08B5     		push	{r3, lr}
 1592              	.LCFI37:
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 3, -8
 1595              		.cfi_offset 14, -4
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Half conversion callback */
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1596              		.loc 1 2021 0
 1597 0002 806B     		ldr	r0, [r0, #56]
 1598              	.LVL74:
 1599 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1600              	.LVL75:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1601              		.loc 1 2023 0
 1602 0008 08BD     		pop	{r3, pc}
 1603              		.cfi_endproc
 1604              	.LFE154:
 1606 000a 00BF     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1607              		.align	1
 1608              		.p2align 2,,3
 1609              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	HAL_ADC_LevelOutOfWindowCallback:
ARM GAS  /tmp/ccNVYCQk.s 			page 70


 1616              	.LFB163:
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 0, uses_anonymous_args = 0
 1620              		@ link register save eliminated.
 1621 0000 7047     		bx	lr
 1622              		.cfi_endproc
 1623              	.LFE163:
 1625 0002 00BF     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1626              		.align	1
 1627              		.p2align 2,,3
 1628              		.weak	HAL_ADC_ErrorCallback
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv4-sp-d16
 1634              	HAL_ADC_ErrorCallback:
 1635              	.LFB165:
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 1640 0000 7047     		bx	lr
 1641              		.cfi_endproc
 1642              	.LFE165:
 1644 0002 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1645              		.align	1
 1646              		.p2align 2,,3
 1647              		.global	HAL_ADC_IRQHandler
 1648              		.syntax unified
 1649              		.thumb
 1650              		.thumb_func
 1651              		.fpu fpv4-sp-d16
 1653              	HAL_ADC_IRQHandler:
 1654              	.LFB140:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1655              		.loc 1 1179 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              	.LVL76:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1660              		.loc 1 1179 0
 1661 0000 38B5     		push	{r3, r4, r5, lr}
 1662              	.LCFI38:
 1663              		.cfi_def_cfa_offset 16
 1664              		.cfi_offset 3, -16
 1665              		.cfi_offset 4, -12
 1666              		.cfi_offset 5, -8
 1667              		.cfi_offset 14, -4
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1668              		.loc 1 1187 0
 1669 0002 0368     		ldr	r3, [r0]
 1670 0004 1A68     		ldr	r2, [r3]
 1671              	.LVL77:
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 1672              		.loc 1 1188 0
ARM GAS  /tmp/ccNVYCQk.s 			page 71


 1673 0006 5968     		ldr	r1, [r3, #4]
 1674              	.LVL78:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1675              		.loc 1 1179 0
 1676 0008 0446     		mov	r4, r0
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1677              		.loc 1 1190 0
 1678 000a 9007     		lsls	r0, r2, #30
 1679              	.LVL79:
 1680 000c 01D5     		bpl	.L171
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1681              		.loc 1 1190 0 is_stmt 0 discriminator 1
 1682 000e 8A06     		lsls	r2, r1, #26
 1683              	.LVL80:
 1684 0010 53D4     		bmi	.L219
 1685              	.LVL81:
 1686              	.L171:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1687              		.loc 1 1236 0 is_stmt 1
 1688 0012 1A68     		ldr	r2, [r3]
 1689              	.LVL82:
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 1690              		.loc 1 1237 0
 1691 0014 5968     		ldr	r1, [r3, #4]
 1692              	.LVL83:
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1693              		.loc 1 1239 0
 1694 0016 5207     		lsls	r2, r2, #29
 1695              	.LVL84:
 1696 0018 01D5     		bpl	.L177
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1697              		.loc 1 1239 0 is_stmt 0 discriminator 1
 1698 001a 0D06     		lsls	r5, r1, #24
 1699 001c 1BD4     		bmi	.L220
 1700              	.LVL85:
 1701              	.L177:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 1702              		.loc 1 1283 0 is_stmt 1
 1703 001e 1A68     		ldr	r2, [r3]
 1704              	.LVL86:
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
 1705              		.loc 1 1284 0
 1706 0020 5968     		ldr	r1, [r3, #4]
 1707              	.LVL87:
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1708              		.loc 1 1286 0
 1709 0022 D007     		lsls	r0, r2, #31
 1710 0024 01D5     		bpl	.L183
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1711              		.loc 1 1286 0 is_stmt 0 discriminator 1
 1712 0026 4A06     		lsls	r2, r1, #25
 1713              	.LVL88:
 1714 0028 06D4     		bmi	.L221
 1715              	.LVL89:
 1716              	.L183:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 1717              		.loc 1 1305 0 is_stmt 1
ARM GAS  /tmp/ccNVYCQk.s 			page 72


 1718 002a 1A68     		ldr	r2, [r3]
 1719              	.LVL90:
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
 1720              		.loc 1 1306 0
 1721 002c 5968     		ldr	r1, [r3, #4]
 1722              	.LVL91:
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1723              		.loc 1 1308 0
 1724 002e 9006     		lsls	r0, r2, #26
 1725 0030 01D5     		bpl	.L170
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1726              		.loc 1 1308 0 is_stmt 0 discriminator 1
 1727 0032 4A01     		lsls	r2, r1, #5
 1728              	.LVL92:
 1729 0034 69D4     		bmi	.L222
 1730              	.L170:
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1731              		.loc 1 1330 0 is_stmt 1
 1732 0036 38BD     		pop	{r3, r4, r5, pc}
 1733              	.LVL93:
 1734              	.L221:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1735              		.loc 1 1288 0
 1736 0038 1A68     		ldr	r2, [r3]
 1737 003a D507     		lsls	r5, r2, #31
 1738 003c F5D5     		bpl	.L183
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 1739              		.loc 1 1291 0
 1740 003e 236C     		ldr	r3, [r4, #64]
 1741 0040 43F48033 		orr	r3, r3, #65536
 1742 0044 2364     		str	r3, [r4, #64]
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1743              		.loc 1 1297 0
 1744 0046 2046     		mov	r0, r4
 1745 0048 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1746              	.LVL94:
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1747              		.loc 1 1301 0
 1748 004c 2368     		ldr	r3, [r4]
 1749 004e 6FF00102 		mvn	r2, #1
 1750 0052 1A60     		str	r2, [r3]
 1751 0054 E9E7     		b	.L183
 1752              	.LVL95:
 1753              	.L220:
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1754              		.loc 1 1242 0
 1755 0056 226C     		ldr	r2, [r4, #64]
 1756 0058 D006     		lsls	r0, r2, #27
 1757 005a 03D4     		bmi	.L178
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1758              		.loc 1 1245 0
 1759 005c 226C     		ldr	r2, [r4, #64]
 1760 005e 42F40052 		orr	r2, r2, #8192
 1761 0062 2264     		str	r2, [r4, #64]
 1762              	.L178:
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1763              		.loc 1 1252 0
ARM GAS  /tmp/ccNVYCQk.s 			page 73


 1764 0064 9A68     		ldr	r2, [r3, #8]
 1765 0066 12F4401F 		tst	r2, #3145728
 1766 006a 1ED1     		bne	.L180
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1767              		.loc 1 1253 0 discriminator 1
 1768 006c 9A6B     		ldr	r2, [r3, #56]
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1769              		.loc 1 1252 0 discriminator 1
 1770 006e 12F4401F 		tst	r2, #3145728
 1771 0072 02D0     		beq	.L181
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1772              		.loc 1 1254 0
 1773 0074 9A68     		ldr	r2, [r3, #8]
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1774              		.loc 1 1253 0
 1775 0076 5105     		lsls	r1, r2, #21
 1776              	.LVL96:
 1777 0078 17D4     		bmi	.L180
 1778              	.L181:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1779              		.loc 1 1255 0
 1780 007a 5A68     		ldr	r2, [r3, #4]
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1781              		.loc 1 1254 0
 1782 007c 5205     		lsls	r2, r2, #21
 1783 007e 14D4     		bmi	.L180
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1784              		.loc 1 1256 0
 1785 0080 9A68     		ldr	r2, [r3, #8]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1786              		.loc 1 1255 0
 1787 0082 12F0405F 		tst	r2, #805306368
 1788 0086 10D1     		bne	.L180
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1789              		.loc 1 1256 0
 1790 0088 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 1791 008a 72B9     		cbnz	r2, .L180
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 1792              		.loc 1 1260 0
 1793 008c 5A68     		ldr	r2, [r3, #4]
 1794 008e 22F08002 		bic	r2, r2, #128
 1795 0092 5A60     		str	r2, [r3, #4]
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1796              		.loc 1 1263 0
 1797 0094 236C     		ldr	r3, [r4, #64]
 1798 0096 23F48053 		bic	r3, r3, #4096
 1799 009a 2364     		str	r3, [r4, #64]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
 1800              		.loc 1 1265 0
 1801 009c 236C     		ldr	r3, [r4, #64]
 1802 009e DD05     		lsls	r5, r3, #23
 1803 00a0 03D4     		bmi	.L180
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 1804              		.loc 1 1267 0
 1805 00a2 236C     		ldr	r3, [r4, #64]
 1806 00a4 43F00103 		orr	r3, r3, #1
 1807 00a8 2364     		str	r3, [r4, #64]
ARM GAS  /tmp/ccNVYCQk.s 			page 74


 1808              	.L180:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1809              		.loc 1 1276 0
 1810 00aa 2046     		mov	r0, r4
 1811 00ac FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1812              	.LVL97:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 1813              		.loc 1 1280 0
 1814 00b0 2368     		ldr	r3, [r4]
 1815 00b2 6FF00C02 		mvn	r2, #12
 1816 00b6 1A60     		str	r2, [r3]
 1817 00b8 B1E7     		b	.L177
 1818              	.LVL98:
 1819              	.L219:
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1820              		.loc 1 1193 0
 1821 00ba 226C     		ldr	r2, [r4, #64]
 1822 00bc D506     		lsls	r5, r2, #27
 1823 00be 03D4     		bmi	.L172
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 1824              		.loc 1 1196 0
 1825 00c0 226C     		ldr	r2, [r4, #64]
 1826 00c2 42F40072 		orr	r2, r2, #512
 1827 00c6 2264     		str	r2, [r4, #64]
 1828              	.L172:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1829              		.loc 1 1205 0
 1830 00c8 9A68     		ldr	r2, [r3, #8]
 1831 00ca 12F0405F 		tst	r2, #805306368
 1832 00ce 14D1     		bne	.L174
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1833              		.loc 1 1205 0 is_stmt 0 discriminator 1
 1834 00d0 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 1835 00d2 92B9     		cbnz	r2, .L174
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1836              		.loc 1 1207 0 is_stmt 1
 1837 00d4 DA6A     		ldr	r2, [r3, #44]
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1838              		.loc 1 1206 0
 1839 00d6 12F4700F 		tst	r2, #15728640
 1840 00da 23D1     		bne	.L223
 1841              	.L176:
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 1842              		.loc 1 1214 0
 1843 00dc 5A68     		ldr	r2, [r3, #4]
 1844 00de 22F02002 		bic	r2, r2, #32
 1845 00e2 5A60     		str	r2, [r3, #4]
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 1846              		.loc 1 1217 0
 1847 00e4 236C     		ldr	r3, [r4, #64]
 1848 00e6 23F48073 		bic	r3, r3, #256
 1849 00ea 2364     		str	r3, [r4, #64]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 1850              		.loc 1 1219 0
 1851 00ec 236C     		ldr	r3, [r4, #64]
 1852 00ee D904     		lsls	r1, r3, #19
 1853              	.LVL99:
ARM GAS  /tmp/ccNVYCQk.s 			page 75


 1854 00f0 03D4     		bmi	.L174
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 1855              		.loc 1 1221 0
 1856 00f2 236C     		ldr	r3, [r4, #64]
 1857 00f4 43F00103 		orr	r3, r3, #1
 1858 00f8 2364     		str	r3, [r4, #64]
 1859              	.L174:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1860              		.loc 1 1229 0
 1861 00fa 2046     		mov	r0, r4
 1862 00fc FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1863              	.LVL100:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 1864              		.loc 1 1233 0
 1865 0100 2368     		ldr	r3, [r4]
 1866 0102 6FF01202 		mvn	r2, #18
 1867 0106 1A60     		str	r2, [r3]
 1868 0108 83E7     		b	.L171
 1869              	.LVL101:
 1870              	.L222:
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1871              		.loc 1 1315 0
 1872 010a 626C     		ldr	r2, [r4, #68]
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1873              		.loc 1 1318 0
 1874 010c 6FF02005 		mvn	r5, #32
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1875              		.loc 1 1315 0
 1876 0110 42F00202 		orr	r2, r2, #2
 1877 0114 6264     		str	r2, [r4, #68]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1878              		.loc 1 1324 0
 1879 0116 2046     		mov	r0, r4
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1880              		.loc 1 1318 0
 1881 0118 1D60     		str	r5, [r3]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1882              		.loc 1 1324 0
 1883 011a FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1884              	.LVL102:
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 1885              		.loc 1 1328 0
 1886 011e 2368     		ldr	r3, [r4]
 1887 0120 1D60     		str	r5, [r3]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 1888              		.loc 1 1330 0
 1889 0122 38BD     		pop	{r3, r4, r5, pc}
 1890              	.LVL103:
 1891              	.L223:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1892              		.loc 1 1208 0
 1893 0124 9A68     		ldr	r2, [r3, #8]
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1894              		.loc 1 1207 0
 1895 0126 5005     		lsls	r0, r2, #21
 1896 0128 E7D4     		bmi	.L174
 1897 012a D7E7     		b	.L176
ARM GAS  /tmp/ccNVYCQk.s 			page 76


 1898              		.cfi_endproc
 1899              	.LFE140:
 1901              		.section	.text.ADC_DMAError,"ax",%progbits
 1902              		.align	1
 1903              		.p2align 2,,3
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv4-sp-d16
 1909              	ADC_DMAError:
 1910              	.LFB155:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1911              		.loc 1 2032 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              	.LVL104:
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1916              		.loc 1 2033 0
 1917 0000 806B     		ldr	r0, [r0, #56]
 1918              	.LVL105:
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1919              		.loc 1 2032 0
 1920 0002 08B5     		push	{r3, lr}
 1921              	.LCFI39:
 1922              		.cfi_def_cfa_offset 8
 1923              		.cfi_offset 3, -8
 1924              		.cfi_offset 14, -4
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 1925              		.loc 1 2034 0
 1926 0004 4023     		movs	r3, #64
 1927 0006 0364     		str	r3, [r0, #64]
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 1928              		.loc 1 2036 0
 1929 0008 436C     		ldr	r3, [r0, #68]
 1930 000a 43F00403 		orr	r3, r3, #4
 1931 000e 4364     		str	r3, [r0, #68]
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Error callback */
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1932              		.loc 1 2041 0
 1933 0010 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1934              	.LVL106:
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1935              		.loc 1 2043 0
ARM GAS  /tmp/ccNVYCQk.s 			page 77


 1936 0014 08BD     		pop	{r3, pc}
 1937              		.cfi_endproc
 1938              	.LFE155:
 1940 0016 00BF     		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1941              		.align	1
 1942              		.p2align 2,,3
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv4-sp-d16
 1948              	ADC_DMAConvCplt:
 1949              	.LFB153:
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1950              		.loc 1 1946 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              	.LVL107:
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 1955              		.loc 1 1948 0
 1956 0000 836B     		ldr	r3, [r0, #56]
 1957              	.LVL108:
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1958              		.loc 1 1951 0
 1959 0002 1A6C     		ldr	r2, [r3, #64]
 1960 0004 12F0500F 		tst	r2, #80
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1961              		.loc 1 1946 0
 1962 0008 10B5     		push	{r4, lr}
 1963              	.LCFI40:
 1964              		.cfi_def_cfa_offset 8
 1965              		.cfi_offset 4, -8
 1966              		.cfi_offset 14, -4
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1967              		.loc 1 1954 0
 1968 000a 1A6C     		ldr	r2, [r3, #64]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1969              		.loc 1 1951 0
 1970 000c 23D1     		bne	.L227
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1971              		.loc 1 1954 0
 1972 000e 42F40072 		orr	r2, r2, #512
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1973              		.loc 1 1962 0
 1974 0012 1968     		ldr	r1, [r3]
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 1975              		.loc 1 1954 0
 1976 0014 1A64     		str	r2, [r3, #64]
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1977              		.loc 1 1962 0
 1978 0016 8A68     		ldr	r2, [r1, #8]
 1979 0018 12F0405F 		tst	r2, #805306368
 1980 001c 17D1     		bne	.L229
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1981              		.loc 1 1962 0 is_stmt 0 discriminator 1
 1982 001e 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 1983 0020 AAB9     		cbnz	r2, .L229
ARM GAS  /tmp/ccNVYCQk.s 			page 78


1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1984              		.loc 1 1964 0 is_stmt 1
 1985 0022 CA6A     		ldr	r2, [r1, #44]
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1986              		.loc 1 1963 0
 1987 0024 12F4700F 		tst	r2, #15728640
 1988 0028 02D0     		beq	.L231
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 1989              		.loc 1 1965 0
 1990 002a 8A68     		ldr	r2, [r1, #8]
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1991              		.loc 1 1964 0
 1992 002c 5005     		lsls	r0, r2, #21
 1993              	.LVL109:
 1994 002e 0ED4     		bmi	.L229
 1995              	.L231:
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 1996              		.loc 1 1971 0
 1997 0030 4A68     		ldr	r2, [r1, #4]
 1998 0032 22F02002 		bic	r2, r2, #32
 1999 0036 4A60     		str	r2, [r1, #4]
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 2000              		.loc 1 1974 0
 2001 0038 1A6C     		ldr	r2, [r3, #64]
 2002 003a 22F48072 		bic	r2, r2, #256
 2003 003e 1A64     		str	r2, [r3, #64]
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 2004              		.loc 1 1976 0
 2005 0040 1A6C     		ldr	r2, [r3, #64]
 2006 0042 D104     		lsls	r1, r2, #19
 2007 0044 03D4     		bmi	.L229
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 2008              		.loc 1 1978 0
 2009 0046 1A6C     		ldr	r2, [r3, #64]
 2010 0048 42F00102 		orr	r2, r2, #1
 2011 004c 1A64     		str	r2, [r3, #64]
 2012              	.L229:
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2013              		.loc 1 1986 0
 2014 004e 1846     		mov	r0, r3
 2015 0050 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2016              	.LVL110:
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2017              		.loc 1 2006 0
 2018 0054 10BD     		pop	{r4, pc}
 2019              	.LVL111:
 2020              	.L227:
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 2021              		.loc 1 1991 0
 2022 0056 D206     		lsls	r2, r2, #27
 2023 0058 04D4     		bmi	.L238
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2024              		.loc 1 2003 0
 2025 005a 9B6B     		ldr	r3, [r3, #56]
 2026              	.LVL112:
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2027              		.loc 1 2006 0
ARM GAS  /tmp/ccNVYCQk.s 			page 79


 2028 005c BDE81040 		pop	{r4, lr}
 2029              	.LCFI41:
 2030              		.cfi_remember_state
 2031              		.cfi_restore 14
 2032              		.cfi_restore 4
 2033              		.cfi_def_cfa_offset 0
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2034              		.loc 1 2003 0
 2035 0060 DB6C     		ldr	r3, [r3, #76]
 2036 0062 1847     		bx	r3	@ indirect register sibling call
 2037              	.LVL113:
 2038              	.L238:
 2039              	.LCFI42:
 2040              		.cfi_restore_state
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2041              		.loc 1 1997 0
 2042 0064 1846     		mov	r0, r3
 2043              	.LVL114:
 2044 0066 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2045              	.LVL115:
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2046              		.loc 1 2006 0
 2047 006a 10BD     		pop	{r4, pc}
 2048              		.cfi_endproc
 2049              	.LFE153:
 2051              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2052              		.align	1
 2053              		.p2align 2,,3
 2054              		.global	HAL_ADC_ConfigChannel
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2058              		.fpu fpv4-sp-d16
 2060              	HAL_ADC_ConfigChannel:
 2061              	.LFB148:
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2062              		.loc 1 1621 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 8
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 2066              		@ link register save eliminated.
 2067              	.LVL116:
 2068 0000 F0B4     		push	{r4, r5, r6, r7}
 2069              	.LCFI43:
 2070              		.cfi_def_cfa_offset 16
 2071              		.cfi_offset 4, -16
 2072              		.cfi_offset 5, -12
 2073              		.cfi_offset 6, -8
 2074              		.cfi_offset 7, -4
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2075              		.loc 1 1631 0
 2076 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2077              		.loc 1 1621 0
 2078 0006 82B0     		sub	sp, sp, #8
 2079              	.LCFI44:
 2080              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccNVYCQk.s 			page 80


1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2081              		.loc 1 1622 0
 2082 0008 0022     		movs	r2, #0
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2083              		.loc 1 1631 0
 2084 000a 012B     		cmp	r3, #1
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2085              		.loc 1 1622 0
 2086 000c 0192     		str	r2, [sp, #4]
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2087              		.loc 1 1631 0
 2088 000e 00F09480 		beq	.L253
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2089              		.loc 1 1634 0 discriminator 2
 2090 0012 0D68     		ldr	r5, [r1]
 2091 0014 8A68     		ldr	r2, [r1, #8]
 2092 0016 0368     		ldr	r3, [r0]
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2093              		.loc 1 1631 0 discriminator 2
 2094 0018 0124     		movs	r4, #1
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2095              		.loc 1 1634 0 discriminator 2
 2096 001a 092D     		cmp	r5, #9
 2097 001c AFB2     		uxth	r7, r5
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2098              		.loc 1 1631 0 discriminator 2
 2099 001e 80F83C40 		strb	r4, [r0, #60]
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2100              		.loc 1 1634 0 discriminator 2
 2101 0022 29D8     		bhi	.L259
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2102              		.loc 1 1645 0
 2103 0024 1C69     		ldr	r4, [r3, #16]
 2104 0026 05EB4506 		add	r6, r5, r5, lsl #1
 2105 002a 4FF0070C 		mov	ip, #7
 2106 002e 0CFA06FC 		lsl	ip, ip, r6
 2107 0032 24EA0C04 		bic	r4, r4, ip
 2108 0036 1C61     		str	r4, [r3, #16]
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2109              		.loc 1 1648 0
 2110 0038 1C69     		ldr	r4, [r3, #16]
 2111 003a 02FA06F6 		lsl	r6, r2, r6
 2112 003e 2643     		orrs	r6, r6, r4
 2113 0040 1E61     		str	r6, [r3, #16]
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2114              		.loc 1 1652 0
 2115 0042 4E68     		ldr	r6, [r1, #4]
 2116 0044 062E     		cmp	r6, #6
 2117 0046 06EB8602 		add	r2, r6, r6, lsl #2
 2118 004a 2AD8     		bhi	.L243
 2119              	.L261:
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2120              		.loc 1 1655 0
 2121 004c 596B     		ldr	r1, [r3, #52]
 2122              	.LVL117:
 2123 004e 053A     		subs	r2, r2, #5
 2124 0050 1F24     		movs	r4, #31
ARM GAS  /tmp/ccNVYCQk.s 			page 81


 2125 0052 9440     		lsls	r4, r4, r2
 2126 0054 21EA0401 		bic	r1, r1, r4
 2127 0058 5963     		str	r1, [r3, #52]
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2128              		.loc 1 1658 0
 2129 005a 596B     		ldr	r1, [r3, #52]
 2130 005c 07FA02F2 		lsl	r2, r7, r2
 2131 0060 0A43     		orrs	r2, r2, r1
 2132 0062 5A63     		str	r2, [r3, #52]
 2133              	.L244:
 2134              	.LVL118:
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2135              		.loc 1 1685 0
 2136 0064 3D4A     		ldr	r2, .L264
 2137 0066 9342     		cmp	r3, r2
 2138 0068 2DD0     		beq	.L260
 2139              	.L248:
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2140              		.loc 1 1721 0
 2141 006a 0023     		movs	r3, #0
 2142 006c 80F83C30 		strb	r3, [r0, #60]
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2143              		.loc 1 1724 0
 2144 0070 1846     		mov	r0, r3
 2145              	.LVL119:
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2146              		.loc 1 1725 0
 2147 0072 02B0     		add	sp, sp, #8
 2148              	.LCFI45:
 2149              		.cfi_remember_state
 2150              		.cfi_def_cfa_offset 16
 2151              		@ sp needed
 2152 0074 F0BC     		pop	{r4, r5, r6, r7}
 2153              	.LCFI46:
 2154              		.cfi_restore 7
 2155              		.cfi_restore 6
 2156              		.cfi_restore 5
 2157              		.cfi_restore 4
 2158              		.cfi_def_cfa_offset 0
 2159 0076 7047     		bx	lr
 2160              	.LVL120:
 2161              	.L259:
 2162              	.LCFI47:
 2163              		.cfi_restore_state
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2164              		.loc 1 1637 0
 2165 0078 07EB4706 		add	r6, r7, r7, lsl #1
 2166 007c DC68     		ldr	r4, [r3, #12]
 2167 007e 1E3E     		subs	r6, r6, #30
 2168 0080 4FF0070C 		mov	ip, #7
 2169 0084 0CFA06FC 		lsl	ip, ip, r6
 2170 0088 24EA0C04 		bic	r4, r4, ip
 2171 008c DC60     		str	r4, [r3, #12]
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2172              		.loc 1 1640 0
 2173 008e DC68     		ldr	r4, [r3, #12]
 2174 0090 02FA06F6 		lsl	r6, r2, r6
ARM GAS  /tmp/ccNVYCQk.s 			page 82


 2175 0094 2643     		orrs	r6, r6, r4
 2176 0096 DE60     		str	r6, [r3, #12]
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2177              		.loc 1 1652 0
 2178 0098 4E68     		ldr	r6, [r1, #4]
 2179 009a 062E     		cmp	r6, #6
 2180 009c 06EB8602 		add	r2, r6, r6, lsl #2
 2181 00a0 D4D9     		bls	.L261
 2182              	.L243:
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2183              		.loc 1 1661 0
 2184 00a2 0C2E     		cmp	r6, #12
 2185 00a4 31D8     		bhi	.L245
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2186              		.loc 1 1664 0
 2187 00a6 A2F12304 		sub	r4, r2, #35
 2188 00aa 1F21     		movs	r1, #31
 2189              	.LVL121:
 2190 00ac 1A6B     		ldr	r2, [r3, #48]
 2191 00ae A140     		lsls	r1, r1, r4
 2192 00b0 22EA0102 		bic	r2, r2, r1
 2193 00b4 1A63     		str	r2, [r3, #48]
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2194              		.loc 1 1667 0
 2195 00b6 196B     		ldr	r1, [r3, #48]
 2196 00b8 07FA04F2 		lsl	r2, r7, r4
 2197 00bc 0A43     		orrs	r2, r2, r1
 2198 00be 1A63     		str	r2, [r3, #48]
 2199              	.LVL122:
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2200              		.loc 1 1685 0
 2201 00c0 264A     		ldr	r2, .L264
 2202 00c2 9342     		cmp	r3, r2
 2203 00c4 D1D1     		bne	.L248
 2204              	.L260:
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2205              		.loc 1 1685 0 is_stmt 0 discriminator 1
 2206 00c6 122D     		cmp	r5, #18
 2207 00c8 2DD0     		beq	.L262
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2208              		.loc 1 1698 0 is_stmt 1
 2209 00ca 254B     		ldr	r3, .L264+4
 2210 00cc 9D42     		cmp	r5, r3
 2211 00ce 38D1     		bne	.L263
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2212              		.loc 1 1703 0
 2213 00d0 244A     		ldr	r2, .L264+8
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2214              		.loc 1 1712 0
 2215 00d2 254B     		ldr	r3, .L264+12
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2216              		.loc 1 1703 0
 2217 00d4 5168     		ldr	r1, [r2, #4]
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2218              		.loc 1 1712 0
 2219 00d6 254C     		ldr	r4, .L264+16
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccNVYCQk.s 			page 83


 2220              		.loc 1 1703 0
 2221 00d8 21F48001 		bic	r1, r1, #4194304
 2222 00dc 5160     		str	r1, [r2, #4]
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2223              		.loc 1 1706 0
 2224 00de 5168     		ldr	r1, [r2, #4]
 2225 00e0 41F40001 		orr	r1, r1, #8388608
 2226 00e4 5160     		str	r1, [r2, #4]
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2227              		.loc 1 1712 0
 2228 00e6 1B68     		ldr	r3, [r3]
 2229 00e8 A4FB0323 		umull	r2, r3, r4, r3
 2230 00ec 9B0C     		lsrs	r3, r3, #18
 2231 00ee 03EB8303 		add	r3, r3, r3, lsl #2
 2232 00f2 5B00     		lsls	r3, r3, #1
 2233 00f4 0193     		str	r3, [sp, #4]
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 2234              		.loc 1 1713 0
 2235 00f6 019B     		ldr	r3, [sp, #4]
 2236 00f8 002B     		cmp	r3, #0
 2237 00fa B6D0     		beq	.L248
 2238              	.L250:
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 2239              		.loc 1 1715 0
 2240 00fc 019B     		ldr	r3, [sp, #4]
 2241 00fe 013B     		subs	r3, r3, #1
 2242 0100 0193     		str	r3, [sp, #4]
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 2243              		.loc 1 1713 0
 2244 0102 019B     		ldr	r3, [sp, #4]
 2245 0104 002B     		cmp	r3, #0
 2246 0106 F9D1     		bne	.L250
 2247 0108 AFE7     		b	.L248
 2248              	.LVL123:
 2249              	.L245:
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2250              		.loc 1 1673 0
 2251 010a A2F14101 		sub	r1, r2, #65
 2252              	.LVL124:
 2253 010e 1F24     		movs	r4, #31
 2254 0110 DA6A     		ldr	r2, [r3, #44]
 2255 0112 8C40     		lsls	r4, r4, r1
 2256 0114 22EA0402 		bic	r2, r2, r4
 2257 0118 DA62     		str	r2, [r3, #44]
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2258              		.loc 1 1676 0
 2259 011a DC6A     		ldr	r4, [r3, #44]
 2260 011c 07FA01F2 		lsl	r2, r7, r1
 2261 0120 2243     		orrs	r2, r2, r4
 2262 0122 DA62     		str	r2, [r3, #44]
 2263 0124 9EE7     		b	.L244
 2264              	.LVL125:
 2265              	.L262:
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2266              		.loc 1 1690 0
 2267 0126 0F4B     		ldr	r3, .L264+8
 2268 0128 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccNVYCQk.s 			page 84


 2269 012a 22F40002 		bic	r2, r2, #8388608
 2270 012e 5A60     		str	r2, [r3, #4]
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2271              		.loc 1 1693 0
 2272 0130 5A68     		ldr	r2, [r3, #4]
 2273 0132 42F48002 		orr	r2, r2, #4194304
 2274 0136 5A60     		str	r2, [r3, #4]
 2275 0138 97E7     		b	.L248
 2276              	.LVL126:
 2277              	.L253:
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2278              		.loc 1 1631 0
 2279 013a 0220     		movs	r0, #2
 2280              	.LVL127:
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2281              		.loc 1 1725 0
 2282 013c 02B0     		add	sp, sp, #8
 2283              	.LCFI48:
 2284              		.cfi_remember_state
 2285              		.cfi_def_cfa_offset 16
 2286              		@ sp needed
 2287 013e F0BC     		pop	{r4, r5, r6, r7}
 2288              	.LCFI49:
 2289              		.cfi_restore 7
 2290              		.cfi_restore 6
 2291              		.cfi_restore 5
 2292              		.cfi_restore 4
 2293              		.cfi_def_cfa_offset 0
 2294 0140 7047     		bx	lr
 2295              	.LVL128:
 2296              	.L263:
 2297              	.LCFI50:
 2298              		.cfi_restore_state
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2299              		.loc 1 1698 0 discriminator 2
 2300 0142 112D     		cmp	r5, #17
 2301 0144 91D1     		bne	.L248
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 2302              		.loc 1 1703 0
 2303 0146 074B     		ldr	r3, .L264+8
 2304 0148 5A68     		ldr	r2, [r3, #4]
 2305 014a 22F48002 		bic	r2, r2, #4194304
 2306 014e 5A60     		str	r2, [r3, #4]
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 2307              		.loc 1 1706 0
 2308 0150 5A68     		ldr	r2, [r3, #4]
 2309 0152 42F40002 		orr	r2, r2, #8388608
 2310 0156 5A60     		str	r2, [r3, #4]
 2311 0158 87E7     		b	.L248
 2312              	.L265:
 2313 015a 00BF     		.align	2
 2314              	.L264:
 2315 015c 00200140 		.word	1073815552
 2316 0160 12000010 		.word	268435474
 2317 0164 00230140 		.word	1073816320
 2318 0168 00000000 		.word	SystemCoreClock
 2319 016c 83DE1B43 		.word	1125899907
ARM GAS  /tmp/ccNVYCQk.s 			page 85


 2320              		.cfi_endproc
 2321              	.LFE148:
 2323              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2324              		.align	1
 2325              		.p2align 2,,3
 2326              		.global	HAL_ADC_AnalogWDGConfig
 2327              		.syntax unified
 2328              		.thumb
 2329              		.thumb_func
 2330              		.fpu fpv4-sp-d16
 2332              	HAL_ADC_AnalogWDGConfig:
 2333              	.LFB149:
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2334              		.loc 1 1744 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
 2339              	.LVL129:
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2340              		.loc 1 1761 0
 2341 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2342 0004 012B     		cmp	r3, #1
 2343 0006 29D0     		beq	.L270
 2344 0008 0368     		ldr	r3, [r0]
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2345              		.loc 1 1763 0 discriminator 2
 2346 000a 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
 2347              		.loc 1 1744 0 discriminator 2
 2348 000c 30B4     		push	{r4, r5}
 2349              	.LCFI51:
 2350              		.cfi_def_cfa_offset 8
 2351              		.cfi_offset 4, -8
 2352              		.cfi_offset 5, -4
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2353              		.loc 1 1761 0 discriminator 2
 2354 000e 0124     		movs	r4, #1
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 2355              		.loc 1 1763 0 discriminator 2
 2356 0010 A242     		cmp	r2, r4
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2357              		.loc 1 1766 0 discriminator 2
 2358 0012 5A68     		ldr	r2, [r3, #4]
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2359              		.loc 1 1761 0 discriminator 2
 2360 0014 80F83C40 		strb	r4, [r0, #60]
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2361              		.loc 1 1766 0 discriminator 2
 2362 0018 0CBF     		ite	eq
 2363 001a 42F04002 		orreq	r2, r2, #64
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 2364              		.loc 1 1771 0 discriminator 2
 2365 001e 22F04002 		bicne	r2, r2, #64
 2366 0022 5A60     		str	r2, [r3, #4]
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2367              		.loc 1 1775 0 discriminator 2
ARM GAS  /tmp/ccNVYCQk.s 			page 86


 2368 0024 5A68     		ldr	r2, [r3, #4]
 2369 0026 22F44002 		bic	r2, r2, #12582912
 2370 002a 22F40072 		bic	r2, r2, #512
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2371              		.loc 1 1781 0 discriminator 2
 2372 002e D1E90045 		ldrd	r4, r5, [r1]
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2373              		.loc 1 1775 0 discriminator 2
 2374 0032 5A60     		str	r2, [r3, #4]
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2375              		.loc 1 1778 0 discriminator 2
 2376 0034 5A68     		ldr	r2, [r3, #4]
 2377 0036 2243     		orrs	r2, r2, r4
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2378              		.loc 1 1784 0 discriminator 2
 2379 0038 8C68     		ldr	r4, [r1, #8]
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2380              		.loc 1 1778 0 discriminator 2
 2381 003a 5A60     		str	r2, [r3, #4]
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2382              		.loc 1 1781 0 discriminator 2
 2383 003c 5D62     		str	r5, [r3, #36]
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2384              		.loc 1 1784 0 discriminator 2
 2385 003e 9C62     		str	r4, [r3, #40]
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2386              		.loc 1 1787 0 discriminator 2
 2387 0040 5C68     		ldr	r4, [r3, #4]
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2388              		.loc 1 1790 0 discriminator 2
 2389 0042 8A89     		ldrh	r2, [r1, #12]
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2390              		.loc 1 1787 0 discriminator 2
 2391 0044 24F01F04 		bic	r4, r4, #31
 2392 0048 5C60     		str	r4, [r3, #4]
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2393              		.loc 1 1790 0 discriminator 2
 2394 004a 5C68     		ldr	r4, [r3, #4]
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2395              		.loc 1 1793 0 discriminator 2
 2396 004c 0021     		movs	r1, #0
 2397              	.LVL130:
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2398              		.loc 1 1790 0 discriminator 2
 2399 004e 2243     		orrs	r2, r2, r4
 2400 0050 5A60     		str	r2, [r3, #4]
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2401              		.loc 1 1797 0 discriminator 2
 2402 0052 30BC     		pop	{r4, r5}
 2403              	.LCFI52:
 2404              		.cfi_restore 5
 2405              		.cfi_restore 4
 2406              		.cfi_def_cfa_offset 0
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2407              		.loc 1 1793 0 discriminator 2
 2408 0054 80F83C10 		strb	r1, [r0, #60]
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNVYCQk.s 			page 87


 2409              		.loc 1 1797 0 discriminator 2
 2410 0058 0846     		mov	r0, r1
 2411              	.LVL131:
 2412 005a 7047     		bx	lr
 2413              	.LVL132:
 2414              	.L270:
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 2415              		.loc 1 1761 0
 2416 005c 0223     		movs	r3, #2
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2417              		.loc 1 1797 0
 2418 005e 1846     		mov	r0, r3
 2419              	.LVL133:
 2420 0060 7047     		bx	lr
 2421              		.cfi_endproc
 2422              	.LFE149:
 2424 0062 00BF     		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2425              		.align	1
 2426              		.p2align 2,,3
 2427              		.global	HAL_ADC_GetState
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2431              		.fpu fpv4-sp-d16
 2433              	HAL_ADC_GetState:
 2434              	.LFB150:
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 2435              		.loc 1 1826 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              		@ link register save eliminated.
 2440              	.LVL134:
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2441              		.loc 1 1828 0
 2442 0000 006C     		ldr	r0, [r0, #64]
 2443              	.LVL135:
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2444              		.loc 1 1829 0
 2445 0002 7047     		bx	lr
 2446              		.cfi_endproc
 2447              	.LFE150:
 2449              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2450              		.align	1
 2451              		.p2align 2,,3
 2452              		.global	HAL_ADC_GetError
 2453              		.syntax unified
 2454              		.thumb
 2455              		.thumb_func
 2456              		.fpu fpv4-sp-d16
 2458              	HAL_ADC_GetError:
 2459              	.LFB151:
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2460              		.loc 1 1838 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccNVYCQk.s 			page 88


 2464              		@ link register save eliminated.
 2465              	.LVL136:
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2466              		.loc 1 1839 0
 2467 0000 406C     		ldr	r0, [r0, #68]
 2468              	.LVL137:
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 2469              		.loc 1 1840 0
 2470 0002 7047     		bx	lr
 2471              		.cfi_endproc
 2472              	.LFE151:
 2474              		.text
 2475              	.Letext0:
 2476              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2477              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2478              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2479              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2480              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 2481              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2482              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2483              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2484              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2485              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc_ex.h"
 2486              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccNVYCQk.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccNVYCQk.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccNVYCQk.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccNVYCQk.s:41     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccNVYCQk.s:49     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccNVYCQk.s:327    .text.HAL_ADC_Init:000000000000015c $d
     /tmp/ccNVYCQk.s:335    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccNVYCQk.s:343    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccNVYCQk.s:354    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccNVYCQk.s:362    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccNVYCQk.s:434    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccNVYCQk.s:442    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccNVYCQk.s:614    .text.HAL_ADC_Start:00000000000000c8 $d
     /tmp/ccNVYCQk.s:622    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccNVYCQk.s:630    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccNVYCQk.s:682    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccNVYCQk.s:690    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccNVYCQk.s:832    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccNVYCQk.s:840    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccNVYCQk.s:941    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccNVYCQk.s:949    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccNVYCQk.s:1127   .text.HAL_ADC_Start_IT:00000000000000d4 $d
     /tmp/ccNVYCQk.s:1135   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccNVYCQk.s:1143   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccNVYCQk.s:1200   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccNVYCQk.s:1208   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccNVYCQk.s:1407   .text.HAL_ADC_Start_DMA:00000000000000ec $d
     /tmp/ccNVYCQk.s:1948   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccNVYCQk.s:1583   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccNVYCQk.s:1909   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccNVYCQk.s:1418   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccNVYCQk.s:1426   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccNVYCQk.s:1512   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccNVYCQk.s:1520   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccNVYCQk.s:1538   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccNVYCQk.s:1546   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccNVYCQk.s:1557   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccNVYCQk.s:1565   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccNVYCQk.s:1576   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccNVYCQk.s:1607   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccNVYCQk.s:1615   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccNVYCQk.s:1626   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccNVYCQk.s:1634   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccNVYCQk.s:1645   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccNVYCQk.s:1653   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccNVYCQk.s:1902   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccNVYCQk.s:1941   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccNVYCQk.s:2052   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccNVYCQk.s:2060   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccNVYCQk.s:2315   .text.HAL_ADC_ConfigChannel:000000000000015c $d
     /tmp/ccNVYCQk.s:2324   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccNVYCQk.s:2332   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccNVYCQk.s:2425   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccNVYCQk.s:2433   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccNVYCQk.s:2450   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccNVYCQk.s:2458   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
ARM GAS  /tmp/ccNVYCQk.s 			page 90



UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_InjectedConvCpltCallback
